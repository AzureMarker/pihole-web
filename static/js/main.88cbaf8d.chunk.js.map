{"version":3,"sources":["config.tsx","components/common/context/TimeRangeContext.tsx","util/dateRanges.tsx","components/dashboard/TimeRangeSelector.tsx","config.production.tsx","util/http.tsx","util/api.tsx","components/common/Header.tsx","util/index.tsx","util/result.ts","components/common/WithAPIData.tsx","components/common/context/StatusContext.tsx","components/common/StatusBadge.tsx","components/common/NavDropdown.tsx","components/common/Sidebar.tsx","components/common/FooterUpdateStatus.tsx","components/common/Footer.tsx","components/dashboard/SummaryStats.tsx","components/dashboard/QueriesGraph.tsx","components/dashboard/ChartTooltip.tsx","components/dashboard/ClientsGraph.tsx","components/dashboard/GenericDoughnutChart.tsx","components/dashboard/QueryTypesChart.tsx","components/dashboard/UpstreamsChart.tsx","components/dashboard/TopTable.tsx","components/dashboard/TopDomains.tsx","components/dashboard/TopBlocked.tsx","components/dashboard/TopClients.tsx","components/log/QueryLog.tsx","components/list/DomainInput.tsx","components/common/Alert.tsx","components/list/DomainList.tsx","components/list/ListPage.tsx","util/validate.tsx","views/Whitelist.tsx","views/Blacklist.tsx","views/Regexlist.tsx","components/settings/VersionCard.tsx","components/settings/VersionInfo.tsx","components/settings/DHCPInfo.tsx","components/settings/DnsListItem.tsx","components/settings/preconfiguredUpstreams.tsx","components/settings/DnsListNewItem.tsx","components/settings/DnsList.tsx","components/settings/ConditionalForwardingSettings.tsx","components/settings/DnsOptionSettings.tsx","components/settings/DNSInfo.tsx","components/settings/NetworkInfo.tsx","components/settings/FTLInfo.tsx","views/Networking.tsx","components/login/ForgotPassword.tsx","views/Login.tsx","views/Logout.tsx","components/common/NavButton.tsx","components/common/EnableDisable.tsx","components/common/context/PreferencesContext.tsx","components/settings/PreferenceSettings.tsx","routes.tsx","views/Dashboard.tsx","views/Versions.tsx","views/Preferences.tsx","components/common/context/index.tsx","components/common/LayoutApplier.tsx","components/common/LanguageApplier.tsx","containers/Full.tsx","index.tsx","util/i18n.tsx","img/logo.svg"],"names":["config","initialContext","range","update","TimeRangeContext","React","createContext","TimeRangeProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","setRange","react_default","a","createElement","Provider","value","now","moment","oneDayAgo","subtract","startOfDay","startOf","startOfYesterday","endOfYesterday","endOf","lastWeek","lastMonth","startOfMonth","startOfLastMonth","endOfLastMonth","startOfYear","epoch","dateRanges","t","defineProperty","TranslatedTimeRangeSelector","withNamespaces","props","onSelect","translatedDateRanges","last24Hours","today","label","showLabel","name","from","toDate","toLocaleString","until","renderLabel","bundle_default","startDate","endDate","maxDate","onApply","event","picker","isSame","chosenLabel","timePicker","showDropdowns","ranges","Button","color","size","className","react","TimeRangeSelectorContainer","Consumer","context","developmentMode","fakeAPI","http","url","options","arguments","length","undefined","fetch","urlFor","objectSpread","credentials","credentialType","then","checkIfLoggedOut","convertJSON","catch","checkForErrors","data","method","body","JSON","stringify","headers","Headers","Content-Type","response","api","loggedIn","status","document","cookie","window","location","reload","Promise","reject","isCanceled","resolve","Error","json","error","endpoint","paramsToString","params","keys","map","key","join","timeRangeToParams","unix","authenticate","X-Pi-hole-Authenticate","logout","getSummary","getSummaryDb","getHistoryGraph","getHistoryGraphDb","interval","getClientsGraph","getClientsGraphDb","getQueryTypes","getQueryTypesDb","getUpstreams","getUpstreamsDb","getTopDomains","getTopDomainsDb","getTopBlocked","getTopBlockedDb","getTopClients","getTopClientsDb","getHistory","getWhitelist","getBlacklist","getRegexlist","addWhitelist","domain","addBlacklist","addRegexlist","removeWhitelist","removeBlacklist","removeRegexlist","encodeURIComponent","getStatus","setStatus","action","time","getNetworkInfo","getVersion","getFTLdb","getDNSInfo","getDHCPInfo","updateDHCPInfo","settings","updateDNSInfo","getPreferences","updatePreferences","sidebarMinimize","e","preventDefault","classList","toggle","mobileSidebarToggle","mobileSidebarHide","remove","Header","style","marginLeft","onClick","type","Link","to","textAlign","lineHeight","pathname","endsWith","TimeRangeSelector_TimeRangeSelectorContainer","padNumber","num","substr","getIntervalForRange","Math","ceil","makeCancelable","promise","hasCanceled","repeatId","handle","val","isError","setTimeout","repeat","cancel","clearTimeout","ignoreCancel","err","Ok","classCallCheck","this","createClass","Err","WithAPIData","_Component","_getPrototypeOf2","_this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","apiResult","dataHandle","loadData","cancelOptions","repeatOptions","setState","apiCall","inherits","prevProps","prevState","snapshot","flushOnUpdate","isOk","renderOk","unwrap","renderErr","unwrapErr","renderInitial","Component","defaultProps","refresh","StatusContext","StatusProvider","objectWithoutProperties","WithAPIData_WithAPIData","assign","_","StatusBadge","isEnabled","TranslatedStatusBadge","common_StatusBadge","NavDropdown","icon","isOpen","handleDropdownClick","target","parentElement","navList","items","item","index","auth","authStrict","customComponent","startsWith","navDropdown","NavItem","NavLink","activeClassName","navItem","Nav","src","logo","height","alt","paddingLeft","textTransform","fontSize","marginBottom","href","common_FooterUpdateStatus","SummaryStats","totalQueries","count","uniqueClients","blockedQueries","percentBlocked","gravityDomains","errorProps","initialProps","TranslatedSummaryStats","dashboard_SummaryStats","total_queries","reduce","total","queryType","blocked_queries","percent_blocked","toFixed","gravity_size","total_clients","transformData","QueriesGraph","labels","datasets","domains_over_time","fill","backgroundColor","borderColor","pointBorderColor","pointRadius","pointHoverRadius","pointHitRadius","cubicInterpolationMode","blocked_over_time","tooltips","enabled","mode","callbacks","title","tooltipItem","xLabel","match","hour","parseInt","minute","tooltipItems","datasetIndex","percentage","blocked","yLabel","legend","display","scales","xAxes","unit","timeUnit","displayFormats","tooltipFormat","yAxes","ticks","beginAtZero","maintainAspectRatio","rangeName","react_chartjs_2_es","width","loading","background","position","top","left","loadingProps","TranslatedQueriesGraph","dashboard_QueriesGraph","diff","slice","step","Date","timestamp","ChartTooltip","tooltip","_this2","lastTime","handler","custom","opacity","chart","current","chartInstance","canvas","getBoundingClientRect","caretX","offsetWidth","caretY","scrollY","fontFamily","_bodyFontFamily","bodyFontSize","fontStyle","_bodyFontStyle","padding","yPadding","xPadding","lines","i","colors","labelColors","sort","b","split","localeCompare","borderWidth","ClientsGraph","graphRef","createRef","itemSort","stacked","ref","ReactDOM","createPortal","dashboard_ChartTooltip","TranslatedClientsGraph","dashboard_ClientsGraph","overTime","over_time","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","clients","Symbol","iterator","next","done","client","push","ip","random","toString","padStart","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","destination","hasOwnProperty","GenericDoughnutChart","chartRef","handleClick","legendItems","forceUpdate","dataset","meta","getDatasetMeta","hidden","toConsumableArray","_ref2","dashboard_GenericDoughnutChart","_ref3","apiHandler","GenericDoughnutChart_GenericDoughnutChart","apiData","usedColors","entry","percent","QueryTypesChart","previous","QueryTypesChart_QueryTypesChart","UpstreamsChart","upstreams","upstream","UpstreamsChart_UpstreamsChart","TopTable","generateTable","isEmpty","emptyMessage","header","generateRows","overflowX","dashboard_TopTable","initialData","TopTable_TopTable","topDomains","top_domains","verticalAlign","TopDomains","TopDomains_TopDomains","totalBlocked","topBlocked","TopBlocked","TopBlocked_TopBlocked","topClients","top_clients","TopClients","TopClients_TopClients","getDefaultRange","QueryLog","updateHandler","history","cursor","atEnd","filtersChanged","filters","getRowProps","rowInfo","row","includes","parseFilters","tableFilters","filter","id","query_type","dnssec","reply","fetchQueries","page","pageSize","react_table_es","columns","showPaginationTop","sortable","filterable","onFetchData","filtered","debounce","onFilteredChange","getTrProps","ofText","PadRowComponent","dnssecColor","replyTypes","queryTypes","selectionFilter","extras","onChange","extra","accessor","r","Cell","date","month","toLocaleDateString","i18n","language","dayOfMonth","getDate","getHours","getMinutes","second","getSeconds","filterMethod","Filter","_Filter","_x","minWidth","response_time","DomainInput","isValid","handleChange","handleSubmit","onEnter","onValidationError","_this$props","placeholder","onRefresh","onSubmit","disabled","Alert","message","domains","onRemove","marginTop","role","ListPage","messageType","addHandler","removeHandler","refreshHandler","onAlreadyAdded","prevDomains","add","onAdded","onAddFailed","onAdding","onRemoved","onRemoveFailed","handleValidationError","validationErrorMsg","list_DomainInput","note","common_Alert","list_DomainList","isValidHostname","hostname","segments","some","segment","isPositiveNumber","test","isValidDomain","input","isValidRegex","regex","RegExp","isValidIpv4","address","every","list_ListPage","VersionCard","collapsed","branch","tag","Collapse","hash","VersionInfo","settings_VersionCard","core","ftl","web","TranslatedVersionInfo","settings_VersionInfo","DHCPInfo","alertMessage","alertType","showAlert","processing","active","ip_start","ip_end","router_ip","lease_time","ipv6_support","loadHandler","loadDHCPInfo","res","attr","oldState","saveSettings","isSettingValid","validator","hideAlert","isIpStartValid","isIpEndValid","isRouterIpValid","isLeaseTimeValid","isDomainValid","alert","Form","FormGroup","check","Label","Input","checked","for","sm","Col","invalid","InputGroup","InputGroupAddon","addonType","DnsListItem","ListGroupItem","preconfiguredUpstreamOptions","primaryIpv4","secondaryIpv4","primaryIpv6","secondaryIpv6","flatMap","parseUpstream","order","parsedUpstreams","DnsListNewItem","selected","typeahead","getAddress","isAddressValid","lib","onInputChange","emptyLabel","bodyContainer","onAdd","getInstance","clear","isValidIpv4OptionalPort","DnsList","ListGroup","overflowY","maxHeight","settings_DnsListItem","_onRemove","settings_DnsListNewItem","ConditionalForwardingSettings","onUpdate","routerIp","DnsOptionSettings","listeningType","fqdnRequired","bogusPriv","DNSInfo","upstreamDns","conditionalForwarding","loadDNSInfo","savedDomain","conditional_forwarding","upstream_dns","fqdn_required","bogus_priv","listening_type","handleUpstreamAdd","handleUpstreamRemove","handleConditionalForwardingUpdate","handleDnsOptionsUpdate","isCFSettingValid","settings_DnsList","settings_ConditionalForwardingSettings","settings_DnsOptionSettings","NetworkInfo","plaintext","readOnly","interface","ipv4Address","ipv6Address","TranslatedNetworkInfo","settings_NetworkInfo","ipv4_address","ipv6_address","FTLInfo","queries","fileSize","sqliteVersion","TranslatedFTLInfo","settings_FTLInfo","filesize","sqlite_version","Networking","activeTab","setTab","tab","es_NavLink","tabContent","component","TabPane","tabId","tabs","TabContent","settings_DHCPInfo","settings_DNSInfo","ForgotPassword","isExpanded","paddingRight","margin","Login","password","cookiesEnabled","handlePasswordChange","handleKeyDown","hashedPassword","sha","digest","console","log","locationState","navigator","cookieEnabled","Redirect","float","routes","host","onKeyDown","autoFocus","login_ForgotPassword","Logout","NavButton","_ref$onClick","EnableDisable","customModalShown","customTime","customMultiplier","getStatusFromAction","finally","toggleModal","submitCustom","renderModal","Modal","maxWidth","ModalHeader","ModalBody","ModalFooter","TranslatedEnableDisable","defaultPreferences","layout","loadInitialPreferences","cachedPreferencesString","localStorage","getItem","parse","PreferencesContext","PreferencesProvider","setItem","PreferenceSettings","translateMessage","loadPreferences","apiError","getAlertMessage","languages","TranslatedPreferenceSettings","settings_PreferenceSettings","/dashboard","/query-log","/whitelist","/blacklist/exact","/blacklist/regex","/settings/versions","/settings/networking","/settings/preferences","/login","/logout","nav","dashboard_QueryTypesChart","dashboard_UpstreamsChart","dashboard_TopDomains","dashboard_TopBlocked","dashboard_TopClients","Whitelist","Blacklist","Regexlist","fakeRoute","GlobalContextProvider","StatusContext_StatusProvider","PreferencesContext_PreferencesProvider","TimeRangeContext_TimeRangeProvider","LayoutApplier","applyLayout","LanguageApplier","changeLanguage","createRoute","routeData","Full_AuthRoute","path","Route","AuthRoute","authProps","render","use","XHR","LanguageDetector","reactI18nextModule","init","fallbackLng","whitelist","ns","defaultNS","fallbackNS","nsSeparator","keySeparator","returnEmptyString","debug","interpolation","escapeValue","backend","loadPath","wait","BrowserRouter","basename","process","Switch","context_GlobalContextProvider","common_Sidebar","exact","common_Footer","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.88cbaf8d.chunk.js","sourcesContent":["/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Config handler\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport developmentConfig from \"./config.development\";\nimport productionConfig from \"./config.production\";\n\nexport interface Config {\n  developmentMode: boolean;\n  fakeAPI: boolean;\n}\n\nlet config: Config;\n\nif (process.env.NODE_ENV === \"development\") {\n  config = developmentConfig;\n} else {\n  config = productionConfig;\n}\n\nif (process.env.REACT_APP_FAKE_API) {\n  config.fakeAPI = true;\n}\n\nexport default config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Context used for sharing a time range\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Moment } from \"moment\";\nimport React, { ReactNode, useState } from \"react\";\n\n/**\n * Represents a range of time\n */\nexport interface TimeRange {\n  from: Moment;\n  until: Moment;\n  name: string;\n}\n\n/**\n * The type of the data shared by the time range context\n */\nexport interface TimeRangeContextType {\n  range: TimeRange | null;\n\n  /**\n   * Update the time range\n   *\n   * @param range The new time range\n   */\n  update: (range: TimeRange | null) => void;\n}\n\n/**\n * The initial data shared by the time range context\n */\nconst initialContext: TimeRangeContextType = {\n  range: null,\n  update: () => {}\n};\n\n/**\n * The React context which provides the time range to consumers\n */\nexport const TimeRangeContext = React.createContext(initialContext);\n\n/**\n * Provide the time range via React context.\n * Sub-components can use the `TimeRangeContext.Consumer` component to get the\n * time range.\n */\nexport const TimeRangeProvider = ({ children }: { children: ReactNode }) => {\n  const [range, setRange] = useState(initialContext.range);\n\n  return (\n    <TimeRangeContext.Provider value={{ range, update: setRange }}>\n      {children}\n    </TimeRangeContext.Provider>\n  );\n};\n","import moment, { Moment } from \"moment\";\nimport i18next from \"i18next\";\n\nconst now = moment();\nconst oneDayAgo = moment().subtract(1, \"day\");\nconst startOfDay = moment().startOf(\"day\");\nconst startOfYesterday = moment()\n  .subtract(1, \"days\")\n  .startOf(\"day\");\nconst endOfYesterday = moment()\n  .subtract(1, \"days\")\n  .endOf(\"day\");\nconst lastWeek = moment().subtract(7, \"days\");\nconst lastMonth = moment().subtract(30, \"days\");\nconst startOfMonth = moment().startOf(\"month\");\nconst startOfLastMonth = moment()\n  .subtract(1, \"month\")\n  .startOf(\"month\");\nconst endOfLastMonth = moment()\n  .subtract(1, \"month\")\n  .endOf(\"month\");\nconst startOfYear = moment().startOf(\"year\");\nconst epoch = moment(0);\n\n/**\n * Preconfigured date ranges for use in a date range picker. The keys are\n * translated, so this object must be computed using the translation function.\n *\n * @param t The translation function\n */\nexport const dateRanges: (\n  t: i18next.TranslationFunction\n) => { [name: string]: [Moment, Moment] } = t => ({\n  [t(\"Last 24 Hours\")]: [oneDayAgo, now],\n  [t(\"Today\")]: [startOfDay, now],\n  [t(\"Yesterday\")]: [startOfYesterday, endOfYesterday],\n  [t(\"Last 7 Days\")]: [lastWeek, now],\n  [t(\"Last 30 Days\")]: [lastMonth, now],\n  [t(\"This Month\")]: [startOfMonth, now],\n  [t(\"Last Month\")]: [startOfLastMonth, endOfLastMonth],\n  [t(\"This Year\")]: [startOfYear, now],\n  [t(\"All Time\")]: [epoch, now]\n});\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Selector For Time Range Context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Button } from \"reactstrap\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { dateRanges } from \"../../util/dateRanges\";\n\nexport interface TimeRangeSelectorProps {\n  /**\n   * The range to show\n   */\n  range: TimeRange | null;\n\n  /**\n   * Called when a new range is selected\n   *\n   * @param range The new range, or null if \"Last 24 Hours\" is selected\n   */\n  onSelect: (range: TimeRange | null) => void;\n\n  /**\n   * If the chosen label should be shown outside of the selector\n   */\n  showLabel: boolean;\n}\n\n/**\n * Get the label to be shown next to the selector button\n *\n * @param props The selector props\n */\nconst renderLabel = (\n  props: TimeRangeSelectorProps & WithNamespaces\n): string | null => {\n  const { t } = props;\n\n  if (!props.showLabel) {\n    return null;\n  }\n\n  if (!props.range) {\n    return t(\"Last 24 Hours\");\n  }\n\n  if (props.range.name === \"Custom Range\") {\n    return (\n      props.range.from.toDate().toLocaleString() +\n      \" - \" +\n      props.range.until.toDate().toLocaleString()\n    );\n  }\n\n  return props.range.name;\n};\n\n/**\n * A time range selector which shows the selected time range (label if\n * predefined, or time range if custom)\n */\nexport const TimeRangeSelector = (\n  props: TimeRangeSelectorProps & WithNamespaces\n) => {\n  const { range, onSelect, t } = props;\n\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n  const today = t(\"Today\");\n  const label = renderLabel(props);\n\n  return (\n    <DateRangePicker\n      startDate={range ? range.from : translatedDateRanges[last24Hours][0]}\n      endDate={range ? range.until : translatedDateRanges[last24Hours][1]}\n      maxDate={translatedDateRanges[today][1]}\n      onApply={(event, picker) => {\n        if (\n          picker.startDate.isSame(translatedDateRanges[last24Hours][0]) &&\n          picker.endDate.isSame(translatedDateRanges[last24Hours][1])\n        ) {\n          // Set to null so we fetch data from FTL instead of the database\n          onSelect(null);\n        } else {\n          // Set the time range so we fetch from the database\n          onSelect({\n            from: picker.startDate,\n            until: picker.endDate,\n            name: picker.chosenLabel\n          });\n        }\n      }}\n      timePicker={true}\n      showDropdowns={true}\n      ranges={translatedDateRanges}\n    >\n      <Button color=\"light\" size=\"sm\">\n        <i className=\"far fa-clock fa-lg\" />\n        {label ? (\n          <Fragment>\n            &nbsp; &nbsp;\n            {label}\n          </Fragment>\n        ) : null}\n      </Button>\n    </DateRangePicker>\n  );\n};\n\nexport const TranslatedTimeRangeSelector = withNamespaces(\"time-ranges\")(\n  TimeRangeSelector\n);\n\nexport const TimeRangeSelectorContainer = () => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TranslatedTimeRangeSelector\n        range={context.range}\n        onSelect={context.update}\n        showLabel={true}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Production config\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Config } from \"./config\";\n\nexport default {\n  developmentMode: false,\n  fakeAPI: false\n} as Config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Basic HTTP functions for accessing API endpoints\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport api from \"./api\";\nimport config from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\n/**\n * A group of HTTP functions. Each function parses the response checks for\n * errors\n */\nexport default {\n  /**\n   * Perform a GET request\n   *\n   * @param url the URL to access\n   * @param options optional fetch configuration\n   * @returns {Promise<any>} a promise with the data or error returned\n   */\n  get(url: string, options = {}) {\n    return fetch(urlFor(url), {\n      credentials: credentialType(),\n      ...options\n    })\n      .then(checkIfLoggedOut)\n      .then(convertJSON)\n      .catch(convertJSON)\n      .then(checkForErrors);\n  },\n\n  /**\n   * Perform a POST request\n   *\n   * @param url the URL to access\n   * @param data the data to send\n   * @returns {Promise<any>} a promise with the data or error returned\n   */\n  post(url: string, data: {}) {\n    return fetch(urlFor(url), {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: credentialType()\n    })\n      .then(checkIfLoggedOut)\n      .then(convertJSON)\n      .catch(convertJSON)\n      .then(checkForErrors);\n  },\n\n  /**\n   * Perform a PUT request\n   *\n   * @param url the URL to access\n   * @param data the data to send\n   * @returns {Promise<any>} a promise with the data or error returned\n   */\n  put(url: string, data: {}) {\n    return fetch(urlFor(url), {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: credentialType()\n    })\n      .then(checkIfLoggedOut)\n      .then(convertJSON)\n      .catch(convertJSON)\n      .then(checkForErrors);\n  },\n\n  /**\n   * Perform a DELETE request\n   *\n   * @param url the URL to access\n   * @returns {Promise<any>} a promise with the data or error returned\n   */\n  delete(url: string) {\n    return fetch(urlFor(url), {\n      method: \"DELETE\",\n      credentials: credentialType()\n    })\n      .then(checkIfLoggedOut)\n      .then(convertJSON)\n      .catch(convertJSON)\n      .then(checkForErrors);\n  }\n};\n\n/**\n * If the user is logged in, check if the user's session has lapsed.\n * If so, log them out and refresh the page.\n *\n * @param response the Response from fetch\n * @return {Promise} if logged in, the response, otherwise a canceled promise\n */\nconst checkIfLoggedOut = (response: Response) => {\n  if (api.loggedIn && response.status === 401) {\n    // Clear the user's old session and refresh the page\n    document.cookie =\n      \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    window.location.reload();\n    return Promise.reject({ isCanceled: true });\n  }\n\n  return Promise.resolve(response);\n};\n\n/**\n * If the input is a Response, return a promise for parsing the JSON.\n * If the input is an Error, return a rejecting promise with error.\n * If the request was canceled, return a rejecting promise with cancel object.\n *\n * @param data a Response or Error\n * @returns {*} a promise with the parsed JSON, or the error\n */\nconst convertJSON = (data: any): Promise<any> => {\n  if (data.isCanceled || data instanceof Error) {\n    return Promise.reject(data);\n  }\n\n  return data.json();\n};\n\n/**\n * Check for an error returned by the API\n *\n * @param data the parsed JSON body of the response\n * @returns {*} a resolving promise with the data if no error, otherwise a\n * rejecting promise with the error\n */\nconst checkForErrors = (data: any): Promise<any> => {\n  if (data.error) {\n    return Promise.reject(data.error);\n  }\n\n  return Promise.resolve(data);\n};\n\n/**\n * Get the URL for an endpoint\n *\n * @param endpoint the endpoint\n * @returns {string} the URL for the endpoint\n */\nconst urlFor = (endpoint: string): string => {\n  let apiLocation;\n\n  if (config.fakeAPI) {\n    apiLocation = process.env.PUBLIC_URL + \"/fakeAPI\";\n  } else {\n    apiLocation = \"/admin/api\";\n  }\n\n  return apiLocation + \"/\" + endpoint;\n};\n\n/**\n * Get the credential type for requests\n *\n * @returns {string} the credential type\n */\nconst credentialType = () => {\n  // Development API requests use a different origin (pi.hole) since it is running off of the developer's machine.\n  // Therefore, allow credentials to be used across origins when in development mode.\n  return config.developmentMode ? \"include\" : \"same-origin\";\n};\n\n/**\n * Convert an object into GET parameters. The object must be flat (only\n * key-value pairs).\n *\n * @param params the parameters object\n * @returns {string} the parameters converted into GET parameter form\n */\nexport const paramsToString = (params: any) =>\n  Object.keys(params)\n    .map(key => key + \"=\" + params[key])\n    .join(\"&\");\n\n/**\n * Convert a time range into GET parameters\n *\n * @param range The time range to convert\n * @return The time range as GET parameters\n */\nexport const timeRangeToParams = (range: TimeRange) =>\n  paramsToString({\n    from: range.from.unix(),\n    until: range.until.unix()\n  });\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * API functions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport http, { paramsToString, timeRangeToParams } from \"./http\";\nimport config from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\nexport default {\n  loggedIn: false,\n  authenticate(key: string) {\n    return http.get(\"auth\", {\n      headers: new Headers({ \"X-Pi-hole-Authenticate\": key })\n    });\n  },\n  logout() {\n    return http.delete(\"auth\");\n  },\n  getSummary(): Promise<ApiSummary> {\n    return http.get(\"stats/summary\");\n  },\n  getSummaryDb(range: TimeRange): Promise<ApiSummary> {\n    return http.get(\"stats/database/summary?\" + timeRangeToParams(range));\n  },\n  getHistoryGraph(): Promise<Array<ApiHistoryGraphItem>> {\n    return http.get(\"stats/overTime/history\");\n  },\n  getHistoryGraphDb(\n    range: TimeRange,\n    interval: number\n  ): Promise<Array<ApiHistoryGraphItem>> {\n    return http.get(\n      \"stats/database/overTime/history?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  },\n  getClientsGraph(): Promise<ApiClientsGraph> {\n    return http.get(\"stats/overTime/clients\");\n  },\n  getClientsGraphDb(\n    range: TimeRange,\n    interval: number\n  ): Promise<ApiClientsGraph> {\n    return http.get(\n      \"stats/database/overTime/clients?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  },\n  getQueryTypes(): Promise<Array<ApiQueryType>> {\n    return http.get(\"stats/query_types\");\n  },\n  getQueryTypesDb(range: TimeRange): Promise<Array<ApiQueryType>> {\n    return http.get(\"stats/database/query_types?\" + timeRangeToParams(range));\n  },\n  getUpstreams(): Promise<ApiUpstreams> {\n    return http.get(\"stats/upstreams\");\n  },\n  getUpstreamsDb(range: TimeRange): Promise<ApiUpstreams> {\n    return http.get(\"stats/database/upstreams?\" + timeRangeToParams(range));\n  },\n  getTopDomains(): Promise<ApiTopDomains> {\n    return http.get(\"stats/top_domains\");\n  },\n  getTopDomainsDb(range: TimeRange): Promise<ApiTopDomains> {\n    return http.get(\"stats/database/top_domains?\" + timeRangeToParams(range));\n  },\n  getTopBlocked(): Promise<ApiTopBlocked> {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = config.fakeAPI\n      ? \"stats/top_blocked\"\n      : \"stats/top_domains?blocked=true\";\n\n    return http.get(url);\n  },\n  getTopBlockedDb(range: TimeRange): Promise<ApiTopBlocked> {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = config.fakeAPI\n      ? \"stats/database/top_blocked?\"\n      : \"stats/database/top_domains?blocked=true&\";\n\n    return http.get(url + timeRangeToParams(range));\n  },\n  getTopClients(): Promise<ApiTopClients> {\n    return http.get(\"stats/top_clients\");\n  },\n  getTopClientsDb(range: TimeRange): Promise<ApiTopClients> {\n    return http.get(\"stats/database/top_clients?\" + timeRangeToParams(range));\n  },\n  getHistory(params: any): Promise<ApiHistoryResponse> {\n    return http.get(\"stats/history?\" + paramsToString(params));\n  },\n  getWhitelist() {\n    return http.get(\"dns/whitelist\");\n  },\n  getBlacklist() {\n    return http.get(\"dns/blacklist\");\n  },\n  getRegexlist() {\n    return http.get(\"dns/regexlist\");\n  },\n  addWhitelist(domain: string) {\n    return http.post(\"dns/whitelist\", { domain: domain });\n  },\n  addBlacklist(domain: string) {\n    return http.post(\"dns/blacklist\", { domain: domain });\n  },\n  addRegexlist(domain: string) {\n    return http.post(\"dns/regexlist\", { domain: domain });\n  },\n  removeWhitelist(domain: string) {\n    return http.delete(\"dns/whitelist/\" + domain);\n  },\n  removeBlacklist(domain: string) {\n    return http.delete(\"dns/blacklist/\" + domain);\n  },\n  removeRegexlist(domain: string) {\n    return http.delete(\"dns/regexlist/\" + encodeURIComponent(domain));\n  },\n  getStatus(): Promise<ApiStatus> {\n    return http.get(\"dns/status\");\n  },\n  setStatus(action: StatusAction, time?: number) {\n    return http.post(\"dns/status\", { action, time });\n  },\n  getNetworkInfo(): Promise<ApiNetworkSettings> {\n    return http.get(\"settings/network\");\n  },\n  getVersion(): Promise<ApiVersions> {\n    return http.get(\"version\");\n  },\n  getFTLdb(): Promise<ApiFtlDbResponse> {\n    return http.get(\"settings/ftldb\");\n  },\n  getDNSInfo(): Promise<ApiDnsSettings> {\n    return http.get(\"settings/dns\");\n  },\n  getDHCPInfo(): Promise<ApiDhcpSettings> {\n    return http.get(\"settings/dhcp\");\n  },\n  updateDHCPInfo(settings: ApiDhcpSettings) {\n    return http.put(\"settings/dhcp\", settings);\n  },\n  updateDNSInfo(settings: ApiDnsSettings) {\n    return http.put(\"settings/dns\", settings);\n  },\n  getPreferences(): Promise<ApiPreferences> {\n    return http.get(\"settings/web\");\n  },\n  updatePreferences(settings: ApiPreferences) {\n    return http.put(\"settings/web\", settings);\n  }\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Header component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { MouseEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TimeRangeSelectorContainer } from \"../dashboard/TimeRangeSelector\";\nimport api from \"../../util/api\";\n\n//const sidebarToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('sidebar-hidden');\n//};\n\nconst sidebarMinimize = (e: MouseEvent) => {\n  e.preventDefault();\n  document.body.classList.toggle(\"sidebar-minimized\");\n  document.body.classList.toggle(\"brand-minimized\");\n};\n\nexport const mobileSidebarToggle = () => {\n  document.body.classList.toggle(\"sidebar-show\");\n};\n\nexport const mobileSidebarHide = () => {\n  document.body.classList.remove(\"sidebar-show\");\n};\n\n//const asideToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('aside-menu-hidden');\n//};\n\nexport default () => (\n  <header className=\"app-header navbar\">\n    <button\n      className=\"navbar-toggler d-lg-none\"\n      style={{ marginLeft: \"16px\" }}\n      onClick={mobileSidebarToggle}\n      type=\"button\"\n    >\n      &#9776;\n    </button>\n    <Link\n      to=\"/dashboard\"\n      className=\"navbar-brand\"\n      style={{ textAlign: \"center\" }}\n    >\n      <span style={{ color: \"white\", lineHeight: \"40px\" }}>\n        <span className=\"navbar-brand-full\">\n          Pi-\n          <b>hole</b>\n        </span>\n        <span className=\"navbar-brand-minimized\">\n          P<b>h</b>\n        </span>\n      </span>\n    </Link>\n    <ul className=\"nav navbar-nav d-md-down-none mr-auto\">\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link navbar-toggler sidebar-toggler\"\n          type=\"button\"\n          onClick={sidebarMinimize}\n        >\n          &#9776;\n        </button>\n      </li>\n      {api.loggedIn && window.location.pathname.endsWith(\"/dashboard\") ? (\n        <li>\n          <TimeRangeSelectorContainer />\n        </li>\n      ) : null}\n    </ul>\n  </header>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Various utilities\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\n/**\n * Pad a two digit number\n *\n * @param num the number\n * @returns {string} a padding number string\n */\nexport const padNumber = (num: number) => {\n  return (\"00\" + num).substr(-2, 2);\n};\n\n/**\n * Dynamically calculate a time interval so there are always 144 data points\n * (144 so that every point represents 10 minutes when the range is 24 hours)\n *\n * @param range The range to find the interval for\n */\nexport const getIntervalForRange = (range: TimeRange): number => {\n  return Math.ceil((range.until.unix() - range.from.unix()) / 144);\n};\n\nexport interface CancelablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\nexport interface CancelableOptions {\n  /**\n   * The function to call to repeat the promise\n   */\n  repeat: () => void;\n\n  /**\n   * The amount of time to wait until repeating\n   */\n  interval: number;\n}\n\n/**\n * Make a promise cancelable and repeatable\n *\n * @param promise the promise\n * @param options the interval repeat options\n * @returns {{promise: Promise<T>, cancel(): void}} a handle on the cancelable\n * promise\n */\nexport function makeCancelable<T>(\n  promise: Promise<T>,\n  options?: CancelableOptions\n): CancelablePromise<T> {\n  let hasCanceled = false;\n  let repeatId: NodeJS.Timeout | null = null;\n\n  const handle = (\n    resolve: (value: any) => void,\n    reject: (error: any) => void,\n    val: T,\n    isError: boolean\n  ) => {\n    if (hasCanceled) reject({ isCanceled: true });\n    else {\n      if (isError) reject(val);\n      else resolve(val);\n\n      if (options) repeatId = setTimeout(options.repeat, options.interval);\n    }\n  };\n\n  const wrappedPromise: Promise<T> = new Promise((resolve, reject) => {\n    promise.then(\n      val => handle(resolve, reject, val, false),\n      error => handle(resolve, reject, error, true)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      if (repeatId !== null) {\n        clearTimeout(repeatId);\n      }\n      hasCanceled = true;\n    }\n  };\n}\n\n/**\n * Ignore canceled promises (pass into a promise's catch function)\n *\n * @param err the error from catching the promise\n */\nexport const ignoreCancel = (err: any) => {\n  if (!err.isCanceled) throw err;\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Result types\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * A type which can be either Ok or Err, with some associated data.\n */\nexport interface Result<T, E> {\n  isOk(): boolean;\n  isErr(): boolean;\n  unwrap(): T;\n  unwrapErr(): E;\n}\n\nexport class Ok<T, E> implements Result<T, E> {\n  constructor(private value: T) {}\n\n  isErr(): boolean {\n    return false;\n  }\n\n  isOk(): boolean {\n    return true;\n  }\n\n  unwrap(): T {\n    return this.value;\n  }\n\n  unwrapErr(): E {\n    throw Error(\"unwrapErr on a Result.Ok\");\n  }\n}\n\nexport class Err<T, E> implements Result<T, E> {\n  constructor(private err: E) {}\n\n  isErr(): boolean {\n    return true;\n  }\n\n  isOk(): boolean {\n    return false;\n  }\n\n  unwrap(): T {\n    throw Error(\"unwrap on a Result.Err\");\n  }\n\n  unwrapErr(): E {\n    return this.err;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * WithAPIData Component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Component, ReactNode } from \"react\";\nimport { CancelablePromise, ignoreCancel, makeCancelable } from \"../../util\";\nimport { Err, Ok, Result } from \"../../util/result\";\n\nexport interface WithAPIDataProps<T> {\n  apiCall: () => Promise<T>;\n  repeatOptions: {\n    ignoreCancel: boolean;\n    interval: number;\n  };\n\n  /**\n   * If the data should be cleared when the props update. Defaults to true.\n   */\n  flushOnUpdate: boolean;\n\n  /**\n   * Render the children before the first API request is done\n   */\n  renderInitial: () => ReactNode;\n\n  /**\n   * Render the children if the API request succeeded\n   *\n   * @param data the data returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderOk: (data: T, refresh: (data?: T) => void) => ReactNode;\n\n  /**\n   * Render the children if the API request failed\n   *\n   * @param error the error returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderErr: (error: any, refresh: (data?: T) => void) => ReactNode;\n}\n\nexport interface WithAPIDataState<T> {\n  apiResult: Result<T, any> | null;\n}\n\n/**\n * A component for getting API data. It can retrieve information once,\n * periodically, or on call (refresh).\n */\nexport class WithAPIData<T> extends Component<\n  WithAPIDataProps<T>,\n  WithAPIDataState<T>\n> {\n  static defaultProps = {\n    repeatOptions: {\n      ignoreCancel: true,\n      interval: 0\n    },\n    flushOnUpdate: true\n  };\n\n  state: WithAPIDataState<T> = {\n    apiResult: null\n  };\n\n  private dataHandle: CancelablePromise<T> | undefined;\n\n  loadData = (data?: T) => {\n    // Only repeat if there is a non-zero repeat interval\n    const cancelOptions =\n      this.props.repeatOptions.interval !== 0\n        ? {\n            repeat: this.loadData,\n            interval: this.props.repeatOptions.interval\n          }\n        : undefined;\n\n    // Clear in-flight or repeating requests so they are not orphaned\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n\n    if (data) {\n      // Some data was given, it should be used as the API response\n      this.setState({ apiResult: new Ok(data) });\n\n      if (cancelOptions) {\n        // If the request should be repeated, wait for the interval and then\n        // refresh with data from the API\n        new Promise(resolve =>\n          setTimeout(resolve, cancelOptions.interval)\n        ).then(() => this.loadData());\n      }\n      return;\n    }\n\n    // No data was given, make a request to the API\n    this.dataHandle = makeCancelable(this.props.apiCall(), cancelOptions);\n\n    this.dataHandle.promise\n      .then(data => {\n        this.setState({\n          apiResult: new Ok(data)\n        });\n      })\n      .catch(error => {\n        if (this.props.repeatOptions.ignoreCancel) {\n          ignoreCancel(error);\n        } else {\n          throw error;\n        }\n      })\n      .catch(error => {\n        this.setState({\n          apiResult: new Err(error)\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<WithAPIDataProps<T>>,\n    prevState: Readonly<WithAPIDataState<T>>,\n    snapshot?: any\n  ): void {\n    if (prevProps === this.props) {\n      // Don't do anything if the props didn't change\n      return;\n    }\n\n    if (this.props.flushOnUpdate) {\n      // The props changed, so trigger a full reload of the data. Current data is\n      // cleared so that loading indicators are shown.\n      this.setState({ apiResult: null });\n      this.loadData();\n    }\n  }\n\n  render() {\n    if (!this.state.apiResult) {\n      return this.props.renderInitial();\n    }\n\n    if (this.state.apiResult.isOk()) {\n      return this.props.renderOk(this.state.apiResult.unwrap(), this.loadData);\n    } else {\n      return this.props.renderErr(\n        this.state.apiResult.unwrapErr(),\n        this.loadData\n      );\n    }\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithAPIData } from \"../WithAPIData\";\nimport api from \"../../../util/api\";\n\n/**\n * The data shared by the status context\n */\nexport interface StatusContextType {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n}\n\n/**\n * The status data which will be used initially, until the API responds with the\n * real status data.\n */\nconst initialContext: StatusContextType = {\n  status: \"unknown\",\n  refresh: () => {}\n};\n\n/**\n * The React context which provides the status data to consumers\n */\nexport const StatusContext = React.createContext(initialContext);\n\n/**\n * Provide the blocking status via React context.\n * Sub-components can use the `StatusContext.Consumer` component to get the\n * status.\n */\nexport const StatusProvider = ({\n  children,\n  ...props\n}: {\n  children: ReactNode;\n}) => (\n  <WithAPIData\n    apiCall={api.getStatus}\n    repeatOptions={{ interval: 5000, ignoreCancel: true }}\n    flushOnUpdate={false}\n    renderInitial={() => (\n      <StatusContext.Provider value={initialContext} {...props}>\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderOk={(data, refresh) => (\n      <StatusContext.Provider\n        value={{ status: data.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderErr={(_, refresh) => (\n      <StatusContext.Provider\n        value={{ status: initialContext.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status badge component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { StatusContext } from \"./context/StatusContext\";\n\nexport interface StatusBadgeProps extends WithNamespaces {\n  status: string;\n}\n\nclass StatusBadge extends Component<StatusBadgeProps, {}> {\n  isEnabled = () => this.props.status === \"enabled\";\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <span>\n        <i\n          className={\n            \"fa fa-circle text-\" + (this.isEnabled() ? \"success\" : \"danger\")\n          }\n        />\n        &nbsp;\n        {t(this.isEnabled() ? \"Enabled\" : \"Disabled\")}\n      </span>\n    );\n  }\n}\n\nexport const TranslatedStatusBadge = withNamespaces(\"common\")(StatusBadge);\n\nexport default () => (\n  <StatusContext.Consumer>\n    {({ status }) => <TranslatedStatusBadge status={status} />}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A dropdown in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { MouseEvent, ReactNode } from \"react\";\n\nexport interface NavDropdownProps {\n  name: string;\n  icon: string;\n  isOpen: boolean;\n  children: ReactNode;\n}\n\nexport default ({ name, icon, isOpen, children }: NavDropdownProps) => (\n  <li className={\"nav-item nav-dropdown\" + (isOpen ? \" open\" : \"\")}>\n    <button\n      className=\"nav-link nav-dropdown-toggle\"\n      onClick={handleDropdownClick}\n    >\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </button>\n    <ul className=\"nav-dropdown-items\">{children}</ul>\n  </li>\n);\n\nconst handleDropdownClick = (e: MouseEvent<HTMLButtonElement>) => {\n  e.preventDefault();\n  (e.target as HTMLButtonElement).parentElement!.classList.toggle(\"open\");\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Sidebar component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport logo from \"../../img/logo.svg\";\nimport { mobileSidebarHide } from \"./Header\";\nimport api from \"../../util/api\";\nimport StatusBadge from \"./StatusBadge\";\nimport NavDropdown from \"./NavDropdown\";\nimport {\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../../routes\";\nimport i18next from \"i18next\";\n\nexport const isDropdownOpen = (\n  routeName: string,\n  props: { location: Location }\n) => props.location.pathname.startsWith(routeName);\n\nexport const navItem = (\n  item: RouteItem,\n  key: any,\n  t: i18next.TranslationFunction\n): ReactNode => (\n  <NavItem key={key}>\n    <NavLink\n      to={item.url}\n      onClick={mobileSidebarHide}\n      className=\"nav-link\"\n      activeClassName=\"active\"\n    >\n      <i className={\"nav-icon \" + item.icon} />\n      {t(item.name)}\n    </NavLink>\n  </NavItem>\n);\n\nexport const navDropdown = (\n  item: RouteGroup,\n  key: any,\n  t: i18next.TranslationFunction,\n  location: Location\n): ReactNode => (\n  <NavDropdown\n    name={t(item.name)}\n    icon={item.icon}\n    isOpen={location.pathname.startsWith(item.url)}\n    key={key}\n  >\n    {navList(item.children, t, location)}\n  </NavDropdown>\n);\n\nexport const navList = (\n  items: Array<RouteData>,\n  t: i18next.TranslationFunction,\n  location: Location\n) =>\n  items.map((item, index) => {\n    // Don't show an item if it requires auth and we're not logged in\n    if (item.auth && !api.loggedIn) return null;\n\n    // Some items (login page) should only be shown when logged in or logged out, not both\n    if (item.authStrict && item.auth !== api.loggedIn) return null;\n\n    // Check if it's a custom component\n    if ((item as RouteCustomItem).customComponent !== undefined) {\n      const Component = (item as RouteCustomItem).customComponent;\n      return <Component key={index} />;\n    }\n\n    // At this point it's ok to show the item\n    return (item as RouteGroup).children\n      ? navDropdown(item as RouteGroup, index, t, location)\n      : navItem(item as RouteItem, index, t);\n  });\n\nexport interface SidebarProps extends WithNamespaces {\n  items: Array<RouteData>;\n  location: Location;\n}\n\nconst Sidebar = ({ items, t, location }: SidebarProps) => {\n  return (\n    <div className=\"sidebar\">\n      <nav className=\"sidebar-nav\">\n        <Nav>\n          <li className=\"nav-title\">\n            <img\n              src={logo}\n              className=\"img-responsive pull-left\"\n              style={{ height: \"67px\" }}\n              alt=\"\"\n            />\n            <p\n              className=\"pull-left\"\n              style={{\n                paddingLeft: \"15px\",\n                textTransform: \"initial\",\n                fontSize: \"14px\",\n                marginBottom: \"initial\",\n                lineHeight: \"14px\",\n                color: \"white\"\n              }}\n            >\n              {t(\"Status\")}\n            </p>\n            <br />\n            <span style={{ textTransform: \"initial\", paddingLeft: \"15px\" }}>\n              <StatusBadge />\n            </span>\n          </li>\n          {navList(items, t, location)}\n        </Nav>\n      </nav>\n    </div>\n  );\n};\n\nexport default withNamespaces([\"common\", \"location\"])(Sidebar);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * FooterUpdateStatus component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\nconst FooterUpdateStatus = (props: WithNamespaces) => {\n  const { t } = props;\n  const updateAvailable = false;\n\n  if (updateAvailable) {\n    return (\n      <div className=\"ml-auto\">\n        <Link to=\"/settings/versions\">{t(\"Update Available\")}</Link>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default withNamespaces(\"footer\")(FooterUpdateStatus);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Footer component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { withNamespaces } from \"react-i18next\";\nimport FooterUpdateStatus from \"./FooterUpdateStatus\";\n\nconst Footer = (props: any) => {\n  const { t } = props;\n\n  return (\n    <footer className=\"app-footer\">\n      <div>\n        <i className=\"fab fa-paypal\" />\n        <strong>\n          <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=3J2L3Z4DHW9UY\">\n            &nbsp;\n            {t(\"Donate\")}\n          </a>\n        </strong>{\" \"}\n        {t(\"if you found this useful\")}\n      </div>\n      <FooterUpdateStatus {...props} />\n    </footer>\n  );\n};\n\nexport default withNamespaces([\"common\", \"footer\"])(Footer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Summary Stats component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport api from \"../../util/api\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface SummaryStatsProps {\n  totalQueries: string;\n  blockedQueries: string;\n  percentBlocked: string;\n  gravityDomains: string;\n  uniqueClients: number;\n}\n\nclass SummaryStats extends Component<SummaryStatsProps & WithNamespaces, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-success stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-globe-americas fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.totalQueries}</h3>\n              <p style={{ marginBottom: \"0px\" }}>\n                {t(\"Total Queries ({{count}} clients)\", {\n                  count: this.props.uniqueClients\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-primary stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-hand-paper fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.blockedQueries}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Queries Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-warning stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-chart-pie fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.percentBlocked}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Percent Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-danger stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-list-alt fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.gravityDomains}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Domains On Blocklist\")}</p>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for the component\n *\n * @param data the API data\n * @returns {*} the transformed props\n */\nexport const transformData = (data: ApiSummary): SummaryStatsProps => ({\n  totalQueries: Object.keys(data.total_queries)\n    .reduce((total, queryType) => total + data.total_queries[queryType], 0)\n    .toLocaleString(),\n  blockedQueries: data.blocked_queries.toLocaleString(),\n  percentBlocked: data.percent_blocked.toFixed(2).toLocaleString() + \"%\",\n  gravityDomains: data.gravity_size.toLocaleString(),\n  uniqueClients: data.total_clients\n});\n\n/**\n * The props the summary stats should use when it fails to get the API data\n * (it does not need the error object)\n */\nexport const errorProps: SummaryStatsProps = {\n  totalQueries: \"Lost\",\n  blockedQueries: \"Connection\",\n  percentBlocked: \"To\",\n  gravityDomains: \"API\",\n  uniqueClients: 0\n};\n\n/**\n * The props used to show a loading state\n */\nexport const initialProps: SummaryStatsProps = {\n  blockedQueries: \"---\",\n  totalQueries: \"---\",\n  percentBlocked: \"---\",\n  gravityDomains: \"---\",\n  uniqueClients: 0\n};\n\nexport const TranslatedSummaryStats = withNamespaces([\"common\", \"dashboard\"])(\n  SummaryStats\n);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range ? api.getSummaryDb(context.range) : api.getSummary()\n        }\n        repeatOptions={\n          context.range ? undefined : { interval: 5000, ignoreCancel: true }\n        }\n        renderInitial={() => (\n          <TranslatedSummaryStats {...initialProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedSummaryStats {...transformData(data)} {...props} />\n        )}\n        renderErr={() => <TranslatedSummaryStats {...errorProps} {...props} />}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Queries Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { getIntervalForRange, padNumber } from \"../../util\";\nimport api from \"../../util/api\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartData, ChartOptions, TimeUnit } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface QueriesGraphProps {\n  loading: boolean;\n  labels: Array<Date>;\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  domains_over_time: Array<number>;\n  blocked_over_time: Array<number>;\n}\n\nclass QueriesGraph extends Component<QueriesGraphProps & WithNamespaces, {}> {\n  render() {\n    const { t } = this.props;\n\n    const data: ChartData = {\n      // @ts-ignore\n      labels: this.props.labels,\n      datasets: [\n        {\n          label: t(\"Total Queries\"),\n          data: this.props.domains_over_time,\n          fill: true,\n          backgroundColor: \"rgba(220,220,220,0.5)\",\n          borderColor: \"rgba(0, 166, 90,.8)\",\n          pointBorderColor: \"rgba(0, 166, 90,.8)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        },\n        {\n          label: t(\"Blocked Queries\"),\n          data: this.props.blocked_over_time,\n          fill: true,\n          backgroundColor: \"rgba(0,192,239,0.5)\",\n          borderColor: \"rgba(0,192,239,1)\",\n          pointBorderColor: \"rgba(0,192,239,1)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        }\n      ]\n    };\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: true,\n        mode: \"x-axis\",\n        callbacks: {\n          title: tooltipItem => {\n            const time = tooltipItem[0].xLabel!.match(/(\\d?\\d):?(\\d?\\d?)/);\n            const hour = parseInt(time![1], 10);\n            const minute = parseInt(time![2], 10) || 0;\n            const from = padNumber(hour) + \":\" + padNumber(minute - 5) + \":00\";\n            const to = padNumber(hour) + \":\" + padNumber(minute + 4) + \":59\";\n\n            return t(\"Queries from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            if (tooltipItems.datasetIndex === 1) {\n              let percentage = 0.0;\n              const total = data.datasets![0].data![\n                tooltipItems.index!\n              ] as number;\n              const blocked = data.datasets![1].data![\n                tooltipItems.index!\n              ] as number;\n\n              if (total > 0) percentage = (100.0 * blocked) / total;\n\n              return (\n                data.datasets![tooltipItems.datasetIndex].label +\n                \": \" +\n                tooltipItems.yLabel +\n                \" (\" +\n                percentage.toFixed(1) +\n                \"%)\"\n              );\n            } else\n              return (\n                data.datasets![tooltipItems.datasetIndex!].label +\n                \": \" +\n                tooltipItems.yLabel\n              );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true }\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Queries Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line width={970} height={170} data={data} options={options} />\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for QueriesGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns QueriesGraphProps QueriesGraph props\n */\nexport const transformData = (\n  data: Array<ApiHistoryGraphItem>,\n  range: TimeRange | null\n): QueriesGraphProps => {\n  let timeUnit: TimeUnit = \"hour\";\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    data = data.slice(0, -1);\n  }\n\n  const labels = data.map(step => new Date(1000 * step.timestamp));\n  const domains_over_time = data.map(step => step.total_queries);\n  const blocked_over_time = data.map(step => step.blocked_queries);\n\n  return {\n    loading: false,\n    labels,\n    timeUnit,\n    rangeName: range ? range.name : undefined,\n    domains_over_time,\n    blocked_over_time\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: QueriesGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  domains_over_time: [],\n  blocked_over_time: []\n};\n\nexport const TranslatedQueriesGraph = withNamespaces([\n  \"dashboard\",\n  \"time-ranges\"\n])(QueriesGraph);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? api.getHistoryGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : api.getHistoryGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedQueriesGraph\n            {...transformData(data, context.range)}\n            {...props}\n          />\n        )}\n        renderErr={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Chart Tooltip component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { ChartTooltipOptions } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nexport interface ChartTooltipProps {\n  chart: RefObject<Line>;\n  handler: ChartTooltipOptions;\n}\n\nexport interface ChartTooltipState {\n  tooltip: any | null;\n}\n\nclass ChartTooltip extends Component<ChartTooltipProps, ChartTooltipState> {\n  state: ChartTooltipState = {\n    tooltip: null\n  };\n\n  render() {\n    const { tooltip } = this.state;\n\n    // Override the graph's options in a hacky way to avoid redrawing the entire graph.\n    // This lets the graph directly update the tooltip without going through the parent component.\n    let lastTime = Date.now();\n    this.props.handler.custom = tooltip => {\n      // Always disable the tooltip\n      if (tooltip.opacity === 0) this.setState({ tooltip });\n\n      // Limit how quickly we set state (50ms)\n      const now = Date.now();\n      if (now - lastTime < 50) return;\n\n      lastTime = now;\n      this.setState({ tooltip });\n    };\n\n    // Don't render anything if there is nothing to render\n    if (\n      tooltip === null ||\n      tooltip.opacity === 0 ||\n      this.props.chart.current === null\n    )\n      return null;\n\n    // Get the graph's position data so we can offset the tooltip\n    const position = this.props.chart.current.chartInstance.canvas!.getBoundingClientRect();\n    let width = tooltip.caretX;\n\n    // Prevent compression of the tooltip at the right edge of the screen\n    // @ts-ignore\n    if (document.offsetWidth - tooltip.caretX < 400) {\n      // @ts-ignore\n      width = document.offsetWidth - 400;\n    }\n\n    // Prevent tooltip disappearing behind the sidebar\n    if (tooltip.caretX < 100) width = 100;\n\n    // Tooltip CSS styling\n    const style = {\n      opacity: 1,\n      left: position.left + width + \"px\",\n      top: position.top + tooltip.caretY + window.scrollY + \"px\",\n      fontFamily: tooltip._bodyFontFamily,\n      fontSize: tooltip.bodyFontSize + \"px\",\n      fontStyle: tooltip._bodyFontStyle,\n      padding: tooltip.yPadding + \"px \" + tooltip.xPadding + \"px\"\n    };\n\n    // Transform and sort the tooltip data\n    let data = [];\n    if (tooltip.body) {\n      data = tooltip.body\n        .map((body: any) => body.lines)\n        .map((item: any, i: number) => ({\n          data: item[0],\n          colors: tooltip.labelColors[i]\n        }));\n    }\n    data.sort((a: any, b: any) =>\n      a.data.split(\": \")[0].localeCompare(b.data.split(\": \")[0])\n    );\n\n    return (\n      <div className=\"chartjs-tooltip\" style={style}>\n        <table>\n          <thead>\n            {tooltip.title.map((title: string, i: number) => (\n              <tr key={i}>\n                <th>{title}</th>\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {data.map((item: any, i: number) => (\n              <tr key={i}>\n                <td>\n                  <span\n                    className=\"chartjs-tooltip-key\"\n                    style={{\n                      background: item.colors.backgroundColor,\n                      borderColor: item.colors.borderColor,\n                      borderWidth: \"2px\"\n                    }}\n                  />\n                  {item.data}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ChartTooltip;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Clients Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { getIntervalForRange, padNumber } from \"../../util\";\nimport api from \"../../util/api\";\nimport ChartTooltip from \"./ChartTooltip\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartDataSets, ChartOptions, TimeUnit } from \"chart.js\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface ClientsGraphProps {\n  loading: boolean;\n  labels: Array<string>;\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  datasets: Array<ChartDataSets>;\n}\n\nclass ClientsGraph extends Component<ClientsGraphProps & WithNamespaces, {}> {\n  private readonly graphRef: RefObject<Line>;\n\n  constructor(props: ClientsGraphProps & WithNamespaces) {\n    super(props);\n    this.graphRef = React.createRef();\n  }\n\n  render() {\n    const { t } = this.props;\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: false,\n        mode: \"x-axis\",\n        custom: () => \"placeholder\",\n        itemSort: (a, b) => {\n          // @ts-ignore\n          return b.yLabel - a.yLabel;\n        },\n        callbacks: {\n          title: tooltipItem => {\n            const time = tooltipItem[0].xLabel!.match(/(\\d?\\d):?(\\d?\\d?)/);\n            const hour = parseInt(time![1], 10);\n            const minute = parseInt(time![2], 10) || 0;\n            const from = padNumber(hour) + \":\" + padNumber(minute - 5) + \":00\";\n            const to = padNumber(hour) + \":\" + padNumber(minute + 4) + \":59\";\n\n            return t(\"Client activity from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            return (\n              data.datasets![tooltipItems.datasetIndex!].label +\n              \": \" +\n              tooltipItems.yLabel\n            );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true },\n            stacked: true\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Clients Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line\n            width={970}\n            height={170}\n            data={{\n              labels: this.props.labels,\n              datasets: this.props.datasets\n            }}\n            options={options}\n            ref={this.graphRef}\n          />\n        </div>\n\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n\n        {// Now you're thinking with portals!\n        ReactDOM.createPortal(\n          <ChartTooltip chart={this.graphRef} handler={options.tooltips!} />,\n          document.body\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for ClientsGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns {{labels: Date[], datasets: Array, loading: boolean}} ClientsGraph\n * props\n */\nexport const transformData = (\n  data: ApiClientsGraph,\n  range: TimeRange | null\n) => {\n  let timeUnit: TimeUnit = \"hour\";\n  let overTime = data.over_time;\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    overTime = data.over_time.slice(0, -1);\n  }\n\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const labels = overTime.map(step => new Date(1000 * step.timestamp));\n  const datasets: Array<ChartDataSets> = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (let client of data.clients) {\n    datasets.push({\n      label: client.name.length !== 0 ? client.name : client.ip,\n      // If we ran out of colors, make a random one\n      backgroundColor:\n        i < colors.length\n          ? colors[i]\n          : \"#\" +\n            parseInt(\"\" + Math.random() * 0xffffff, 10)\n              .toString(16)\n              .padStart(6, \"0\"),\n      pointRadius: 0,\n      pointHitRadius: 5,\n      pointHoverRadius: 5,\n      cubicInterpolationMode: \"monotone\",\n      data: []\n    });\n\n    i++;\n  }\n\n  // Fill in data & labels\n  for (let step of overTime) {\n    for (let destination in datasets) {\n      if (datasets.hasOwnProperty(destination))\n        (datasets[destination].data as Array<number>).push(\n          step.data[destination]\n        );\n    }\n  }\n\n  datasets.sort((a, b) => a.label!.localeCompare(b.label!));\n\n  return {\n    labels,\n    datasets,\n    loading: false,\n    timeUnit,\n    rangeName: range ? range.name : undefined\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: ClientsGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  datasets: []\n};\n\nexport const TranslatedClientsGraph = withNamespaces([\n  \"dashboard\",\n  \"time-ranges\"\n])(ClientsGraph);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? api.getClientsGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : api.getClientsGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => (\n          <TranslatedClientsGraph {...loadingProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedClientsGraph\n            {...transformData(data, context.range)}\n            {...props}\n          />\n        )}\n        renderErr={() => (\n          <TranslatedClientsGraph {...loadingProps} {...props} />\n        )}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic Doughnut Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, MouseEvent, RefObject } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartOptions } from \"chart.js\";\n\nexport interface GenericDoughnutChartProps {\n  title: string;\n  loading: boolean;\n  data: Array<number>;\n  colors: Array<string>;\n  labels: Array<string>;\n}\n\nexport class GenericDoughnutChart extends Component<\n  GenericDoughnutChartProps,\n  {}\n> {\n  private readonly chartRef: RefObject<Doughnut>;\n\n  constructor(props: GenericDoughnutChartProps) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  handleClick = (e: MouseEvent, index: number) => {\n    // Hide the entry by clicking on the internal legend item\n    const chart: any = this.chartRef.current!.chartInstance;\n    chart.legend.options.onClick.call(\n      chart,\n      e,\n      chart.legend.legendItems[index]\n    );\n\n    // Cause an update so the external legend gets updated\n    this.forceUpdate();\n  };\n\n  render() {\n    const options: ChartOptions = {\n      legend: { display: false },\n      tooltips: {\n        enabled: true,\n        callbacks: {\n          title: () => this.props.title,\n          label: (tooltipItems, data) => {\n            const dataset = data.datasets![tooltipItems.datasetIndex!];\n            const label = data.labels![tooltipItems.index!];\n            return (\n              label +\n              \": \" +\n              (dataset.data![tooltipItems.index!] as number).toFixed(1) +\n              \"%\"\n            );\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n\n    // Get the metadata for the items, so we know if they are hidden or not.\n    // If the chart has not been created yet, make some fake metadata.\n    const meta =\n      this.chartRef.current !== null\n        ? this.chartRef.current.chartInstance.getDatasetMeta(0).data\n        : this.props.data.map(() => ({ hidden: false }));\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        <div className=\"card-body\">\n          <div className=\"float-left\" style={{ width: \"67%\" }}>\n            <Doughnut\n              width={100}\n              height={250}\n              options={options}\n              ref={this.chartRef}\n              data={{\n                datasets: [\n                  {\n                    // Make a copy of the data here. ChartJS does weird things\n                    // to the data, which React doesn't catch. This can cause\n                    // oddities such as one chart showing the other chart's\n                    // data. This behavior is fixed by sending ChartJS its own\n                    // copy of the data.\n                    data: [...this.props.data],\n                    backgroundColor: this.props.colors\n                  }\n                ],\n                labels: this.props.labels\n              }}\n            />\n          </div>\n          <div className=\"float-right\" style={{ width: \"33%\" }}>\n            <ul className=\"chart-legend\">\n              {this.props.labels\n                // Zip label and color together\n                .map((label, i) => [label, this.props.colors[i]])\n                // Create the list items\n                .map(([label, color], i) => (\n                  <li\n                    key={i}\n                    className={meta[i] && meta[i].hidden ? \"strike\" : \"\"}\n                    onClick={e => this.handleClick(e, i)}\n                  >\n                    <span style={{ backgroundColor: color }} />\n                    {label}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface ChartItem {\n  name: string;\n  ip?: string;\n  percent: number;\n}\n\n/**\n * Transform the API data into props for GenericDoughnutChart\n *\n * @param apiData the API data\n * @returns GenericDoughnutChartProps\n */\nexport const transformData = (apiData: Array<ChartItem>) => {\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const data = [];\n  const labels = [];\n  const usedColors = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (let entry of apiData) {\n    data.push(entry.percent);\n    labels.push(entry.name.length !== 0 ? entry.name : entry.ip!);\n    usedColors.push(\n      // If we ran out of colors, make a random one\n      i < colors.length\n        ? colors[i]\n        : \"#\" +\n            parseInt(\"\" + Math.random() * 0xffffff, 10)\n              .toString(16)\n              .padStart(6, \"0\")\n    );\n\n    i++;\n  }\n\n  return {\n    loading: false,\n    data,\n    colors: usedColors,\n    labels\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps = {\n  loading: true,\n  data: [],\n  colors: [],\n  labels: []\n};\n\nexport default function<T>({\n  apiCall,\n  title,\n  apiHandler,\n  ...props\n}: {\n  apiCall: () => Promise<T>;\n  title: string;\n  apiHandler: (data: T) => Array<ChartItem>;\n}) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      renderInitial={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n      renderOk={data => (\n        <GenericDoughnutChart\n          title={title}\n          {...transformData(apiHandler(data))}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Types Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst QueryTypesChart = ({\n  t,\n  apiCall\n}: WithNamespaces & { apiCall: () => Promise<Array<ApiQueryType>> }) => (\n  <GenericDoughnutChart\n    title={t(\"Query Types\")}\n    apiCall={apiCall}\n    apiHandler={data => {\n      const total = data.reduce(\n        (previous, current) => previous + current.count,\n        0\n      );\n\n      return data.map(item => ({\n        name: item.name,\n        percent: total > 0 ? (item.count * 100) / total : 0\n      }));\n    }}\n  />\n);\n\nexport const QueryTypesChartContainer = (props: WithNamespaces) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <QueryTypesChart\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getQueryTypesDb(context.range)\n            : api.getQueryTypes()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withNamespaces(\"dashboard\")(QueryTypesChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Upstream Servers / Forward Destinations Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst UpstreamsChart = ({\n  t,\n  apiCall\n}: WithNamespaces & { apiCall: () => Promise<ApiUpstreams> }) => (\n  <GenericDoughnutChart\n    title={t(\"Queries Answered By Destination\")}\n    apiCall={apiCall}\n    apiHandler={data =>\n      data.upstreams.map(upstream => ({\n        name: upstream.name,\n        ip: upstream.ip,\n        percent: (upstream.count * 100) / data.total_queries\n      }))\n    }\n  />\n);\n\nexport const UpstreamsChartContainer = (props: WithNamespaces) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <UpstreamsChart\n        {...props}\n        apiCall={() =>\n          context.range ? api.getUpstreamsDb(context.range) : api.getUpstreams()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withNamespaces(\"dashboard\")(UpstreamsChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic top items component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { Subtract } from \"react-i18next\";\n\nexport interface TopTableInnerProps<T> {\n  loading: boolean;\n  title: string;\n  data: T;\n  headers: Array<string>;\n  emptyMessage: string;\n  isEmpty: (data: T) => boolean;\n  generateRows: (data: T) => ReactNode;\n}\n\nexport class TopTable<T> extends Component<TopTableInnerProps<T>, {}> {\n  static defaultProps = {\n    loading: true,\n    title: \"\",\n    data: {},\n    headers: [],\n    emptyMessage: \"\",\n    isEmpty: () => true,\n    generateRows: () => null\n  };\n\n  /**\n   * Generate the table\n   *\n   * @returns {*} a React element for the table, or an empty message\n   */\n  generateTable = () => {\n    // If there is no data, just show a message\n    if (this.props.isEmpty(this.props.data)) {\n      return this.props.emptyMessage;\n    }\n\n    return (\n      <table className=\"table table-bordered\">\n        <tbody>\n          <tr>\n            {this.props.headers.map((header, i) => (\n              <th key={i}>{header}</th>\n            ))}\n          </tr>\n          {this.props.generateRows(this.props.data)}\n        </tbody>\n      </table>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        <div className=\"card-body\">\n          <div style={{ overflowX: \"auto\" }}>{this.generateTable()}</div>\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface TopTableProps<T, D>\n  extends Subtract<TopTableInnerProps<T>, { loading: boolean; data: T }> {\n  apiCall: () => Promise<D>;\n  initialData: T;\n  apiHandler: (data: D) => T;\n}\n\nexport default function<T, D>({\n  title,\n  apiCall,\n  initialData,\n  headers,\n  emptyMessage,\n  isEmpty,\n  apiHandler,\n  generateRows,\n  ...props\n}: TopTableProps<T, D>) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      repeatOptions={{\n        interval: 10 * 60 * 1000,\n        ignoreCancel: true\n      }}\n      renderInitial={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading={true}\n          {...props}\n        />\n      )}\n      renderOk={data => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={apiHandler(data)}\n          loading={false}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading={true}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Domains component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopDomainsData {\n  totalQueries: number;\n  topDomains: Array<ApiTopDomainItem>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topDomains: *}} the parsed data\n */\nexport const transformData = (data: ApiTopDomains): TopDomainsData => ({\n  totalQueries: data.total_queries,\n  topDomains: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top domains\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top domains\n */\nexport const generateRows = (t: i18next.TranslationFunction) => (\n  data: TopDomainsData\n) => {\n  return data.topDomains.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-success\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopDomains = ({\n  apiCall,\n  t,\n  ...props\n}: WithNamespaces & { apiCall: () => Promise<ApiTopDomains> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Permitted Domains\")}\n    initialData={{\n      totalQueries: 0,\n      topDomains: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topDomains.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopDomainsContainer = (props: WithNamespaces) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopDomains\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopDomainsDb(context.range)\n            : api.getTopDomains()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withNamespaces([\"common\", \"dashboard\"])(TopDomainsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Blocked component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopBlockedData {\n  totalBlocked: number;\n  topBlocked: Array<ApiTopDomainItem>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalBlocked: number, topBlocked: *}} the parsed data\n */\nexport const transformData = (data: ApiTopBlocked): TopBlockedData => ({\n  totalBlocked: data.blocked_queries,\n  topBlocked: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top blocked\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top blocked\n */\nexport const generateRows = (t: i18next.TranslationFunction) => (\n  data: TopBlockedData\n) => {\n  return data.topBlocked.map(item => {\n    const percentage = (item.count / data.totalBlocked) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalBlocked.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-warning\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopBlocked = ({\n  apiCall,\n  t,\n  ...props\n}: WithNamespaces & { apiCall: () => Promise<ApiTopBlocked> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Blocked Domains\")}\n    initialData={{\n      totalBlocked: 0,\n      topBlocked: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topBlocked.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopBlockedContainer = (props: WithNamespaces) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopBlocked\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopBlockedDb(context.range)\n            : api.getTopBlocked()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withNamespaces([\"common\", \"dashboard\"])(TopBlockedContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Clients component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopClientsData {\n  totalQueries: number;\n  topClients: Array<ApiClient>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topClients: *}} the parsed data\n */\nexport const transformData = (data: ApiTopClients): TopClientsData => ({\n  totalQueries: data.total_queries,\n  topClients: data.top_clients\n});\n\n/**\n * Create a function to generate rows of top clients\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top clients\n */\nexport const generateRows = (t: i18next.TranslationFunction) => (\n  data: TopClientsData\n) => {\n  return data.topClients.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.name + \"|\" + item.ip}>\n        <td>{item.name !== \"\" ? item.name : item.ip}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-primary\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopClients = ({\n  apiCall,\n  t,\n  ...props\n}: WithNamespaces & { apiCall: () => Promise<ApiTopClients> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Clients\")}\n    initialData={{\n      totalQueries: 0,\n      topClients: []\n    }}\n    headers={[t(\"Client\"), t(\"Requests\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Clients Found\")}\n    isEmpty={data => data.topClients.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopClientsContainer = (props: WithNamespaces) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopClients\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopClientsDb(context.range)\n            : api.getTopClients()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withNamespaces([\"common\", \"dashboard\"])(TopClientsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Log component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport ReactTable, {\n  Filter,\n  ReactTableFunction,\n  RowInfo,\n  RowRenderProps\n} from \"react-table\";\nimport i18n from \"i18next\";\nimport i18next from \"i18next\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport debounce from \"lodash.debounce\";\nimport moment from \"moment\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable,\n  padNumber\n} from \"../../util\";\nimport api from \"../../util/api\";\nimport { dateRanges } from \"../../util/dateRanges\";\nimport { TranslatedTimeRangeSelector } from \"../dashboard/TimeRangeSelector\";\nimport { TimeRange } from \"../common/context/TimeRangeContext\";\nimport \"react-table/react-table.css\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\n\nexport interface QueryLogState {\n  history: Array<ApiQuery>;\n  cursor: null | string;\n  loading: boolean;\n  atEnd: boolean;\n  filtersChanged: boolean;\n  filters: Array<Filter>;\n}\n\n/**\n * Get the default time range for the query log\n *\n * @param t The translation function\n */\nconst getDefaultRange = (t: i18next.TranslationFunction): TimeRange => {\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n\n  return {\n    from: translatedDateRanges[last24Hours][0],\n    until: translatedDateRanges[last24Hours][1],\n    name: last24Hours\n  };\n};\n\nclass QueryLog extends Component<WithNamespaces, QueryLogState> {\n  private updateHandler: null | CancelablePromise<ApiHistoryResponse> = null;\n\n  state: QueryLogState = {\n    history: [],\n    cursor: null,\n    loading: false,\n    atEnd: false,\n    filtersChanged: false,\n    filters: []\n  };\n\n  constructor(props: WithNamespaces) {\n    super(props);\n\n    const { t } = this.props;\n\n    // This happens in the constructor to more easily use the translated date\n    // ranges\n    this.state.filters = [\n      {\n        id: \"time\",\n        value: getDefaultRange(t)\n      }\n    ];\n  }\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Get the props for a given row\n   *\n   * @param state the state of the ReactTable\n   * @param rowInfo the row information\n   * @returns {*} props for the row\n   */\n  getRowProps = (state: any, rowInfo: RowInfo | undefined) => {\n    // Check if the row is known to be blocked or allowed (not unknown)\n    if (rowInfo && rowInfo.row.status !== 0) {\n      // Blocked queries are red, allowed queries are green\n      return {\n        style: {\n          color: [1, 4, 5, 6].includes(rowInfo.row.status) ? \"red\" : \"green\"\n        }\n      };\n    } else {\n      // Unknown queries do not get colored\n      return {};\n    }\n  };\n\n  /**\n   * Convert the table filters into API history filters\n   *\n   * @param tableFilters the filters requested by the table\n   * @return the filters converted for use by the API\n   */\n  parseFilters = (tableFilters: Array<Filter>) => {\n    let filters: any = {};\n\n    for (const filter of tableFilters) {\n      switch (filter.id) {\n        case \"time\":\n          filters.from = moment(filter.value.from).unix();\n          filters.until = moment(filter.value.until).unix();\n          break;\n        case \"queryType\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          // Query Types start at 1\n          filters.query_type = parseInt(filter.value) + 1;\n          break;\n        case \"domain\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.domain = filter.value;\n          break;\n        case \"client\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.client = filter.value;\n          break;\n        case \"status\":\n          switch (filter.value) {\n            case \"all\":\n              // Filter is not applied\n              break;\n            case \"allowed\":\n              filters.blocked = false;\n              break;\n            case \"blocked\":\n              filters.blocked = true;\n              break;\n            default:\n              filters.status = filter.value;\n              break;\n          }\n          break;\n        case \"dnssec\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.dnssec = filter.value;\n          break;\n        case \"reply\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.reply = filter.value;\n          break;\n        default:\n          break;\n      }\n    }\n\n    return filters;\n  };\n\n  /**\n   * Fetch queries from the API, if necessary. This is called from the\n   * ReactTable component, which dictates its parameters.\n   *\n   * @param page The page of the query log\n   * @param pageSize The number of queries in the page\n   */\n  fetchQueries = ({ page, pageSize }: { page: number; pageSize: number }) => {\n    // Check if we've reached the end of the queries, or are still waiting for\n    // the last fetch to finish\n    if (this.state.atEnd || this.state.loading) {\n      return;\n    }\n\n    // Check if the filters are the same and we already have this page and the\n    // next page.\n    if (\n      !this.state.filtersChanged &&\n      this.state.history.length >= (page + 2) * pageSize\n    ) {\n      return;\n    }\n\n    // We have to ask the API for more queries\n    this.setState({ loading: true });\n\n    // Send a request for more queries\n    this.updateHandler = makeCancelable(\n      api.getHistory({\n        cursor: this.state.cursor,\n        ...this.parseFilters(this.state.filters)\n      })\n    );\n\n    this.updateHandler.promise\n      .then(data => {\n        // Update the log with the new queries\n        this.setState({\n          loading: false,\n          atEnd: data.cursor === null,\n          cursor: data.cursor,\n          history: this.state.history.concat(data.history),\n          filtersChanged: false\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <ReactTable\n        className=\"-striped\"\n        style={{ background: \"white\", marginBottom: \"24px\", lineHeight: 1 }}\n        columns={columns(t)}\n        showPaginationTop={true}\n        sortable={false}\n        filterable={false}\n        data={this.state.history}\n        loading={this.state.loading}\n        onFetchData={state => {\n          if (state.filtered === this.state.filters) {\n            // If the filters have not changed, do not debounce the fetch.\n            // This allows fetching the next page to happen without waiting for\n            // the debounce.\n            this.fetchQueries(state);\n          } else {\n            // The filters have changed, so debounce until they have stabilized\n            // (wait for the user to stop typing)\n            return debounce(this.fetchQueries, 350)(state);\n          }\n        }}\n        onFilteredChange={debounce(filters => {\n          this.setState({\n            filters,\n            filtersChanged: true,\n            cursor: null,\n            atEnd: false,\n            loading: false,\n            history: []\n          });\n        }, 300)}\n        getTrProps={this.getRowProps}\n        ofText={this.state.atEnd ? \"of\" : \"of at least\"}\n        // Pad empty rows to have the same height as filled rows\n        PadRowComponent={() => (\n          <span>\n            &nbsp;\n            <br />\n            &nbsp;\n          </span>\n        )}\n      />\n    );\n  }\n}\n\n/**\n * Convert a status code to a status message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst status = (t: i18next.TranslationFunction) => [\n  t(\"Unknown\"),\n  t(\"Blocked (gravity)\"),\n  t(\"Allowed (forwarded)\"),\n  t(\"Allowed (cached)\"),\n  t(\"Blocked (regex/wildcard)\"),\n  t(\"Blocked (blacklist)\"),\n  t(\"Blocked (external)\")\n];\n\n/**\n * Convert a DNSSEC code to a DNSSEC message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst dnssec = (t: i18next.TranslationFunction) => [\n  \"N/A\", // Unspecified, which means DNSSEC is off, so nothing should be shown\n  t(\"Secure\"),\n  t(\"Insecure\"),\n  t(\"Bogus\"),\n  t(\"Abandoned\"),\n  t(\"Unknown\")\n];\n\nconst dnssecColor = [\n  \"\", // Unspecified, which means DNSSEC is off, so the initial color should be shown\n  \"green\", // Secure\n  \"orange\", // Insecure\n  \"red\", // Bogus\n  \"red\", // Abandoned\n  \"orange\" // Unknown\n];\n\n/**\n * Convert a reply type code to a reply type. The unknown type is translated, so\n * you must pass in the translation function before using the message array.\n */\nconst replyTypes = (t: i18next.TranslationFunction) => [\n  t(\"Unknown\"),\n  \"NODATA\",\n  \"NXDOMAIN\",\n  \"CNAME\",\n  \"IP\",\n  \"DOMAIN\",\n  \"RRNAME\"\n];\n\n/**\n * Convert a query type code to a query type.\n */\nconst queryTypes = [\"A\", \"AAAA\", \"ANY\", \"SRV\", \"SOA\", \"PTR\", \"TXT\"];\n\n/**\n * Create a method which returns a select component for the filter, using the\n * supplied items as the selectable filters.\n *\n * @param items The options to show in the filter\n * @param t The translation function\n * @param extras Extra custom options which should show up in the filter list\n * @returns {function({filter: *, onChange: *}): *} A select component with the\n * filter data\n */\nconst selectionFilter = (\n  items: string[],\n  t: i18next.TranslationFunction,\n  extras: Array<{ name: string; value: any }> = []\n) => {\n  return ({\n    filter,\n    onChange\n  }: {\n    filter: Filter;\n    onChange: ReactTableFunction;\n  }) => (\n    <select\n      onChange={event => onChange(event.target.value)}\n      style={{ width: \"100%\" }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"all\">{t(\"All\")}</option>\n      {extras.map((extra, i) => (\n        <option key={i} value={extra.value}>\n          {extra.name}\n        </option>\n      ))}\n      {items.map((item, i) => (\n        <option key={i + extras.length} value={i}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\n/**\n * The columns of the Query Log. Some pieces are translated, so you must pass in\n * the translation function before using the columns.\n */\nconst columns = (t: i18next.TranslationFunction) => [\n  {\n    Header: t(\"Time\"),\n    id: \"time\",\n    accessor: (r: ApiQuery) => r.timestamp,\n    width: 70,\n    Cell: (row: RowRenderProps) => {\n      const date = new Date(row.value * 1000);\n      const month = date.toLocaleDateString(i18n.language, {\n        month: \"short\"\n      });\n      const dayOfMonth = padNumber(date.getDate());\n      const hour = padNumber(date.getHours());\n      const minute = padNumber(date.getMinutes());\n      const second = padNumber(date.getSeconds());\n\n      return (\n        <Fragment>\n          {month + \", \" + dayOfMonth}\n          <br />\n          {hour + \":\" + minute + \":\" + second}\n        </Fragment>\n      );\n    },\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: ({\n      filter,\n      onChange\n    }: {\n      filter: Filter;\n      onChange: ReactTableFunction;\n    }) => (\n      <TranslatedTimeRangeSelector\n        range={filter ? filter.value : null}\n        onSelect={range => {\n          if (range) {\n            onChange(range);\n          } else {\n            onChange(getDefaultRange(t));\n          }\n        }}\n        showLabel={false}\n      />\n    )\n  },\n  {\n    Header: t(\"Type\"),\n    id: \"queryType\",\n    accessor: (r: ApiQuery) => queryTypes[r.type - 1],\n    width: 50,\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(queryTypes, t)\n  },\n  {\n    Header: t(\"Domain\"),\n    id: \"domain\",\n    accessor: (r: ApiQuery) => r.domain,\n    minWidth: 150,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Client\"),\n    id: \"client\",\n    accessor: (r: ApiQuery) => r.client,\n    minWidth: 120,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Status\"),\n    id: \"status\",\n    accessor: (r: ApiQuery) => r.status,\n    width: 140,\n    Cell: (row: RowRenderProps) => status(t)[row.value],\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(status(t), t, [\n      { name: t(\"Allowed\"), value: \"allowed\" },\n      { name: t(\"Blocked\"), value: \"blocked\" }\n    ])\n  },\n  {\n    Header: \"DNSSEC\",\n    id: \"dnssec\",\n    accessor: (r: ApiQuery) => r.dnssec,\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: dnssecColor[row.value] }}>\n        {dnssec(t)[row.value]}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(dnssec(t), t)\n  },\n  {\n    Header: t(\"Reply\"),\n    id: \"reply\",\n    accessor: (r: ApiQuery) => ({ type: r.reply, time: r.response_time }),\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: \"black\" }}>\n        {replyTypes(t)[row.value.type]}\n        <br />\n        {\"(\" + (row.value.time / 10).toLocaleString() + \"ms)\"}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(replyTypes(t), t)\n  },\n  {\n    Header: t(\"Action\"),\n    width: 100,\n    filterable: false,\n    Cell: (data: { row: any }) => {\n      // Blocked, but can whitelist\n      if ([1, 4, 5].includes(data.row.status)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-success full-width\"\n            onClick={() => api.addWhitelist(data.row.domain)}\n          >\n            {t(\"Whitelist\")}\n          </button>\n        );\n      }\n\n      // Not explicitly blocked (or is whitelisted), but could be blocked.\n      // This includes externally blocked.\n      if ([2, 3, 6].includes(data.row.status))\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger full-width\"\n            onClick={() => api.addBlacklist(data.row.domain)}\n          >\n            {t(\"Blacklist\")}\n          </button>\n        );\n    }\n  }\n];\n\nexport default withNamespaces([\"common\", \"query-log\", \"time-ranges\"])(QueryLog);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain Input component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\n\nexport interface DomainInputProps extends WithNamespaces {\n  placeholder?: string;\n  onEnter: (domain: string) => void;\n  onRefresh: () => void;\n  isValid: (domain: string) => boolean;\n  onValidationError: () => void;\n}\n\nexport interface DomainInputState {\n  domain: string;\n  isValid: boolean;\n}\n\nclass DomainInput extends Component<DomainInputProps, DomainInputState> {\n  static defaultProps = {\n    placeholder: \"\"\n  };\n\n  state: DomainInputState = {\n    domain: \"\",\n    isValid: true\n  };\n\n  handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ domain: e.target.value });\n  };\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const domain = this.state.domain;\n\n    // Don't do anything for empty inputs\n    if (domain.length === 0) {\n      return;\n    }\n\n    const isValid = this.props.isValid(domain);\n    this.setState({ isValid });\n    if (isValid) {\n      this.props.onEnter(domain);\n      // Clear the input on successful submit\n      this.setState({ domain: \"\" });\n    } else {\n      this.props.onValidationError();\n    }\n  };\n\n  render() {\n    const { t, placeholder, onRefresh } = this.props;\n\n    return (\n      <form className=\"form-group input-group\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className={`form-control ${this.state.isValid ? \"\" : \"is-invalid\"}`}\n          placeholder={placeholder}\n          value={this.state.domain}\n          onChange={this.handleChange}\n          disabled={!api.loggedIn}\n        />\n        <span className=\"btn-group input-group-append\">\n          {api.loggedIn ? (\n            <button className=\"btn border-secondary\" type=\"submit\">\n              {t(\"Add\")}\n            </button>\n          ) : null}\n          <button\n            onClick={onRefresh}\n            className=\"btn border-secondary\"\n            type=\"button\"\n          >\n            <i className=\"fa fa-sync\" />\n          </button>\n        </span>\n      </form>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"lists\"])(DomainInput);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Alert component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\n\nexport type AlertType = \"info\" | \"success\" | \"danger\";\n\nexport interface AlertProps {\n  type: AlertType;\n  onClick: () => void;\n  message: string;\n}\n\nconst Alert: FunctionComponent<AlertProps> = (props: AlertProps) => {\n  return (\n    <div\n      className={\"alert alert-\" + props.type + \" alert-dismissible fade show\"}\n    >\n      <button type=\"button\" className=\"close\" onClick={props.onClick}>\n        &times;\n      </button>\n      {props.message}\n    </div>\n  );\n};\n\nAlert.defaultProps = {\n  onClick: () => {}\n};\n\nexport default Alert;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain List component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { Button } from \"reactstrap\";\n\nexport interface DomainListProps extends WithNamespaces {\n  domains: string[];\n  onRemove: (domain: string) => void;\n}\n\nconst DomainList = ({ domains, onRemove, t }: DomainListProps) => {\n  // Create a button to remove the domain\n  const removeButton = (item: string) => (\n    <Button\n      color=\"danger\"\n      size=\"sm\"\n      className=\"pull-right\"\n      style={{ marginTop: \"2px\" }}\n      onClick={() => onRemove(item)}\n    >\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  );\n\n  // Map a domain string to a list item\n  const mapDomainsToListItems = (domain: string) => (\n    <li key={domain} className=\"list-group-item\">\n      {api.loggedIn ? removeButton(domain) : null}\n      <span\n        style={{\n          display: \"table-cell\",\n          verticalAlign: \"middle\",\n          height: \"32px\"\n        }}\n      >\n        {domain}\n      </span>\n    </li>\n  );\n\n  let body;\n\n  if (domains.length > 0) {\n    body = domains.map(mapDomainsToListItems);\n  } else {\n    body = (\n      <div className=\"alert alert-info\" role=\"alert\">\n        {t(\"There are no domains in this list\")}\n      </div>\n    );\n  }\n\n  return <ul className=\"list-group\">{body}</ul>;\n};\n\nexport default withNamespaces([\"common\", \"lists\"])(DomainList);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * List Page component (abstracted whitelist, blacklist, etc)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport DomainInput from \"./DomainInput\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport DomainList from \"./DomainList\";\nimport { CancelablePromise, ignoreCancel, makeCancelable } from \"../../util\";\n\nexport interface ListPageProps extends WithNamespaces {\n  title: string;\n  note?: {} | string;\n  placeholder: string;\n  add: (domain: string) => Promise<any | never>;\n  refresh: () => Promise<any | never>;\n  remove: (domain: string) => Promise<any | never>;\n  isValid: (domain: string) => boolean;\n  validationErrorMsg: string;\n}\n\nexport interface ListPageState {\n  domains: string[];\n  message: string;\n  messageType: AlertType;\n}\n\nexport class ListPage extends Component<ListPageProps, ListPageState> {\n  static defaultProps = {\n    note: \"\"\n  };\n\n  state: ListPageState = {\n    domains: [],\n    message: \"\",\n    messageType: \"info\"\n  };\n\n  private addHandler: undefined | CancelablePromise<any | never>;\n  private removeHandler: undefined | CancelablePromise<any | never>;\n  private refreshHandler: undefined | CancelablePromise<any | never>;\n\n  onEnter = (domain: string) => {\n    // Check if the domain was already added\n    if (this.state.domains.includes(domain)) {\n      this.onAlreadyAdded(domain);\n    } else {\n      // Store the domains before adding the new domain, for a possible rollback\n      const prevDomains = this.state.domains.slice();\n\n      // Try to add the domain\n      this.addHandler = makeCancelable(this.props.add(domain));\n      this.addHandler.promise\n        .then(() => {\n          this.onAdded(domain);\n        })\n        .catch(ignoreCancel)\n        .catch(() => {\n          this.onAddFailed(domain, prevDomains);\n        });\n\n      // Show an in-progress message\n      this.onAdding(domain);\n    }\n  };\n\n  onAdding = (domain: string) =>\n    this.setState({\n      message: this.props.t(\"Adding {{domain}}...\", { domain }),\n      messageType: \"info\"\n    });\n\n  onAlreadyAdded = (domain: string) =>\n    this.setState({\n      message: this.props.t(\"{{domain}} is already added\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onAdded = (domain: string) =>\n    this.setState(prevState => ({\n      domains: [...prevState.domains, domain],\n      message: this.props.t(\"Successfully added {{domain}}\", { domain }),\n      messageType: \"success\"\n    }));\n\n  onAddFailed = (domain: string, prevDomains: string[]) =>\n    this.setState({\n      domains: prevDomains,\n      message: this.props.t(\"Failed to add {{domain}}\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onRemoved = (domain: string) =>\n    this.setState(prevState => ({\n      domains: prevState.domains.filter(item => item !== domain)\n    }));\n\n  onRemoveFailed = (domain: string, prevDomains: string[]) =>\n    this.setState({\n      domains: prevDomains,\n      message: this.props.t(\"Failed to remove {{domain}}\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onRemove = (domain: string) => {\n    if (this.state.domains.includes(domain)) {\n      const prevDomains = this.state.domains.slice();\n\n      this.removeHandler = makeCancelable(this.props.remove(domain));\n      this.removeHandler.promise.catch(ignoreCancel).catch(() => {\n        this.onRemoveFailed(domain, prevDomains);\n      });\n\n      this.onRemoved(domain);\n    }\n  };\n\n  onRefresh = () => {\n    this.refreshHandler = makeCancelable(this.props.refresh());\n    this.refreshHandler.promise\n      .then(data => {\n        this.setState({ domains: data });\n      })\n      .catch(ignoreCancel);\n  };\n\n  handleValidationError = () => {\n    this.setState({\n      message: this.props.validationErrorMsg,\n      messageType: \"danger\"\n    });\n  };\n\n  componentDidMount() {\n    this.onRefresh();\n  }\n\n  componentWillUnmount() {\n    if (this.addHandler) this.addHandler.cancel();\n    if (this.removeHandler) this.removeHandler.cancel();\n    if (this.refreshHandler) this.refreshHandler.cancel();\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: \"24px\" }}>\n        <h2 className=\"text-center\">{this.props.title}</h2>\n        <br />\n        <DomainInput\n          placeholder={this.props.placeholder}\n          onEnter={this.onEnter}\n          onRefresh={this.onRefresh}\n          isValid={this.props.isValid}\n          onValidationError={this.handleValidationError}\n        />\n        {this.props.note}\n        {this.state.message ? (\n          <Alert\n            message={this.state.message}\n            type={this.state.messageType}\n            onClick={() => this.setState({ message: \"\" })}\n          />\n        ) : null}\n        <DomainList domains={this.state.domains} onRemove={this.onRemove} />\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"lists\"])(ListPage);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Utility functions for validating domains, hostnames etc.\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport function isValidHostname(hostname: string) {\n  // Must not exceed 253 characters total\n  if (hostname.length > 253) return false;\n  // Each segment must not exceed 63 characters\n  const segments = hostname.split(\".\");\n  // If at least one segment is empty or longer than 63 chars - sets to true, if none - false\n  const hasLongOrEmptySegments = segments.some(\n    segment => segment.length < 1 || segment.length > 63\n  );\n  if (hasLongOrEmptySegments) return false;\n  // Must not be all numbers and periods\n  const joined = segments.join(\"\");\n  // If the hostname without periods make a number, deny\n  if (isPositiveNumber(joined)) return false;\n\n  return /^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)+(\\.([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*))*$/.test(\n    hostname\n  );\n}\n\nexport function isValidDomain(domain: string) {\n  // Make sure it's a fully qualified domain\n  const split = domain.split(\".\");\n  // Has to have at least 2 segments, of at least 1 character each\n  if (split.length < 2) return false;\n  return isValidHostname(domain);\n}\n\nexport function isPositiveNumber(input: string) {\n  // Because parseInt has limitations, e.g. parseInt(\"15ex\") is parsed to 15\n  // Caution, does not work with negative numbers, replace with /^(\\-|\\+)?([0-9])$/ if needed\n  return /^[0-9]+$/.test(input);\n}\n\nexport function isValidRegex(regex: string) {\n  try {\n    new RegExp(regex);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the string is a valid IPv4 address\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address\n */\nexport function isValidIpv4(address: string) {\n  const segments = address.split(\".\");\n\n  // Must have 4 segments\n  if (segments.length !== 4) {\n    return false;\n  }\n\n  // All segments must be numbers (positive)\n  return segments.every(\n    segment => isPositiveNumber(segment) && parseInt(segment) < 256\n  );\n}\n\n/**\n * Check if the string is a valid IPv4 address, and it can contain an optional\n * port after the address, separated with a #.\n * Example: 127.0.0.1#5353\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address and the port\n * (if it exists) is valid.\n */\nexport function isValidIpv4OptionalPort(address: string) {\n  const split = address.split(\"#\");\n  const ipv4 = split[0];\n\n  // Check the IPv4 address\n  if (!isValidIpv4(ipv4)) {\n    return false;\n  }\n\n  // If no port is given or if the port is valid, return true\n  return (\n    split.length === 1 || (split.length === 2 && isPositiveNumber(split[1]))\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Whitelist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidDomain } from \"../util/validate\";\n\nconst Whitelist: FunctionComponent<WithNamespaces> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={t(\"Whitelist\")}\n      placeholder={t(\"Add a domain (example.com or sub.example.com)\")}\n      add={api.addWhitelist}\n      remove={api.removeWhitelist}\n      refresh={api.getWhitelist}\n      isValid={isValidDomain}\n      validationErrorMsg={t(\"Not a valid domain\")}\n      {...props}\n    />\n  );\n};\n\nexport default withNamespaces([\"location\", \"lists\"])(Whitelist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Blacklist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../util/api\";\nimport ListPage from \"../components/list/ListPage\";\nimport { isValidDomain } from \"../util/validate\";\n\nconst Blacklist: FunctionComponent<WithNamespaces> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Exact\")})`}\n      placeholder={t(\"Add a domain (example.com or sub.example.com)\")}\n      add={api.addBlacklist}\n      remove={api.removeBlacklist}\n      refresh={api.getBlacklist}\n      isValid={isValidDomain}\n      validationErrorMsg={t(\"Not a valid domain\")}\n      {...props}\n    />\n  );\n};\n\nexport default withNamespaces([\"location\", \"lists\"])(Blacklist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Regexlist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidRegex } from \"../util/validate\";\n\nconst Regexlist: FunctionComponent<WithNamespaces> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Regex\")})`}\n      placeholder={t(\"Input a regular expression\")}\n      add={api.addRegexlist}\n      remove={api.removeRegexlist}\n      refresh={api.getRegexlist}\n      isValid={isValidRegex}\n      validationErrorMsg={t(\"Not a valid regular expression\")}\n      {...props}\n    />\n  );\n};\n\nexport default withNamespaces([\"location\", \"lists\"])(Regexlist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version - Card component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { Collapse } from \"reactstrap\";\n\nexport interface VersionCardProps extends WithNamespaces {\n  branch: string;\n  hash: string;\n  name: string;\n  tag: string;\n  icon: string;\n}\n\nexport interface VersionCardState {\n  collapsed: boolean;\n}\n\nclass VersionCard extends Component<VersionCardProps, VersionCardState> {\n  state: VersionCardState = {\n    collapsed: true\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"card border-0 bg-primary\">\n        <div className=\"card-block\">\n          <div className=\"card-icon\">\n            <i className={this.props.icon} />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <h3>{this.props.name}</h3>\n          <p>\n            {t(\"Version\")}:{\" \"}\n            {this.props.branch === \"master\" ? this.props.tag : \"vDev\"}\n          </p>\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n          >\n            {t(\"Details\")}\n          </button>\n          <Collapse isOpen={!this.state.collapsed}>\n            <table\n              className=\"table table-borderless table-sm table-condensed\"\n              style={{ marginTop: \"1rem\", marginBottom: \"0\" }}\n            >\n              <tbody>\n                <tr>\n                  <td>{t(\"Branch\")}</td>\n                  <td>{this.props.branch}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Tag\")}</td>\n                  <td>{this.props.tag}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Hash\")}</td>\n                  <td>{this.props.hash}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"settings\"])(VersionCard);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport VersionCard from \"./VersionCard\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nclass VersionInfo extends Component<ApiVersions & WithNamespaces, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"Core\")}\n            icon=\"far fa-dot-circle fa-2x\"\n            branch={this.props.core.branch}\n            hash={this.props.core.hash}\n            tag={this.props.core.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"FTL\")}\n            icon=\"fa fa-industry fa-2x\"\n            branch={this.props.ftl.branch}\n            hash={this.props.ftl.hash}\n            tag={this.props.ftl.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"API\")}\n            icon=\"fa fa-bullseye fa-2x\"\n            branch={this.props.api.branch}\n            hash={this.props.api.hash}\n            tag={this.props.api.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"Web\")}\n            icon=\"far fa-list-alt fa-2x\"\n            branch={this.props.web.branch}\n            hash={this.props.web.hash}\n            tag={this.props.web.tag}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const initialData: ApiVersions = {\n  api: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  core: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  ftl: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  web: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  }\n};\n\nexport const TranslatedVersionInfo = withNamespaces([\"common\"])(VersionInfo);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getVersion}\n    repeatOptions={{ interval: 600000, ignoreCancel: true }}\n    renderInitial={() => <TranslatedVersionInfo {...initialData} {...props} />}\n    renderOk={data => <TranslatedVersionInfo {...data} {...props} />}\n    renderErr={() => <TranslatedVersionInfo {...initialData} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { CancelablePromise, ignoreCancel, makeCancelable } from \"../../util\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Label\n} from \"reactstrap\";\nimport { isValidHostname, isValidIpv4 } from \"../../util/validate\";\nimport Alert, { AlertType } from \"../common/Alert\";\n\nexport interface DHCPInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  settings: ApiDhcpSettings;\n}\n\nclass DHCPInfo extends Component<WithNamespaces, DHCPInfoState> {\n  state: DHCPInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    settings: {\n      active: false,\n      ip_start: \"\",\n      ip_end: \"\",\n      router_ip: \"\",\n      lease_time: 0,\n      domain: \"\",\n      ipv6_support: false\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDhcpSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiResultResponse>;\n\n  loadDHCPInfo = () => {\n    this.loadHandler = makeCancelable(api.getDHCPInfo());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({ settings: res });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDHCPInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to DHCP settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDHCPInfo(this.state.settings)\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  /**\n   * Settings are valid if the value is valid or if DHCP is disabled and the value is empty.\n   *\n   * @param value the value to check\n   * @param validator the validation function\n   */\n  isSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.settings.active && value.length === 0) || validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isIpStartValid = this.isSettingValid(\n      this.state.settings.ip_start,\n      isValidIpv4\n    );\n    const isIpEndValid = this.isSettingValid(\n      this.state.settings.ip_end,\n      isValidIpv4\n    );\n    const isRouterIpValid = this.isSettingValid(\n      this.state.settings.router_ip,\n      isValidIpv4\n    );\n    const isLeaseTimeValid = this.state.settings.lease_time >= 0;\n    const isDomainValid = this.isSettingValid(\n      this.state.settings.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.settings.active}\n              onChange={this.onChange(\"active\", \"checked\")}\n            />\n            {t(\"Enabled\")}\n          </Label>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"startIP\" sm={2}>\n            {t(\"Start IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"startIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_start}\n              onChange={this.onChange(\"ip_start\", \"value\")}\n              invalid={!isIpStartValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"endIP\" sm={2}>\n            {t(\"End IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"endIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_end}\n              onChange={this.onChange(\"ip_end\", \"value\")}\n              invalid={!isIpEndValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"routerIP\" sm={2}>\n            {t(\"Router IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"routerIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.router_ip}\n              onChange={this.onChange(\"router_ip\", \"value\")}\n              invalid={!isRouterIpValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"leaseTime\" sm={2}>\n            {t(\"Lease Time\")}\n          </Label>\n          <Col sm={10}>\n            <InputGroup>\n              <Input\n                id=\"leaseTime\"\n                disabled={!this.state.settings.active}\n                value={this.state.settings.lease_time}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  this.setState(oldState => ({\n                    settings: {\n                      ...oldState.settings,\n                      lease_time: parseInt(e.target.value)\n                    }\n                  }))\n                }\n                invalid={!isLeaseTimeValid}\n              />\n              <InputGroupAddon addonType=\"append\">Hours</InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"domain\" sm={2}>\n            {t(\"Domain\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"domain\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.domain}\n              onChange={this.onChange(\"domain\", \"value\")}\n              invalid={!isDomainValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={!this.state.settings.active}\n              checked={this.state.settings.ipv6_support}\n              onChange={this.onChange(\"ipv6_support\", \"checked\")}\n            />\n            {t(\"IPv6 Support\")}\n          </Label>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={\n            this.state.processing ||\n            !isIpStartValid ||\n            !isIpEndValid ||\n            !isRouterIpValid ||\n            !isLeaseTimeValid ||\n            !isDomainValid\n          }\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"settings\", \"api-errors\"])(DHCPInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A Upstream DNS List Item\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { Button, ListGroupItem } from \"reactstrap\";\n\nexport interface DnsListItemProps {\n  address: string;\n  onRemove: () => void;\n}\n\nconst DnsListItem = ({ address, onRemove }: DnsListItemProps) => (\n  <ListGroupItem>\n    {address}\n    <Button color=\"danger\" size=\"sm\" className=\"pull-right\" onClick={onRemove}>\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  </ListGroupItem>\n);\n\nexport default DnsListItem;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preconfigured Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport interface PreconfiguredUpstream {\n  name: string;\n  primaryIpv4: string;\n  secondaryIpv4: string;\n  primaryIpv6: string;\n  secondaryIpv6: string;\n}\n\n/**\n * A list of preconfigured upstream DNS servers. Each item has primary and\n * secondary IPv4 and IPv6 server entries. Some addresses may be empty.\n */\nexport const preconfiguredUpstreams: Array<PreconfiguredUpstream> = [\n  {\n    name: \"OpenDNS (ECS)\",\n    primaryIpv4: \"208.67.222.222\",\n    secondaryIpv4: \"208.67.220.220\",\n    primaryIpv6: \"2620:0:ccc::2\",\n    secondaryIpv6: \"2620:0:ccd::2\"\n  },\n  {\n    name: \"Google (ECS)\",\n    primaryIpv4: \"8.8.8.8\",\n    secondaryIpv4: \"8.8.4.4\",\n    primaryIpv6: \"2001:4860:4860:0:0:0:0:8888\",\n    secondaryIpv6: \"2001:4860:4860:0:0:0:0:8844\"\n  },\n  {\n    name: \"Quad9 (filtered, DNSSEC)\",\n    primaryIpv4: \"9.9.9.9\",\n    secondaryIpv4: \"149.112.112.112\",\n    primaryIpv6: \"2620:fe::fe\",\n    secondaryIpv6: \"2620:fe::9\"\n  },\n  {\n    name: \"Quad9 (unfiltered, no DNSSEC)\",\n    primaryIpv4: \"9.9.9.10\",\n    secondaryIpv4: \"149.112.112.10\",\n    primaryIpv6: \"2620:fe::10\",\n    secondaryIpv6: \"2620:fe::fe:10\"\n  },\n  {\n    name: \"Quad9 (filtered + ECS)\",\n    primaryIpv4: \"9.9.9.11\",\n    secondaryIpv4: \"149.112.112.11\",\n    primaryIpv6: \"2620:fe::11\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Cloudflare\",\n    primaryIpv4: \"1.1.1.1\",\n    secondaryIpv4: \"1.0.0.1\",\n    primaryIpv6: \"2606:4700:4700::1111\",\n    secondaryIpv6: \"2606:4700:4700::1001\"\n  },\n  {\n    name: \"Level3\",\n    primaryIpv4: \"4.2.2.1\",\n    secondaryIpv4: \"4.2.2.2\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Comodo\",\n    primaryIpv4: \"8.26.56.26\",\n    secondaryIpv4: \"8.20.247.20\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"DNS.WATCH\",\n    primaryIpv4: \"84.200.69.80\",\n    secondaryIpv4: \"84.200.70.40\",\n    primaryIpv6: \"2001:1608:10:25:0:0:1c04:b12f\",\n    secondaryIpv6: \"2001:1608:10:25:0:0:9249:d69b\"\n  }\n];\n\nexport interface PreconfiguredUpstreamOption {\n  label: string;\n  address: string;\n}\n\n/**\n * The preconfigured servers, but with an entry for each address. This is used\n * when displaying the servers in a list.\n */\nexport const preconfiguredUpstreamOptions = preconfiguredUpstreams.flatMap(\n  upstream => {\n    // Parse the upstream address information into the new format\n    const parseUpstream = (address: string, order: string, type: string) => ({\n      label: upstream.name + \" \" + order + \" \" + type + \" (\" + address + \")\",\n      address\n    });\n\n    let parsedUpstreams: Array<PreconfiguredUpstreamOption> = [];\n\n    if (upstream.primaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv4, \"Primary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.secondaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv4, \"Secondary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.primaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv6, \"Primary\", \"IPv6\")\n      );\n    }\n\n    if (upstream.secondaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv6, \"Secondary\", \"IPv6\")\n      );\n    }\n\n    return parsedUpstreams;\n  }\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Input For New DNS List Items\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { Button, InputGroup, InputGroupAddon, ListGroupItem } from \"reactstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport {\n  PreconfiguredUpstreamOption,\n  preconfiguredUpstreamOptions\n} from \"./preconfiguredUpstreams\";\n\nexport interface DnsListNewItemProps {\n  onAdd: (address: string) => void;\n  isValid: (address: string) => boolean;\n  upstreams: Array<string>;\n}\n\nexport interface DnsListNewItemState {\n  address: string;\n  selected: Array<PreconfiguredUpstreamOption>;\n}\n\n/**\n * A component to add upstream DNS servers. The servers are either selected from\n * a list of preconfigured upstreams, or custom servers can be input.\n */\nclass DnsListNewItem extends Component<\n  DnsListNewItemProps & WithNamespaces,\n  DnsListNewItemState\n> {\n  state: DnsListNewItemState = {\n    address: \"\",\n    selected: []\n  };\n\n  private readonly typeahead: RefObject<any>;\n\n  constructor(props: DnsListNewItemProps & WithNamespaces) {\n    super(props);\n    this.typeahead = React.createRef();\n  }\n\n  /**\n   * Get the currently selected upstream address (either custom or preconfigured)\n   *\n   * @returns {string} the selected upstream address\n   */\n  getAddress = () => {\n    if (this.state.selected.length === 0) {\n      return this.state.address;\n    }\n\n    return this.state.selected[0].address;\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isAddressValid = this.props.isValid(this.getAddress());\n\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Typeahead\n            onInputChange={address => this.setState({ address })}\n            onChange={selected => this.setState({ selected })}\n            options={preconfiguredUpstreamOptions.filter(\n              upstream => !this.props.upstreams.includes(upstream.address)\n            )}\n            selected={this.state.selected}\n            emptyLabel={t(\"Detected custom upstream server\")}\n            bodyContainer\n            ref={this.typeahead}\n          />\n\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                // Add the server to the list\n                this.props.onAdd(this.getAddress());\n\n                // Reset the input\n                this.setState({ address: \"\", selected: [] });\n                this.typeahead.current.getInstance().clear();\n              }}\n              disabled={!isAddressValid}\n            >\n              <span className=\"fa fa-plus\" />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n}\n\nexport default withNamespaces(\"settings\")(DnsListNewItem);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * An Editable List of Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { ListGroup } from \"reactstrap\";\nimport DnsListItem from \"./DnsListItem\";\nimport DnsListNewItem from \"./DnsListNewItem\";\nimport { isValidIpv4OptionalPort } from \"../../util/validate\";\n\nexport interface DnsListProps {\n  upstreams: Array<string>;\n  onAdd: (upstream: string) => void;\n  onRemove: (upstream: string) => void;\n}\n\n/**\n * Check if an upstream address is unique and valid\n *\n * @param address the address to check\n * @param upstreams the list of current upstreams\n * @returns {boolean} if the upstream address is unique and valid\n */\nexport const isAddressValid = (address: string, upstreams: Array<string>) =>\n  !upstreams.includes(address) && isValidIpv4OptionalPort(address);\n\nconst DnsList = ({ upstreams, onAdd, onRemove }: DnsListProps) => (\n  <ListGroup style={{ overflowY: \"scroll\", maxHeight: \"350px\" }}>\n    {upstreams.map(upstream => (\n      <DnsListItem\n        key={upstream}\n        onRemove={() => onRemove(upstream)}\n        address={upstream}\n      />\n    ))}\n    <DnsListNewItem\n      onAdd={onAdd}\n      isValid={(address: string) => isAddressValid(address, upstreams)}\n      upstreams={upstreams}\n    />\n  </ListGroup>\n);\n\nexport default DnsList;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport i18next from \"i18next\";\n\nexport interface ConditionalForwardingObject {\n  enabled: boolean;\n  routerIp: string;\n  domain: string;\n}\n\nexport interface ConditionalForwardingSettingsProps {\n  settings: ConditionalForwardingObject;\n  onUpdate: (settings: ConditionalForwardingObject) => void;\n  isRouterIpValid: boolean;\n  isDomainValid: boolean;\n  t: i18next.TranslationFunction;\n}\n\nconst ConditionalForwardingSettings = ({\n  settings,\n  onUpdate,\n  isRouterIpValid,\n  isDomainValid,\n  t\n}: ConditionalForwardingSettingsProps) => (\n  <Fragment>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.enabled}\n          onChange={e => onUpdate({ ...settings, enabled: e.target.checked })}\n        />\n        {t(\"Enabled\")}\n      </Label>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"routerIP\" sm={5}>\n        {t(\"Router IP\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"routerIP\"\n          disabled={!settings.enabled}\n          value={settings.routerIp}\n          onChange={e => onUpdate({ ...settings, routerIp: e.target.value })}\n          invalid={!isRouterIpValid}\n        />\n      </Col>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"localDomain\" sm={5}>\n        {t(\"Local Domain Name\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"localDomain\"\n          disabled={!settings.enabled}\n          value={settings.domain}\n          onChange={e => onUpdate({ ...settings, domain: e.target.value })}\n          invalid={!isDomainValid}\n        />\n      </Col>\n    </FormGroup>\n  </Fragment>\n);\n\nexport default ConditionalForwardingSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: DNS Options\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport i18next from \"i18next\";\n\nexport interface DnsOptionsObject {\n  fqdnRequired: boolean;\n  bogusPriv: boolean;\n  dnssec: boolean;\n  listeningType: string;\n}\n\nexport interface DnsOptionSettingsProps {\n  settings: DnsOptionsObject;\n  onUpdate: (settings: DnsOptionsObject) => void;\n  t: i18next.TranslationFunction;\n}\n\nconst DnsOptionSettings = ({\n  settings,\n  onUpdate,\n  t\n}: DnsOptionSettingsProps) => (\n  <Fragment>\n    <FormGroup row>\n      <Label for=\"listeningBehavior\" sm={5}>\n        {t(\"Interface listening behavior\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"listeningBehavior\"\n          type=\"select\"\n          value={settings.listeningType}\n          onChange={e =>\n            onUpdate({ ...settings, listeningType: e.target.value })\n          }\n        >\n          <option>all</option>\n          <option>local</option>\n          <option>single</option>\n        </Input>\n      </Col>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.fqdnRequired}\n          onChange={e =>\n            onUpdate({ ...settings, fqdnRequired: e.target.checked })\n          }\n        />\n        {t(\"Forward FQDNs only\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.bogusPriv}\n          onChange={e => onUpdate({ ...settings, bogusPriv: e.target.checked })}\n        />\n        {t(\"Only forward public reverse lookups\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.dnssec}\n          onChange={e => onUpdate({ ...settings, dnssec: e.target.checked })}\n        />\n        {t(\"Use DNSSEC\")}\n      </Label>\n    </FormGroup>\n  </Fragment>\n);\n\nDnsOptionSettings.propTypes = {\n  settings: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired\n};\n\nexport default DnsOptionSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { CancelablePromise, ignoreCancel, makeCancelable } from \"../../util\";\nimport api from \"../../util/api\";\nimport DnsList from \"./DnsList\";\nimport { Button, Col, Form, FormGroup } from \"reactstrap\";\nimport ConditionalForwardingSettings, {\n  ConditionalForwardingObject\n} from \"./ConditionalForwardingSettings\";\nimport DnsOptionSettings, { DnsOptionsObject } from \"./DnsOptionSettings\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport { isValidHostname, isValidIpv4 } from \"../../util/validate\";\n\nexport interface DNSInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  upstreamDns: Array<string>;\n  conditionalForwarding: ConditionalForwardingObject;\n  options: DnsOptionsObject;\n}\n\nclass DNSInfo extends Component<WithNamespaces, DNSInfoState> {\n  state: DNSInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    upstreamDns: [],\n    conditionalForwarding: {\n      enabled: false,\n      routerIp: \"\",\n      domain: \"\"\n    },\n    options: {\n      fqdnRequired: false,\n      bogusPriv: false,\n      dnssec: false,\n      listeningType: \"single\"\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDnsSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiResultResponse>;\n\n  loadDNSInfo = () => {\n    this.loadHandler = makeCancelable(api.getDNSInfo());\n    this.loadHandler.promise\n      .then(res => {\n        // If the domain is empty, fill it in with a default.\n        const savedDomain = res.conditional_forwarding.domain;\n        const domain = savedDomain.length === 0 ? \"lan\" : savedDomain;\n\n        this.setState({\n          upstreamDns: res.upstream_dns,\n          conditionalForwarding: {\n            enabled: res.conditional_forwarding.enabled,\n            routerIp: res.conditional_forwarding.router_ip,\n            domain\n          },\n          options: {\n            fqdnRequired: res.options.fqdn_required,\n            bogusPriv: res.options.bogus_priv,\n            dnssec: res.options.dnssec,\n            listeningType: res.options.listening_type\n          }\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDNSInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  handleUpstreamAdd = (upstream: string) => {\n    this.setState({\n      upstreamDns: this.state.upstreamDns.concat(upstream)\n    });\n  };\n\n  handleUpstreamRemove = (upstream: string) => {\n    this.setState({\n      upstreamDns: this.state.upstreamDns.filter(item => item !== upstream)\n    });\n  };\n\n  handleConditionalForwardingUpdate = (\n    conditionalForwarding: ConditionalForwardingObject\n  ) => {\n    this.setState({ conditionalForwarding });\n  };\n\n  handleDnsOptionsUpdate = (options: DnsOptionsObject) => {\n    this.setState({ options });\n  };\n\n  /**\n   * Save changes to DNS settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDNSInfo({\n        upstream_dns: this.state.upstreamDns,\n        conditional_forwarding: {\n          enabled: this.state.conditionalForwarding.enabled,\n          router_ip: this.state.conditionalForwarding.routerIp,\n          domain: this.state.conditionalForwarding.domain\n        },\n        options: {\n          fqdn_required: this.state.options.fqdnRequired,\n          bogus_priv: this.state.options.bogusPriv,\n          dnssec: this.state.options.dnssec,\n          listening_type: this.state.options.listeningType\n        }\n      })\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  isCFSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.conditionalForwarding.enabled && value.length === 0) ||\n      validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isRouterIpValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.routerIp,\n      isValidIpv4\n    );\n\n    const isDomainValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Col sm={6}>\n            <h3>{t(\"Upstream DNS Servers\")}</h3>\n            <DnsList\n              onAdd={this.handleUpstreamAdd}\n              onRemove={this.handleUpstreamRemove}\n              upstreams={this.state.upstreamDns}\n            />\n          </Col>\n          <Col sm={6}>\n            <h3>{t(\"Conditional Forwarding\")}</h3>\n            <ConditionalForwardingSettings\n              settings={this.state.conditionalForwarding}\n              onUpdate={this.handleConditionalForwardingUpdate}\n              isRouterIpValid={isRouterIpValid}\n              isDomainValid={isDomainValid}\n              t={t}\n            />\n            <h3>{t(\"DNS Options\")}</h3>\n            <DnsOptionSettings\n              settings={this.state.options}\n              onUpdate={this.handleDnsOptionsUpdate}\n              t={t}\n            />\n          </Col>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={this.state.processing || !isRouterIpValid || !isDomainValid}\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"settings\"])(DNSInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Network component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { Subtract, WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { Col, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface NetworkInfoProps extends WithNamespaces {\n  interface: string;\n  ipv4Address: string;\n  ipv6Address: string;\n  hostname: string;\n}\n\nclass NetworkInfo extends Component<NetworkInfoProps, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"interface\" sm={4}>\n            {t(\"Interface\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"interface\"\n              value={this.props.interface}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"ipv4_address\" sm={4}>\n            {t(\"IPv4 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv4_address\"\n              value={this.props.ipv4Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"ipv6_address\" sm={4}>\n            {t(\"IPv6 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv6_address\"\n              value={this.props.ipv6Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"hostname\" sm={4}>\n            {t(\"Hostname\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"hostname\"\n              value={this.props.hostname}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport const transformData = (\n  data: ApiNetworkSettings\n): Subtract<NetworkInfoProps, WithNamespaces> => ({\n  interface: data.interface,\n  ipv4Address: data.ipv4_address,\n  ipv6Address: data.ipv6_address,\n  hostname: data.hostname\n});\n\nexport const initialData = () => ({\n  interface: \"\",\n  ipv4Address: \"\",\n  ipv6Address: \"\",\n  hostname: \"\"\n});\n\nexport const TranslatedNetworkInfo = withNamespaces([\"common\", \"settings\"])(\n  NetworkInfo\n);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getNetworkInfo}\n    repeatOptions={{\n      interval: 600000,\n      ignoreCancel: true\n    }}\n    renderInitial={() => (\n      <TranslatedNetworkInfo {...initialData()} {...props} />\n    )}\n    renderOk={data => (\n      <TranslatedNetworkInfo {...transformData(data)} {...props} />\n    )}\n    renderErr={() => <TranslatedNetworkInfo {...initialData()} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: FTL Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface FTLInfoProps {\n  fileSize: number;\n  queries: number;\n  sqliteVersion: string;\n}\n\nclass FTLInfo extends Component<FTLInfoProps & WithNamespaces, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <pre>\n        {t(\"Queries\")}: {this.props.queries}\n        <br />\n        {t(\"Filesize\")}: {this.props.fileSize.toLocaleString()} B<br />\n        {t(\"SQLite version\")}: {this.props.sqliteVersion.toLocaleString()}\n        <br />\n      </pre>\n    );\n  }\n}\n\nexport const transformData = (data: ApiFtlDbResponse): FTLInfoProps => ({\n  fileSize: data.filesize,\n  queries: data.queries,\n  sqliteVersion: data.sqlite_version\n});\n\nexport const initialData = {\n  fileSize: 0,\n  queries: 0,\n  sqliteVersion: \"\"\n};\n\nexport const TranslatedFTLInfo = withNamespaces([\"settings\"])(FTLInfo);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getFTLdb}\n    repeatOptions={{\n      interval: 600000,\n      ignoreCancel: true\n    }}\n    renderInitial={() => <TranslatedFTLInfo {...initialData} {...props} />}\n    renderOk={data => <TranslatedFTLInfo {...transformData(data)} {...props} />}\n    renderErr={() => <TranslatedFTLInfo {...initialData} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Networking DNS & DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport DHCPInfo from \"../components/settings/DHCPInfo\";\nimport DNSInfo from \"../components/settings/DNSInfo\";\nimport NetworkInfo from \"../components/settings/NetworkInfo\";\nimport FTLInfo from \"../components/settings/FTLInfo\";\n\nexport interface NetworkingState {\n  activeTab: string;\n}\n\nclass Networking extends Component<WithNamespaces, NetworkingState> {\n  state = {\n    activeTab: \"network\"\n  };\n\n  /**\n   * Set the active tab to the input\n   *\n   * @param tab the tab ID to switch to\n   */\n  setTab = (tab: string) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  };\n\n  /**\n   * Create a navigation tab\n   *\n   * @param id the tab's ID\n   * @param name the tab's display name\n   * @returns {NavItem} the tab component\n   */\n  tab = (id: string, name: string): ReactNode => (\n    <NavItem>\n      <NavLink\n        active={this.state.activeTab === id}\n        onClick={() => this.setTab(id)}\n      >\n        {name}\n      </NavLink>\n    </NavItem>\n  );\n\n  /**\n   * Create tab content\n   *\n   * @param id the tab's ID\n   * @param component the component to render in the tab\n   * @returns {ReactNode} the tab content component\n   */\n  tabContent = (id: string, component: ReactNode): ReactNode => (\n    <TabPane tabId={id}>{component}</TabPane>\n  );\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Nav tabs>\n          {this.tab(\"network\", t(\"Network\"))}\n          {this.tab(\"dhcp\", t(\"DHCP\"))}\n          {this.tab(\"dns\", t(\"DNS\"))}\n          {this.tab(\"ftl\", t(\"FTL\"))}\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          {this.tabContent(\"network\", <NetworkInfo />)}\n          {this.tabContent(\"dhcp\", <DHCPInfo />)}\n          {this.tabContent(\"dns\", <DNSInfo />)}\n          {this.tabContent(\"ftl\", <FTLInfo />)}\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces([\"common\", \"settings\"])(Networking);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Forgot Password Reminder\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\n\nexport interface ForgotPasswordProps extends WithNamespaces {\n  error: boolean;\n}\n\nexport interface ForgotPasswordState {\n  collapsed: boolean;\n}\n\nclass ForgotPassword extends Component<\n  ForgotPasswordProps,\n  ForgotPasswordState\n> {\n  state: ForgotPasswordState = {\n    collapsed: true\n  };\n\n  /**\n   * Handle collapsing the body when clicked\n   */\n  onClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  /**\n   * @returns {Boolean|boolean} If the body should be expanded\n   */\n  isExpanded = () => this.props.error || !this.state.collapsed;\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div\n          className={\n            \"card \" + (this.props.error ? \"border-danger\" : \"border-primary\")\n          }\n        >\n          <div\n            className={\n              \"card-header \" + (this.props.error ? \"bg-danger\" : \"bg-primary\")\n            }\n            style={{ paddingRight: \"10px\" }}\n          >\n            <h3\n              className=\"card-title\"\n              style={{ fontSize: \"18px\", display: \"inline-block\", margin: 0 }}\n            >\n              {t(\"Forgot Password\")}\n            </h3>\n\n            <span className=\"pull-right\">\n              <button\n                type=\"button\"\n                className=\"btn btn-card-tool\"\n                onClick={this.onClick}\n              >\n                <i\n                  className={\n                    \"fa \" + (this.isExpanded() ? \"fa-minus\" : \"fa-plus\")\n                  }\n                />\n              </button>\n            </span>\n          </div>\n          <div\n            className={\n              \"card-body bg-light\" + (this.isExpanded() ? \"\" : \" collapse\")\n            }\n            style={{ padding: \"10px\" }}\n          >\n            {t(\"forgot_password_description\")}\n            <pre style={{ textAlign: \"center\" }}>sudo pihole -a -p</pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces(\"login\")(ForgotPassword);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Login page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, {\n  ChangeEvent,\n  Component,\n  FormEvent,\n  Fragment,\n  KeyboardEvent\n} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport sha from \"sha.js\";\nimport api from \"../util/api\";\nimport logo from \"../img/logo.svg\";\nimport { routes } from \"../routes\";\nimport ForgotPassword from \"../components/login/ForgotPassword\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport config from \"../config\";\nimport { History, LocationDescriptorObject } from \"history\";\n\nexport interface LoginProps extends WithNamespaces {\n  location: LocationDescriptorObject<{ from: Location }>;\n  history: History;\n}\n\nexport interface LoginState {\n  password: string;\n  error: boolean;\n  cookiesEnabled: boolean;\n}\n\nclass Login extends Component<LoginProps, LoginState> {\n  state = {\n    password: \"\",\n    error: false,\n    cookiesEnabled: false\n  };\n\n  componentWillMount() {\n    // Check if cookies are enabled\n    if (navigator.cookieEnabled) this.setState({ cookiesEnabled: true });\n  }\n\n  /**\n   * Update the password in the state.\n   *\n   * @param e the event\n   */\n  handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: e.target.value });\n  };\n\n  /**\n   * If they clicked Enter, try to authenticate them.\n   */\n  handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      this.authenticate();\n    }\n  };\n\n  /**\n   * Try to authenticate the user\n   */\n  authenticate = (e?: FormEvent) => {\n    // Prevent the page from reloading when the user gets redirected\n    e && e.preventDefault();\n\n    // Hash the password twice before sending to the API\n    let hashedPassword = sha(\"sha256\")\n      .update(this.state.password)\n      .digest(\"hex\");\n    hashedPassword = sha(\"sha256\")\n      .update(hashedPassword)\n      .digest(\"hex\");\n\n    // Clear the state\n    this.setState({ password: \"\", error: false });\n\n    // Send the password to the API to authenticate the user\n    api\n      .authenticate(hashedPassword)\n      .then(data => {\n        // Verify status\n        if (data.status !== \"success\") {\n          console.log(\"Failed to log in:\");\n          console.log(data);\n          return;\n        }\n\n        api.loggedIn = true;\n\n        if (config.fakeAPI) {\n          // When using the fake API, set the cookie ourselves\n          document.cookie = \"user_id=;\";\n        }\n\n        // Redirect to the page the user was originally going to, or if that doesn't exist, go to home\n        const locationState = this.props.location.state || {\n          from: { pathname: \"/\" }\n        };\n        this.props.history.push(locationState.from.pathname);\n      })\n      // If there was an error, tell the user they used the wrong password\n      .catch(() => this.setState({ error: true }));\n  };\n\n  render() {\n    // If the user is already logged in, then go to the home page\n    if (api.loggedIn) return <Redirect to=\"/\" />;\n\n    const { t } = this.props;\n\n    return (\n      <div\n        className=\"mainbox col-md-8 offset-md-2 col-lg-6 offset-lg-3\"\n        style={{ float: \"none\" }}\n      >\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <div style={{ textAlign: \"center\" }}>\n              <img src={logo} alt=\"Logo\" width=\"30%\" />\n            </div>\n            <br />\n\n            <div className=\"card-title text-center\" style={{ marginBottom: 0 }}>\n              <span className=\"logo-lg\" style={{ fontSize: \"25px\" }}>\n                Pi-\n                <b>hole</b>\n              </span>\n            </div>\n            <div className=\"login-box-msg\">\n              {t(\"Sign in to start your session\")}\n              {// If the user tried to go to a protected page and is not logged in,\n              // tell them they will be redirected once login is successful\n              this.props.location.state &&\n              this.props.location.state.from.pathname in routes(t) ? (\n                <Fragment>\n                  <br />\n                  {t('You will be transferred to the \"{{page}}\" page', {\n                    page: routes(t)[this.props.location.state.from.pathname]\n                  })}\n                </Fragment>\n              ) : null}\n              {// If cookies are not enabled (or detected), show a warning\n              !this.state.cookiesEnabled ? (\n                <div className=\"text-center\" style={{ color: \"#F00\" }}>\n                  {t(\"Verify that cookies are allowed for {{host}}\", {\n                    host: window.location.host\n                  })}\n                </div>\n              ) : null}\n            </div>\n            {this.state.error ? (\n              <div className=\"form-group has-error login-box-msg\">\n                <label className=\"control-label\">\n                  <i className=\"fa fa-times-circle-o\" /> {t(\"Wrong Password!\")}\n                </label>\n              </div>\n            ) : null}\n          </div>\n\n          <div className=\"card-body\">\n            <form id=\"loginform\" onSubmit={this.authenticate}>\n              <div\n                className={\n                  \"input-group\" + (this.state.error ? \" has-error\" : \"\")\n                }\n              >\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={this.state.password}\n                  onChange={this.handlePasswordChange}\n                  onKeyDown={this.handleKeyDown}\n                  placeholder={t(\"Password\")}\n                  autoFocus\n                />\n                <div className=\"input-group-append\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    {t(\"Log in\")}\n                  </button>\n                </div>\n              </div>\n              <br />\n              <ForgotPassword error={this.state.error} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces([\"login\", \"location\"])(Login);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Logout the user\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport api from \"../util/api\";\nimport config from \"../config\";\n\nexport default class Logout extends Component {\n  componentWillMount() {\n    api.loggedIn = false;\n\n    if (config.fakeAPI) {\n      // When using the fake API, don't try deleting the resource\n      // (it results in an error). Instead, delete the cookie.\n      document.cookie =\n        \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    } else {\n      api.logout();\n    }\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A button in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { MouseEventHandler } from \"react\";\n\nexport interface NavButtonProps {\n  name: string;\n  icon: string;\n  onClick: MouseEventHandler;\n}\n\nexport default ({\n  name,\n  icon,\n  onClick = e => e.preventDefault()\n}: NavButtonProps) => (\n  <li className=\"nav-item\">\n    <a href=\"#\" onClick={onClick} className=\"nav-link\">\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </a>\n  </li>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * The enable/disable sidebar button\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport NavButton from \"./NavButton\";\nimport NavDropdown from \"./NavDropdown\";\nimport { StatusContext } from \"./context/StatusContext\";\nimport { CancelablePromise, makeCancelable } from \"../../util\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader\n} from \"reactstrap\";\n\nexport interface EnableDisableProps extends WithNamespaces {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n}\n\nexport interface EnableDisableState {\n  processing: boolean;\n  customModalShown: boolean;\n  customTime: number;\n  customMultiplier: number;\n}\n\nclass EnableDisable extends Component<EnableDisableProps, EnableDisableState> {\n  state: EnableDisableState = {\n    processing: false,\n    customModalShown: false,\n    customTime: 60,\n    customMultiplier: 60\n  };\n\n  private updateHandler: CancelablePromise<ApiStatus> | undefined;\n\n  /**\n   * Convert a status action into a status. ex. \"enable\" -> \"enabled\"\n   *\n   * @param action The action\n   * @returns {string} The associated status\n   */\n  getStatusFromAction = (action: StatusAction): Status => {\n    switch (action) {\n      case \"enable\":\n        return \"enabled\";\n      case \"disable\":\n        return \"disabled\";\n    }\n  };\n\n  /**\n   * Send a request to the API to update the status\n   *\n   * @param action The action to perform (\"enable\" or \"disable\")\n   * @param time The amount of time to disable for. This setting is optional.\n   */\n  setStatus = (action: StatusAction, time?: number) => {\n    if (this.state.processing) {\n      // Wait for the first status change to go through\n      return;\n    }\n\n    // Only allow one status update at a time\n    this.setState({ processing: true });\n\n    // Send the status change request\n    this.updateHandler = makeCancelable(api.setStatus(action, time));\n    this.updateHandler.promise\n      // Refresh once we get a good response\n      .then(() =>\n        this.props.refresh({ status: this.getStatusFromAction(action) })\n      )\n      // Even if it failed, allow new status changes\n      .finally(() => this.setState({ processing: false }));\n  };\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Toggle the custom time modal\n   */\n  toggleModal = () => {\n    this.setState({ customModalShown: !this.state.customModalShown });\n  };\n\n  /**\n   * Submit the request to disable blocking for the custom time that the user\n   * input.\n   *\n   * @param e the submit event\n   */\n  submitCustom = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({ customModalShown: false });\n    this.setStatus(\n      \"disable\",\n      this.state.customTime * this.state.customMultiplier\n    );\n  };\n\n  /**\n   * Render the custom time modal\n   *\n   * @returns {*} the modal component tree\n   */\n  renderModal = () => {\n    const { t } = this.props;\n\n    return (\n      <Modal\n        isOpen={this.state.customModalShown}\n        toggle={this.toggleModal}\n        style={{ maxWidth: \"300px\" }}\n      >\n        <Form onSubmit={this.submitCustom}>\n          <ModalHeader toggle={this.toggleModal}>\n            {t(\"Custom time\")}\n          </ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input\n                type=\"number\"\n                value={this.state.customTime}\n                onChange={e =>\n                  this.setState({ customTime: parseInt(e.target.value) })\n                }\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Input\n                  type=\"select\"\n                  value={this.state.customMultiplier}\n                  onChange={e =>\n                    this.setState({\n                      customMultiplier: parseInt(e.target.value)\n                    })\n                  }\n                >\n                  <option value={1}>{t(\"Seconds\")}</option>\n                  <option value={60}>{t(\"Minutes\")}</option>\n                </Input>\n              </InputGroupAddon>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\">{t(\"Apply\")}</Button>\n            <Button onClick={this.toggleModal}>{t(\"Cancel\")}</Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  };\n\n  render() {\n    const { t, status } = this.props;\n\n    switch (status) {\n      case \"enabled\":\n        return (\n          <NavDropdown name={t(\"Disable\")} icon=\"fa fa-stop\" isOpen={false}>\n            <NavButton\n              name={t(\"Permanently\")}\n              icon=\"fa fa-stop\"\n              onClick={() => this.setStatus(\"disable\")}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 10 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 10)}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 30 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 30)}\n            />\n            <NavButton\n              name={t(\"For {{time}} minutes\", { time: 5 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 5 * 60)}\n            />\n            <NavButton\n              name={t(\"Custom time\")}\n              icon=\"fa fa-clock\"\n              onClick={this.toggleModal}\n            />\n            {this.renderModal()}\n          </NavDropdown>\n        );\n      case \"disabled\":\n        return (\n          <NavButton\n            name={t(\"Enable\")}\n            icon=\"fa fa-play\"\n            onClick={() => this.setStatus(\"enable\")}\n          />\n        );\n      case \"unknown\":\n      default:\n        return null;\n    }\n  }\n}\n\nexport const TranslatedEnableDisable = withNamespaces(\"common\")(EnableDisable);\n\nexport default () => (\n  <StatusContext.Consumer>\n    {({ status, refresh }) => (\n      <TranslatedEnableDisable status={status} refresh={refresh} />\n    )}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preferences context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithAPIData } from \"../WithAPIData\";\nimport api from \"../../../util/api\";\n\n/**\n * The data shared by the preferences context\n */\nexport interface PreferencesContextType {\n  settings: ApiPreferences;\n  refresh: (data?: ApiPreferences) => void;\n}\n\n/**\n * The key used to store preferences in local storage\n */\nexport const WEB_PREFERENCES_STORAGE_KEY = \"webPreferences\";\n\n/**\n * The default preferences. These preferences are used until the API responds\n * with the real preferences, unless there are cached preferences available.\n */\nexport const defaultPreferences: ApiPreferences = {\n  layout: \"boxed\",\n  language: \"en\"\n};\n\n/**\n * Load the initial web interface preferences. Cached preferences from local\n * storage will be used if available, otherwise default preferences will be\n * used.\n */\nexport const loadInitialPreferences = (): ApiPreferences => {\n  const cachedPreferencesString = localStorage.getItem(\n    WEB_PREFERENCES_STORAGE_KEY\n  );\n\n  if (cachedPreferencesString === null) {\n    return defaultPreferences;\n  }\n\n  try {\n    return JSON.parse(cachedPreferencesString);\n  } catch (e) {\n    return defaultPreferences;\n  }\n};\n\n/**\n * The context which will be used initially, until the API responds with the\n * real preferences. These preferences are loaded from cache if available.\n */\nconst initialContext: PreferencesContextType = {\n  settings: loadInitialPreferences(),\n  refresh: () => {}\n};\n\n/**\n * The React context which provides the preferences to consumers\n */\nexport const PreferencesContext = React.createContext(initialContext);\n\n/**\n * Provide the web interface preferences via React context.\n * Sub-components can use the `PreferencesContext.Consumer` component to get\n * the preferences.\n */\nexport const PreferencesProvider = ({\n  children,\n  ...props\n}: {\n  children: ReactNode;\n}) => (\n  <WithAPIData\n    apiCall={api.getPreferences}\n    renderInitial={() => (\n      <PreferencesContext.Provider value={initialContext} {...props}>\n        {children}\n      </PreferencesContext.Provider>\n    )}\n    renderOk={(settings, refresh) => {\n      // Update the cached settings\n      localStorage.setItem(\n        WEB_PREFERENCES_STORAGE_KEY,\n        JSON.stringify(settings)\n      );\n\n      return (\n        <PreferencesContext.Provider value={{ settings, refresh }} {...props}>\n          {children}\n        </PreferencesContext.Provider>\n      );\n    }}\n    renderErr={(_, refresh) => (\n      <PreferencesContext.Provider\n        // Reload the initial settings here, as the cache may have been updated\n        // between page load and when the error occurred\n        value={{ settings: loadInitialPreferences(), refresh }}\n        {...props}\n      >\n        {children}\n      </PreferencesContext.Provider>\n    )}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Web Interface preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithNamespaces, withNamespaces } from \"react-i18next\";\nimport { CancelablePromise, ignoreCancel, makeCancelable } from \"../../util\";\nimport api from \"../../util/api\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport { Button, Col, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { PreferencesContext } from \"../common/context/PreferencesContext\";\nimport languages from \"../../languages.json\";\n\nexport interface PreferenceSettingsProps {\n  settings: ApiPreferences;\n  refresh: (preferences?: ApiPreferences) => void;\n}\n\nexport interface PreferenceSettingsState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  translateMessage: boolean;\n  error: { key: string; data: any } | null;\n  settings: ApiPreferences;\n}\n\nclass PreferenceSettings extends Component<\n  PreferenceSettingsProps & WithNamespaces,\n  PreferenceSettingsState\n> {\n  state: PreferenceSettingsState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    translateMessage: true,\n    error: null,\n    // Initial value is the current settings\n    settings: this.props.settings\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiPreferences>;\n  private updateHandler: undefined | CancelablePromise<ApiResultResponse>;\n\n  loadPreferences = () => {\n    this.loadHandler = makeCancelable(api.getPreferences());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({ settings: res });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadPreferences();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to preferences\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({\n      alertMessage: \"Processing...\",\n      error: null,\n      alertType: \"info\",\n      showAlert: true,\n      processing: true,\n      translateMessage: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updatePreferences(this.state.settings)\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: \"Successfully saved preferences\",\n          alertType: \"success\",\n          showAlert: true,\n          processing: false,\n          translateMessage: true\n        });\n\n        // Update anyone using the preferences\n        this.props.refresh(this.state.settings);\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n        let apiError = null;\n        let translateMessage = true;\n\n        if (error instanceof Error) {\n          message = error.message;\n          translateMessage = false;\n        } else {\n          message = \"API Error: {{error}}\";\n          apiError = error;\n        }\n\n        this.setState({\n          alertMessage: message,\n          error: apiError,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false,\n          translateMessage\n        });\n      });\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  getAlertMessage = () => {\n    const { t } = this.props;\n\n    if (this.state.error) {\n      // Translate the API error\n      return t(this.state.alertMessage, {\n        error: t(this.state.error.key, this.state.error.data)\n      });\n    } else {\n      // Check if the message should be translated\n      if (this.state.translateMessage) {\n        return t(this.state.alertMessage);\n      } else {\n        return this.state.alertMessage;\n      }\n    }\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.getAlertMessage()}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Label for=\"layout\" sm={2}>\n            {t(\"Layout\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"layout\"\n              type=\"select\"\n              value={this.state.settings.layout}\n              onChange={this.onChange(\"layout\", \"value\")}\n            >\n              <option value=\"boxed\">{t(\"Boxed\")}</option>\n              <option value=\"traditional\">{t(\"Full\")}</option>\n            </Input>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"language\" sm={2}>\n            {t(\"Language\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"language\"\n              type=\"select\"\n              value={this.state.settings.language}\n              onChange={this.onChange(\"language\", \"value\")}\n            >\n              {languages.map((language: string) => (\n                <option key={language} value={language}>\n                  {language}\n                </option>\n              ))}\n            </Input>\n          </Col>\n        </FormGroup>\n        <Button type=\"submit\" disabled={this.state.processing}>\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst TranslatedPreferenceSettings = withNamespaces([\n  \"common\",\n  \"settings\",\n  \"api-errors\",\n  \"preferences\"\n])(PreferenceSettings);\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings, refresh }) => (\n      <TranslatedPreferenceSettings settings={settings} refresh={refresh} />\n    )}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Navigation information\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport Dashboard from \"./views/Dashboard\";\nimport QueryLog from \"./components/log/QueryLog\";\nimport Whitelist from \"./views/Whitelist\";\nimport Blacklist from \"./views/Blacklist\";\nimport Regexlist from \"./views/Regexlist\";\nimport Versions from \"./views/Versions\";\nimport Networking from \"./views/Networking\";\nimport Login from \"./views/Login\";\nimport Logout from \"./views/Logout\";\nimport EnableDisable from \"./components/common/EnableDisable\";\nimport Preferences from \"./views/Preferences\";\nimport i18next from \"i18next\";\nimport { ComponentType } from \"react\";\n\nexport const routes = (\n  t: i18next.TranslationFunction\n): { [key: string]: string } => ({\n  \"/dashboard\": t(\"Dashboard\"),\n  \"/query-log\": t(\"Query Log\"),\n  \"/whitelist\": t(\"Whitelist\"),\n  \"/blacklist/exact\": `${t(\"Blacklist\")} (${t(\"Exact\")})`,\n  \"/blacklist/regex\": `${t(\"Blacklist\")} (${t(\"Regex\")})`,\n  \"/settings/versions\": t(\"Versions\"),\n  \"/settings/networking\": t(\"Networking\"),\n  \"/settings/preferences\": t(\"Preferences\"),\n  \"/login\": t(\"Login\"),\n  \"/logout\": t(\"Logout\")\n});\n\nexport interface RouteItem {\n  name: string;\n  url: string;\n  component: ComponentType<any>;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n}\n\nexport interface RouteCustomItem {\n  customComponent: ComponentType<any>;\n  auth: boolean;\n  authStrict?: boolean;\n  fakeRoute: boolean;\n}\n\nexport interface RouteGroup {\n  name: string;\n  url: string;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n  children: Array<RouteData>;\n}\n\nexport type RouteData = RouteItem | RouteGroup | RouteCustomItem;\n\nexport const nav: Array<RouteData> = [\n  {\n    name: \"Dashboard\",\n    url: \"/dashboard\",\n    component: Dashboard,\n    icon: \"fa fa-tachometer-alt\",\n    auth: false\n  },\n  {\n    name: \"Query Log\",\n    url: \"/query-log\",\n    component: QueryLog,\n    icon: \"fa fa-database\",\n    auth: true\n  },\n  {\n    name: \"Whitelist\",\n    url: \"/whitelist\",\n    component: Whitelist,\n    icon: \"far fa-check-circle\",\n    auth: false\n  },\n  {\n    name: \"Blacklist\",\n    url: \"/blacklist\",\n    icon: \"fa fa-ban\",\n    auth: false,\n    children: [\n      {\n        name: \"Exact\",\n        url: \"/blacklist/exact\",\n        component: Blacklist,\n        icon: \"fa fa-ban\",\n        auth: false\n      },\n      {\n        name: \"Regex\",\n        url: \"/blacklist/regex\",\n        component: Regexlist,\n        icon: \"fa fa-ban\",\n        auth: false\n      }\n    ]\n  },\n  {\n    customComponent: EnableDisable,\n    fakeRoute: true,\n    auth: true\n  },\n  {\n    name: \"Settings\",\n    url: \"/settings\",\n    icon: \"fa fa-wrench\",\n    auth: true,\n    children: [\n      {\n        name: \"Versions\",\n        url: \"/settings/versions\",\n        component: Versions,\n        icon: \"fa fa-download\",\n        auth: true\n      },\n      {\n        name: \"Networking\",\n        url: \"/settings/networking\",\n        component: Networking,\n        icon: \"fa fa-sitemap\",\n        auth: true\n      },\n      {\n        name: \"Preferences\",\n        url: \"/settings/preferences\",\n        component: Preferences,\n        icon: \"fa fa-sliders-h\",\n        auth: true\n      }\n    ]\n  },\n  {\n    name: \"Login\",\n    url: \"/login\",\n    component: Login,\n    icon: \"fa fa-user\",\n    auth: false,\n    authStrict: true\n  },\n  {\n    name: \"Logout\",\n    url: \"/logout\",\n    component: Logout,\n    icon: \"fa fa-user-times\",\n    auth: true,\n    authStrict: true\n  }\n];\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Dashboard page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport SummaryStats from \"../components/dashboard/SummaryStats\";\nimport QueriesGraph from \"../components/dashboard/QueriesGraph\";\nimport ClientsGraph from \"../components/dashboard/ClientsGraph\";\nimport QueryTypesChart from \"../components/dashboard/QueryTypesChart\";\nimport UpstreamsChart from \"../components/dashboard/UpstreamsChart\";\nimport TopDomains from \"../components/dashboard/TopDomains\";\nimport TopBlocked from \"../components/dashboard/TopBlocked\";\nimport TopClients from \"../components/dashboard/TopClients\";\nimport api from \"../util/api\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    <div className=\"row\">\n      <SummaryStats />\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <QueriesGraph />\n      </div>\n    </div>\n    {api.loggedIn ? (\n      <Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ClientsGraph />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <QueryTypesChart />\n          </div>\n          <div className=\"col-md-6\">\n            <UpstreamsChart />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-xl-4\">\n            <TopDomains />\n          </div>\n          <div className=\"col-md-6 col-xl-4\">\n            <TopBlocked />\n          </div>\n          <div className=\"col-md-6 col-xl-4\">\n            <TopClients />\n          </div>\n        </div>\n      </Fragment>\n    ) : null}\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings - Software versions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport VersionInfo from \"../components/settings/VersionInfo\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    <div className=\"container-flex\">\n      <VersionInfo />\n    </div>\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Web Interface Preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport PreferenceSettings from \"../components/settings/PreferenceSettings\";\n\nexport default () => <PreferenceSettings />;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * React context objects\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { StatusProvider } from \"./StatusContext\";\nimport { PreferencesProvider } from \"./PreferencesContext\";\nimport { TimeRangeProvider } from \"./TimeRangeContext\";\n\n/**\n * Provide all of the necessary context needed at the root level to the\n * children. Currently, this includes status, preferences, and time range (for\n * the dashboard).\n */\nexport const GlobalContextProvider = ({\n  children\n}: {\n  children: ReactNode;\n}) => (\n  <StatusProvider>\n    <PreferencesProvider>\n      <TimeRangeProvider>{children}</TimeRangeProvider>\n    </PreferencesProvider>\n  </StatusProvider>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Apply the web interface layout preference\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { PreferencesContext } from \"./context/PreferencesContext\";\n\n/**\n * Update the web interface layout\n *\n * @param layout The layout to update to\n */\nconst applyLayout = (layout: WebLayout) => {\n  switch (layout) {\n    case \"boxed\":\n      document.body.classList.add(\"boxcontainer\");\n      document.body.classList.add(\"background-image\");\n      break;\n    case \"traditional\":\n      document.body.classList.remove(\"boxcontainer\");\n      document.body.classList.remove(\"background-image\");\n      break;\n  }\n};\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings }) => {\n      applyLayout(settings.layout);\n\n      // This is not a visual component, so nothing should be shown\n      return null;\n    }}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Apply the web interface language preference\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { PreferencesContext } from \"./context/PreferencesContext\";\nimport i18n from \"i18next\";\n\nconst applyLanguage = (language: string) => {\n  if (i18n.language === language) {\n    // Don't change the language if it's already correctly set\n    return;\n  }\n\n  // noinspection JSIgnoredPromiseFromCall\n  i18n.changeLanguage(language);\n};\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings }) => {\n      applyLanguage(settings.language);\n\n      return null;\n    }}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Main container of the web interface (performs main routing)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ComponentType, ReactNode } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Header, { mobileSidebarHide } from \"../components/common/Header\";\nimport Sidebar from \"../components/common/Sidebar\";\nimport Footer from \"../components/common/Footer\";\nimport api from \"../util/api\";\nimport {\n  nav,\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../routes\";\nimport { GlobalContextProvider } from \"../components/common/context\";\nimport LayoutApplier from \"../components/common/LayoutApplier\";\nimport LanguageApplier from \"../components/common/LanguageApplier\";\n\nexport default (props: any) => (\n  <div className=\"app\">\n    <GlobalContextProvider>\n      <LayoutApplier />\n      <LanguageApplier />\n      <Header />\n      <div className=\"app-body\">\n        <Sidebar items={nav} {...props} />\n        <main className=\"main\" onClick={mobileSidebarHide}>\n          <div className=\"container-fluid\" style={{ marginTop: \"1.5rem\" }}>\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/dashboard\" />\n              {nav.map(createRoute)}\n            </Switch>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </GlobalContextProvider>\n  </div>\n);\n\n/**\n * Create a route from the route data.\n * If the route has children, an array of routes will be returned.\n *\n * @param routeData the route data (see routes.tsx)\n */\nconst createRoute = (routeData: RouteData): ReactNode => {\n  if ((routeData as RouteCustomItem).fakeRoute === true) {\n    return;\n  }\n\n  if ((routeData as RouteGroup).children) {\n    return (routeData as RouteGroup).children.map(createRoute);\n  }\n\n  let navItem: RouteItem = routeData as RouteItem;\n\n  return navItem.auth ? (\n    <AuthRoute\n      key={navItem.url}\n      path={navItem.url}\n      component={navItem.component}\n    />\n  ) : (\n    <Route key={navItem.url} path={navItem.url} component={navItem.component} />\n  );\n};\n\ninterface AuthRouteProps {\n  /**\n   * The component that the authenticated user will see\n   */\n  component: ComponentType<any>;\n\n  /**\n   * The route path\n   */\n  path: string;\n}\n\n/**\n * Create a route which requires authentication.\n * If the user is unauthenticated, they will be redirected to the login page.\n * If the user logs in at the redirected login page, they will go to their original destination.\n *\n * @param authProps The component and path to use for the route\n * @returns Route\n */\nconst AuthRoute = (authProps: AuthRouteProps) => {\n  // Typescript only likes capitalized components in its TSX\n  const Component = authProps.component;\n\n  return (\n    <Route\n      path={authProps.path}\n      render={props =>\n        api.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Starting point for React\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"ionicons/dist/css/ionicons.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"simple-line-icons/css/simple-line-icons.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./scss/style.css\";\nimport Full from \"./containers/Full\";\nimport api from \"./util/api\";\nimport { setupI18n } from \"./util/i18n\";\n\n// Before rendering anything, check if there is a session cookie.\n// Note: the user could have an old session, so the first API call\n// will set loggedIn to false if necessary\napi.loggedIn = document.cookie.includes(\"user_id=\");\n\nsetupI18n();\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/\" name=\"Home\" component={Full} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Internationalization setup\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport i18n from \"i18next\";\nimport XHR from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport config from \"../config\";\nimport languages from \"../languages.json\";\n\nexport function setupI18n() {\n  i18n\n    .use(XHR)\n    .use(LanguageDetector)\n    .use(reactI18nextModule)\n    .init({\n      fallbackLng: \"en\",\n      whitelist: languages,\n      ns: [\"common\"],\n      defaultNS: \"common\",\n      fallbackNS: [\n        \"dashboard\",\n        \"footer\",\n        \"lists\",\n        \"location\",\n        \"login\",\n        \"query-log\",\n        \"settings\",\n        \"api-errors\",\n        \"preferences\",\n        \"time-ranges\"\n      ],\n      nsSeparator: false,\n      keySeparator: false,\n      returnEmptyString: false,\n      debug: config.developmentMode,\n      interpolation: {\n        // Handled by React\n        escapeValue: false\n      },\n      backend: {\n        loadPath: process.env.PUBLIC_URL + \"/i18n/{{lng}}/{{ns}}.json\"\n      },\n      react: {\n        // Wait until translations are loaded before rendering\n        wait: true\n      }\n    });\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.00d87c43.svg\";"],"sourceRoot":""}