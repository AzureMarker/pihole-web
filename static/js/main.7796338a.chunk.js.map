{"version":3,"sources":["config.tsx","components/common/context/TimeRangeContext.tsx","util/dateRanges.tsx","components/dashboard/TimeRangeSelector.tsx","util/http.tsx","config.production.tsx","util/api.tsx","components/common/Header.tsx","util/CancelablePromise.tsx","util/result.ts","components/common/WithAPIData.tsx","components/common/context/StatusContext.tsx","components/common/StatusBadge.tsx","components/common/NavDropdown.tsx","components/common/Sidebar.tsx","components/common/FooterUpdateStatus.tsx","components/common/Footer.tsx","components/dashboard/SummaryStats.tsx","util/graphUtils.tsx","components/dashboard/QueriesGraph.tsx","components/dashboard/ChartTooltip.tsx","components/dashboard/ClientsGraph.tsx","components/dashboard/GenericDoughnutChart.tsx","components/dashboard/QueryTypesChart.tsx","components/dashboard/UpstreamsChart.tsx","components/dashboard/TopTable.tsx","components/dashboard/TopDomains.tsx","components/dashboard/TopBlockedDomains.tsx","components/dashboard/TopClients.tsx","components/dashboard/TopBlockedClients.tsx","components/log/QueryLog.tsx","components/list/DomainInput.tsx","components/common/Alert.tsx","components/list/DomainList.tsx","components/list/ListPage.tsx","util/validate.tsx","views/Whitelist.tsx","views/Blacklist.tsx","views/Regexlist.tsx","components/settings/VersionCard.tsx","components/settings/VersionInfo.tsx","components/settings/DHCPInfo.tsx","components/settings/DnsListItem.tsx","components/settings/preconfiguredUpstreams.tsx","components/settings/DnsListNewItem.tsx","components/settings/DnsList.tsx","components/settings/ConditionalForwardingSettings.tsx","components/settings/DnsOptionSettings.tsx","components/settings/DNSInfo.tsx","components/settings/NetworkInfo.tsx","components/settings/FTLInfo.tsx","views/Networking.tsx","components/login/ForgotPassword.tsx","views/Login.tsx","views/Logout.tsx","components/common/NavButton.tsx","components/common/EnableDisable.tsx","components/common/context/PreferencesContext.tsx","components/settings/PreferenceSettings.tsx","routes.tsx","views/Dashboard.tsx","views/Versions.tsx","views/Preferences.tsx","components/common/context/index.tsx","components/common/LayoutApplier.tsx","components/common/LanguageApplier.tsx","containers/Full.tsx","util/basePath.ts","util/i18n.tsx","index.tsx","img/logo.svg"],"names":["config","initialContext","range","update","TimeRangeContext","React","createContext","TimeRangeProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","setRange","react_default","a","createElement","Provider","value","now","moment","oneDayAgo","subtract","startOfDay","startOf","startOfYesterday","endOfYesterday","endOf","lastWeek","lastMonth","startOfMonth","startOfLastMonth","endOfLastMonth","startOfYear","epoch","dateRanges","t","defineProperty","TranslatedTimeRangeSelector","withTranslation","props","onSelect","translatedDateRanges","last24Hours","today","label","showLabel","name","from","toDate","toLocaleString","until","renderLabel","size","bundle_default","startDate","endDate","maxDate","onApply","event","picker","isSame","chosenLabel","timePicker","showDropdowns","ranges","Button","color","className","react","TimeRangeSelectorContainer","Consumer","context","fallback","checkIfLoggedOut","response","api","loggedIn","status","document","cookie","window","location","reload","Promise","reject","isCanceled","resolve","convertJSON","data","Error","json","checkForErrors","error","paramsToString","params","keys","map","key","join","timeRangeToParams","unix","developmentMode","fakeAPI","apiPath","ApiClient","http","_this","this","classCallCheck","authenticate","get","headers","X-Pi-hole-Authenticate","logout","delete","getSummary","getSummaryDb","getHistoryGraph","getHistoryGraphDb","interval","getClientsGraph","getClientsGraphDb","getQueryTypes","getQueryTypesDb","getUpstreams","getUpstreamsDb","getTopDomains","getTopDomainsDb","getTopBlockedDomains","url","getTopBlockedDomainsDb","getTopClients","getTopClientsDb","getTopBlockedClients","getTopBlockedClientsDb","getHistory","getWhitelist","getBlacklist","getRegexlist","addWhitelist","domain","post","addBlacklist","addRegexlist","removeWhitelist","removeBlacklist","removeRegexlist","encodeURIComponent","getStatus","setStatus","action","time","getNetworkInfo","getVersion","getFTLdb","getDNSInfo","getDHCPInfo","updateDHCPInfo","settings","put","updateDNSInfo","getPreferences","updatePreferences","HttpClient","handleResponse","then","options","arguments","length","undefined","fetch","urlFor","objectSpread","method","credentials","credentialType","body","JSON","stringify","Headers","Content-Type","endpoint","sidebarMinimize","e","preventDefault","classList","toggle","mobileSidebarToggle","mobileSidebarHide","remove","Header","style","marginLeft","onClick","type","react_router_dom","to","textAlign","lineHeight","pathname","endsWith","TimeRangeSelector_TimeRangeSelectorContainer","makeCancelable","promise","hasCanceled","repeatId","handle","val","isError","setTimeout","repeat","cancel","clearTimeout","ignoreCancel","err","Ok","createClass","Err","WithAPIData","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","apiResult","dataHandle","loadData","cancelOptions","repeatOptions","setState","apiCall","catch","inherits","prevProps","prevState","snapshot","flushOnUpdate","isOk","renderOk","unwrap","renderErr","unwrapErr","renderInitial","Component","defaultProps","refresh","StatusContext","StatusProvider","objectWithoutProperties","WithAPIData_WithAPIData","assign","_","StatusBadge","isEnabled","TranslatedStatusBadge","common_StatusBadge","NavDropdown","icon","isOpen","handleDropdownClick","target","parentElement","PiholeNavItem","item","NavItem","activeClassName","PiholeNavDropdown","_ref2","startsWith","Sidebar_NavList","items","NavList","_ref3","index","auth","authStrict","customComponent","Sidebar_PiholeNavDropdown","Sidebar_PiholeNavItem","TranslatedSidebar","_ref4","Nav","src","logo","height","alt","paddingLeft","textTransform","fontSize","marginBottom","common_Sidebar","_ref$updateAvailable","updateAvailable","TranslatedFooter","href","common_FooterUpdateStatus","common_Footer","SummaryStats","totalQueries","count","uniqueClients","blockedQueries","percentBlocked","gravityDomains","errorProps","initialProps","TranslatedSummaryStats","dashboard_SummaryStats","total_queries","reduce","total","queryType","blocked_queries","percent_blocked","toFixed","gravity_size","total_clients","transformData","padNumber","num","substr","getIntervalForRange","Math","ceil","QueriesGraph","labels","datasets","domains_over_time","fill","backgroundColor","borderColor","pointBorderColor","pointRadius","pointHoverRadius","pointHitRadius","cubicInterpolationMode","blocked_over_time","tooltips","enabled","mode","callbacks","title","tooltipItem","xLabel","match","hour","parseInt","minute","tooltipItems","datasetIndex","percentage","blocked","yLabel","legend","display","scales","xAxes","unit","timeUnit","displayFormats","tooltipFormat","yAxes","ticks","beginAtZero","maintainAspectRatio","rangeName","react_chartjs_2_es","width","loading","background","position","top","left","loadingProps","TranslatedQueriesGraph","dashboard_QueriesGraph","diff","slice","step","Date","timestamp","ChartTooltip","tooltip","_this2","lastTime","handler","custom","opacity","chart","current","chartInstance","canvas","getBoundingClientRect","caretX","offsetWidth","caretY","scrollY","fontFamily","_bodyFontFamily","bodyFontSize","fontStyle","_bodyFontStyle","padding","yPadding","xPadding","lines","i","colors","labelColors","sort","b","split","localeCompare","borderWidth","ClientsGraph","graphRef","createRef","fromTime","clone","toTime","add","format","stacked","ref","ReactDOM","createPortal","dashboard_ChartTooltip","TranslatedClientsGraph","ClientsGraphContainer","overTime","over_time","toISOString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","clients","Symbol","iterator","next","done","client","push","ip","random","toString","padStart","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","destination","hasOwnProperty","GenericDoughnutChart","chartRef","handleClick","legendItems","forceUpdate","dataset","meta","getDatasetMeta","hidden","toConsumableArray","dashboard_GenericDoughnutChart","apiHandler","GenericDoughnutChart_GenericDoughnutChart","apiData","usedColors","entry","percent","QueryTypesChart","previous","QueryTypesChart_QueryTypesChart","UpstreamsChart","upstreams","upstream","UpstreamsChart_UpstreamsChart","TopTable","generateTable","isEmpty","emptyMessage","header","generateRows","overflowX","dashboard_TopTable","initialData","TopTable_TopTable","topDomains","top_domains","verticalAlign","TopDomains","TopDomains_TopDomains","totalBlocked","topBlocked","TopBlockedDomains","TopBlockedDomains_TopBlockedDomains","topClients","top_clients","TopClients","TopClients_TopClients","TopBlockedClients","TopBlockedClients_TopBlockedClients","getDefaultRange","QueryLog","updateHandler","history","cursor","atEnd","filtersChanged","filters","getRowProps","rowInfo","row","includes","parseFilters","tableFilters","filter","id","query_type","dnssec","reply","fetchQueries","page","pageSize","react_table_es","columns","showPaginationTop","sortable","filterable","onFetchData","isEqual","filtered","debounce","onFilteredChange","defaultFiltered","getTrProps","ofText","PadRowComponent","dnssecColor","replyTypes","queryTypes","selectionFilter","extras","onChange","extra","accessor","r","Cell","date","month","toLocaleDateString","i18n","language","dayOfMonth","getDate","getHours","getMinutes","second","getSeconds","filterMethod","Filter","_Filter","_x","minWidth","response_time","DomainInput","isValid","handleChange","handleSubmit","onEnter","onValidationError","_this$props","placeholder","onRefresh","onSubmit","disabled","DomainInputContainer","Alert","dismissClass","dismissible","message","domains","onRemove","marginTop","common_Alert","ListPage","messageType","addHandler","removeHandler","refreshHandler","onAlreadyAdded","prevDomains","onAdd","onAdded","onAddFailed","onAdding","onRemoved","onRemoveFailed","handleValidationError","validationErrorMsg","note","list_DomainList","isValidHostname","hostname","segments","some","segment","isPositiveNumber","test","input","isValidRegex","regex","RegExp","isValidIpv4","address","every","list_ListPage","VersionCard","collapsed","branch","tag","Collapse","hash","VersionInfo","settings_VersionCard","core","ftl","web","TranslatedVersionInfo","settings_VersionInfo","DHCPInfo","alertMessage","alertType","showAlert","processing","active","ip_start","ip_end","router_ip","lease_time","ipv6_support","rapid_commit","loadHandler","loadDHCPInfo","res","attr","oldState","saveSettings","isSettingValid","validator","hideAlert","isIpStartValid","isIpEndValid","isRouterIpValid","isLeaseTimeValid","isDomainValid","alert","Form","FormGroup","check","Label","Input","checked","for","sm","Col","invalid","InputGroup","InputGroupAddon","addonType","DnsListItem","ListGroupItem","preconfiguredUpstreamOptions","primaryIpv4","secondaryIpv4","primaryIpv6","secondaryIpv6","flatMap","parseUpstream","order","parsedUpstreams","DnsListNewItem","selected","typeahead","getAddress","isAddressValid","lib","onInputChange","emptyLabel","positionFixed","getInstance","clear","isValidIpv4OptionalPort","isValidIpv6OptionalPort","DnsList","ListGroup","overflowY","maxHeight","settings_DnsListItem","settings_DnsListNewItem","ConditionalForwardingSettings","onUpdate","routerIp","DnsOptionSettings","listeningType","fqdnRequired","bogusPriv","DNSInfo","upstreamDns","conditionalForwarding","loadDNSInfo","savedDomain","conditional_forwarding","upstream_dns","fqdn_required","bogus_priv","listening_type","handleUpstreamAdd","handleUpstreamRemove","handleConditionalForwardingUpdate","handleDnsOptionsUpdate","isCFSettingValid","settings_DnsList","settings_ConditionalForwardingSettings","settings_DnsOptionSettings","NetworkInfo","plaintext","readOnly","interface","ipv4Address","ipv6Address","TranslatedNetworkInfo","settings_NetworkInfo","ipv4_address","ipv6_address","FTLInfo","queries","fileSize","sqliteVersion","TranslatedFTLInfo","settings_FTLInfo","filesize","sqlite_version","Networking","activeTab","setTab","tab","NavLink","tabContent","component","TabPane","tabId","tabs","TabContent","settings_DHCPInfo","settings_DNSInfo","ForgotPassword","isExpanded","Login","password","cookiesEnabled","handlePasswordChange","hashedPassword","sha","digest","locationState","navigator","cookieEnabled","react_router","float","routes","host","autoFocus","login_ForgotPassword","Logout","NavButton","EnableDisable","customModalShown","customTime","customMultiplier","getStatusFromAction","toggleProcessing","onSetStatus","toggleModal","submitCustom","renderModal","Modal","maxWidth","ModalHeader","ModalBody","ModalFooter","common_NavButton","TranslatedEnableDisable","defaultPreferences","layout","loadInitialPreferences","cachedPreferencesString","localStorage","getItem","parse","loadInitialContext","PreferencesContext","PreferencesProvider","setItem","PreferenceSettings","translateMessage","apiPromise","apiError","getAlertMessage","languages","TranslatedPreferenceSettings","settings_PreferenceSettings","/dashboard","/query-log","/whitelist","/blacklist/exact","/blacklist/regex","/settings/versions","/settings/networking","/settings/preferences","/login","/logout","nav","ClientsGraph_ClientsGraphContainer","dashboard_QueryTypesChart","dashboard_UpstreamsChart","dashboard_TopDomains","dashboard_TopBlockedDomains","dashboard_TopClients","dashboard_TopBlockedClients","Whitelist","Blacklist","Regexlist","fakeRoute","GlobalContextProvider","StatusContext_StatusProvider","PreferencesContext_PreferencesProvider","TimeRangeContext_TimeRangeProvider","LayoutApplier","applyLayout","LanguageApplier","changeLanguage","createRoute","routeData","navItem","Full_AuthRoute","path","AuthRoute","authProps","render","ajax","use","XHR","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","ns","defaultNS","fallbackNS","nsSeparator","keySeparator","returnEmptyString","debug","interpolation","escapeValue","backend","loadPath","basename","baseElement","getElementsByTagName","URL","process","getBasePath","context_GlobalContextProvider","exact","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7796338a.chunk.js","sourcesContent":["/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Config handler\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport developmentConfig from \"./config.development\";\nimport productionConfig from \"./config.production\";\n\nexport interface Config {\n  developmentMode: boolean;\n  fakeAPI: boolean;\n  apiPath: string;\n}\n\nlet config: Config;\n\nif (process.env.NODE_ENV === \"development\") {\n  config = developmentConfig;\n} else {\n  config = productionConfig;\n}\n\nif (process.env.REACT_APP_FAKE_API) {\n  config.fakeAPI = true;\n  config.apiPath = process.env.PUBLIC_URL + \"/fakeAPI\";\n}\n\nexport default config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Context used for sharing a time range\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Moment } from \"moment\";\nimport React, { ReactNode, useState } from \"react\";\n\n/**\n * Represents a range of time\n */\nexport interface TimeRange {\n  from: Moment;\n  until: Moment;\n  name: string;\n}\n\n/**\n * The type of the data shared by the time range context\n */\nexport interface TimeRangeContextType {\n  range: TimeRange | null;\n\n  /**\n   * Update the time range\n   *\n   * @param range The new time range\n   */\n  update: (range: TimeRange | null) => void;\n}\n\n/**\n * The initial data shared by the time range context\n */\nconst initialContext: TimeRangeContextType = {\n  range: null,\n  update: () => {}\n};\n\n/**\n * The React context which provides the time range to consumers\n */\nexport const TimeRangeContext = React.createContext(initialContext);\n\n/**\n * Provide the time range via React context.\n * Sub-components can use the `TimeRangeContext.Consumer` component to get the\n * time range.\n */\nexport const TimeRangeProvider = ({ children }: { children: ReactNode }) => {\n  const [range, setRange] = useState(initialContext.range);\n\n  return (\n    <TimeRangeContext.Provider value={{ range, update: setRange }}>\n      {children}\n    </TimeRangeContext.Provider>\n  );\n};\n","import moment, { Moment } from \"moment\";\nimport i18next from \"i18next\";\n\nconst now = moment();\nconst oneDayAgo = moment().subtract(1, \"day\");\nconst startOfDay = moment().startOf(\"day\");\nconst startOfYesterday = moment()\n  .subtract(1, \"days\")\n  .startOf(\"day\");\nconst endOfYesterday = moment()\n  .subtract(1, \"days\")\n  .endOf(\"day\");\nconst lastWeek = moment().subtract(7, \"days\");\nconst lastMonth = moment().subtract(30, \"days\");\nconst startOfMonth = moment().startOf(\"month\");\nconst startOfLastMonth = moment()\n  .subtract(1, \"month\")\n  .startOf(\"month\");\nconst endOfLastMonth = moment()\n  .subtract(1, \"month\")\n  .endOf(\"month\");\nconst startOfYear = moment().startOf(\"year\");\nconst epoch = moment(0);\n\n/**\n * Preconfigured date ranges for use in a date range picker. The keys are\n * translated, so this object must be computed using the translation function.\n *\n * @param t The translation function\n */\nexport const dateRanges: (\n  t: i18next.TFunction\n) => { [name: string]: [Moment, Moment] } = t => ({\n  [t(\"Last 24 Hours\")]: [oneDayAgo, now],\n  [t(\"Today\")]: [startOfDay, now],\n  [t(\"Yesterday\")]: [startOfYesterday, endOfYesterday],\n  [t(\"Last 7 Days\")]: [lastWeek, now],\n  [t(\"Last 30 Days\")]: [lastMonth, now],\n  [t(\"This Month\")]: [startOfMonth, now],\n  [t(\"Last Month\")]: [startOfLastMonth, endOfLastMonth],\n  [t(\"This Year\")]: [startOfYear, now],\n  [t(\"All Time\")]: [epoch, now]\n});\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Selector For Time Range Context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment, Suspense } from \"react\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Button } from \"reactstrap\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { dateRanges } from \"../../util/dateRanges\";\n\nexport interface TimeRangeSelectorProps {\n  /**\n   * The range to show\n   */\n  range: TimeRange | null;\n\n  /**\n   * Called when a new range is selected\n   *\n   * @param range The new range, or null if \"Last 24 Hours\" is selected\n   */\n  onSelect: (range: TimeRange | null) => void;\n\n  /**\n   * If the chosen label should be shown outside of the selector\n   */\n  showLabel: boolean;\n\n  /**\n   * The button size to use\n   */\n  size?: string;\n}\n\n/**\n * Get the label to be shown next to the selector button\n *\n * @param props The selector props\n */\nconst renderLabel = (\n  props: TimeRangeSelectorProps & WithTranslation\n): string | null => {\n  const { t } = props;\n\n  if (!props.showLabel) {\n    return null;\n  }\n\n  if (!props.range) {\n    return t<string>(\"Last 24 Hours\");\n  }\n\n  if (props.range.name === \"Custom Range\") {\n    return (\n      props.range.from.toDate().toLocaleString() +\n      \" - \" +\n      props.range.until.toDate().toLocaleString()\n    );\n  }\n\n  return props.range.name;\n};\n\n/**\n * A time range selector which shows the selected time range (label if\n * predefined, or time range if custom)\n */\nexport const TimeRangeSelector = (\n  props: TimeRangeSelectorProps & WithTranslation\n) => {\n  const { range, onSelect, t } = props;\n\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n  const today = t(\"Today\");\n  const label = renderLabel(props);\n  const size = props.size ? props.size : \"sm\";\n\n  return (\n    <DateRangePicker\n      startDate={range ? range.from : translatedDateRanges[last24Hours][0]}\n      endDate={range ? range.until : translatedDateRanges[last24Hours][1]}\n      maxDate={translatedDateRanges[today][1]}\n      onApply={(event, picker) => {\n        if (\n          picker.startDate.isSame(translatedDateRanges[last24Hours][0]) &&\n          picker.endDate.isSame(translatedDateRanges[last24Hours][1])\n        ) {\n          // Set to null so we fetch data from FTL instead of the database\n          onSelect(null);\n        } else {\n          // Set the time range so we fetch from the database\n          onSelect({\n            from: picker.startDate,\n            until: picker.endDate,\n            name: picker.chosenLabel\n          });\n        }\n      }}\n      timePicker={true}\n      showDropdowns={true}\n      ranges={translatedDateRanges}\n    >\n      <Button color=\"light\" size={size}>\n        <i className=\"far fa-clock fa-lg\" />\n        {label ? (\n          <Fragment>\n            &nbsp; &nbsp;\n            {label}\n          </Fragment>\n        ) : null}\n      </Button>\n    </DateRangePicker>\n  );\n};\n\nexport const TranslatedTimeRangeSelector = withTranslation(\"time-ranges\")(\n  TimeRangeSelector\n);\n\nexport const TimeRangeSelectorContainer = ({ size }: { size?: string }) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <Suspense fallback={null}>\n        <TranslatedTimeRangeSelector\n          range={context.range}\n          onSelect={context.update}\n          showLabel={true}\n          size={size}\n        />\n      </Suspense>\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Basic HTTP functions for accessing API endpoints\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport api from \"./api\";\nimport { Config } from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\nimport { CanceledError } from \"./CancelablePromise\";\n\n/**\n * A class which provides HTTP functions. Each function parses the response and\n * checks for errors\n */\nexport default class HttpClient {\n  constructor(public config: Config) {}\n\n  /**\n   * Check if the user is logged out, convert to JSON, and check for API errors\n   *\n   * @param response The HTTP response\n   */\n  handleResponse = <T extends any>(response: Response): Promise<T> => {\n    // @ts-ignore\n    return checkIfLoggedOut(response)\n      .then(convertJSON)\n      .then(checkForErrors);\n  };\n\n  /**\n   * Perform a GET request\n   *\n   * @param url The URL to access\n   * @param options Optional fetch configuration\n   * @returns A promise with the data or error returned\n   */\n  get = <T extends any>(url: string, options: RequestInit = {}): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"GET\",\n      credentials: this.credentialType(),\n      ...options\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a POST request\n   *\n   * @param url The URL to access\n   * @param data The data to send\n   * @returns A promise with the data or error returned\n   */\n  post = <T extends any>(url: string, data: object): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a PUT request\n   *\n   * @param url The URL to access\n   * @param data The data to send\n   * @returns A promise with the data or error returned\n   */\n  put = <T extends any>(url: string, data: object): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a DELETE request\n   *\n   * @param url The URL to access\n   * @returns A promise with the data or error returned\n   */\n  delete = <T extends any>(url: string): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"DELETE\",\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Get the URL for an endpoint\n   *\n   * @param endpoint The endpoint\n   * @returns The URL for the endpoint\n   */\n  urlFor = (endpoint: string): string => {\n    return this.config.apiPath + \"/\" + endpoint;\n  };\n\n  /**\n   * Get the credential type for requests\n   *\n   * @returns The credential type\n   */\n  credentialType = (): RequestCredentials => {\n    // Development API requests may use a different origin (pi.hole) since it is\n    // running off of the developer's machine. Therefore, allow credentials to\n    // be used across origins when in development mode.\n    return this.config.developmentMode ? \"include\" : \"same-origin\";\n  };\n}\n\n/**\n * If the user is logged in, check if the user's session has lapsed.\n * If so, log them out and refresh the page.\n *\n * @param response The Response from fetch\n * @return If logged in, the response, otherwise a canceled promise\n */\nexport const checkIfLoggedOut = (response: Response): Promise<Response> => {\n  if (api.loggedIn && response.status === 401) {\n    // Clear the user's old session and refresh the page\n    document.cookie =\n      \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    window.location.reload();\n    return Promise.reject({ isCanceled: true });\n  }\n\n  return Promise.resolve(response);\n};\n\n/**\n * If the input is a Response, return a promise for parsing the JSON.\n * If the input is an Error, return a rejecting promise with error.\n * If the request was canceled, return a rejecting promise with cancel object.\n *\n * @param data a Response or Error\n * @returns {*} a promise with the parsed JSON, or the error\n */\nexport const convertJSON = <T extends any>(\n  data: Response | Error | CanceledError\n): Promise<T> => {\n  if ((data as CanceledError).isCanceled || data instanceof Error) {\n    return Promise.reject(data);\n  }\n\n  return (data as Response).json();\n};\n\n/**\n * Check for an error returned by the API\n *\n * @param data the parsed JSON body of the response\n * @returns A resolving promise with the data if no error, otherwise a\n * rejecting promise with the error\n */\nexport const checkForErrors = <T extends any>(data: T): Promise<T> => {\n  if (data.error) {\n    return Promise.reject(data.error);\n  }\n\n  return Promise.resolve(data);\n};\n\n/**\n * Convert an object into GET parameters. The object must be flat (only\n * key-value pairs).\n *\n * @param params The parameters object\n * @returns The parameters converted into GET parameter form\n */\nexport const paramsToString = (params: {\n  [key: string]: string | number;\n}): string => {\n  return Object.keys(params)\n    .map(key => key + \"=\" + params[key])\n    .join(\"&\");\n};\n\n/**\n * Convert a time range into GET parameters\n *\n * @param range The time range to convert\n * @return The time range as GET parameters\n */\nexport const timeRangeToParams = (range: TimeRange) => {\n  return paramsToString({\n    from: range.from.unix(),\n    until: range.until.unix()\n  });\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Production config\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Config } from \"./config\";\n\nexport default {\n  developmentMode: false,\n  fakeAPI: false,\n  apiPath: process.env.PUBLIC_URL + \"/api\"\n} as Config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * API functions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport HttpClient, { paramsToString, timeRangeToParams } from \"./http\";\nimport config from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\nexport class ApiClient {\n  public loggedIn = false;\n\n  constructor(private http: HttpClient) {}\n\n  authenticate = (key: string): Promise<ApiSuccessResponse> => {\n    return this.http.get(\"auth\", {\n      headers: { \"X-Pi-hole-Authenticate\": key }\n    });\n  };\n\n  logout = (): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"auth\");\n  };\n\n  getSummary = (): Promise<ApiSummary> => {\n    return this.http.get(\"stats/summary\");\n  };\n\n  getSummaryDb = (range: TimeRange): Promise<ApiSummary> => {\n    return this.http.get(\"stats/database/summary?\" + timeRangeToParams(range));\n  };\n\n  getHistoryGraph = (): Promise<Array<ApiHistoryGraphItem>> => {\n    return this.http.get(\"stats/overTime/history\");\n  };\n\n  getHistoryGraphDb = (\n    range: TimeRange,\n    interval: number\n  ): Promise<Array<ApiHistoryGraphItem>> => {\n    return this.http.get(\n      \"stats/database/overTime/history?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  };\n\n  getClientsGraph = (): Promise<ApiClientsGraph> => {\n    return this.http.get(\"stats/overTime/clients\");\n  };\n\n  getClientsGraphDb = (\n    range: TimeRange,\n    interval: number\n  ): Promise<ApiClientsGraph> => {\n    return this.http.get(\n      \"stats/database/overTime/clients?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  };\n\n  getQueryTypes = (): Promise<Array<ApiQueryType>> => {\n    return this.http.get(\"stats/query_types\");\n  };\n\n  getQueryTypesDb = (range: TimeRange): Promise<Array<ApiQueryType>> => {\n    return this.http.get(\n      \"stats/database/query_types?\" + timeRangeToParams(range)\n    );\n  };\n\n  getUpstreams = (): Promise<ApiUpstreams> => {\n    return this.http.get(\"stats/upstreams\");\n  };\n\n  getUpstreamsDb = (range: TimeRange): Promise<ApiUpstreams> => {\n    return this.http.get(\n      \"stats/database/upstreams?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopDomains = (): Promise<ApiTopDomains> => {\n    return this.http.get(\"stats/top_domains\");\n  };\n\n  getTopDomainsDb = (range: TimeRange): Promise<ApiTopDomains> => {\n    return this.http.get(\n      \"stats/database/top_domains?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopBlockedDomains = (): Promise<ApiTopBlockedDomains> => {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/top_blocked\"\n      : \"stats/top_domains?blocked=true\";\n\n    return this.http.get(url);\n  };\n\n  getTopBlockedDomainsDb = (\n    range: TimeRange\n  ): Promise<ApiTopBlockedDomains> => {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/database/top_blocked?\"\n      : \"stats/database/top_domains?blocked=true&\";\n\n    return this.http.get(url + timeRangeToParams(range));\n  };\n\n  getTopClients = (): Promise<ApiTopClients> => {\n    return this.http.get(\"stats/top_clients\");\n  };\n\n  getTopClientsDb = (range: TimeRange): Promise<ApiTopClients> => {\n    return this.http.get(\n      \"stats/database/top_clients?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopBlockedClients = (): Promise<ApiTopBlockedClients> => {\n    // The API uses a GET parameter to differentiate top clients from top\n    // blocked clients, but the fake API is not able to handle GET parameters\n    // right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/top_blocked_clients\"\n      : \"stats/top_clients?blocked=true\";\n\n    return this.http.get(url);\n  };\n\n  getTopBlockedClientsDb = (\n    range: TimeRange\n  ): Promise<ApiTopBlockedClients> => {\n    // The API uses a GET parameter to differentiate top clients from top\n    // blocked clients, but the fake API is not able to handle GET parameters\n    // right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/database/top_blocked_clients?\"\n      : \"stats/database/top_clients?blocked=true&\";\n\n    return this.http.get(url + timeRangeToParams(range));\n  };\n\n  getHistory = (params: any): Promise<ApiHistoryResponse> => {\n    return this.http.get(\"stats/history?\" + paramsToString(params));\n  };\n\n  getWhitelist = (): Promise<Array<string>> => {\n    return this.http.get(\"dns/whitelist\");\n  };\n\n  getBlacklist = (): Promise<Array<string>> => {\n    return this.http.get(\"dns/blacklist\");\n  };\n\n  getRegexlist = (): Promise<Array<string>> => {\n    return this.http.get(\"dns/regexlist\");\n  };\n\n  addWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/whitelist\", { domain: domain });\n  };\n\n  addBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/blacklist\", { domain: domain });\n  };\n\n  addRegexlist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/regexlist\", { domain: domain });\n  };\n\n  removeWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"dns/whitelist/\" + domain);\n  };\n\n  removeBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"dns/blacklist/\" + domain);\n  };\n\n  removeRegexlist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"dns/regexlist/\" + encodeURIComponent(domain));\n  };\n\n  getStatus = (): Promise<ApiStatus> => {\n    return this.http.get(\"dns/status\");\n  };\n\n  setStatus = (\n    action: StatusAction,\n    time?: number\n  ): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/status\", {\n      action,\n      time\n    });\n  };\n\n  getNetworkInfo = (): Promise<ApiNetworkSettings> => {\n    return this.http.get(\"settings/network\");\n  };\n\n  getVersion = (): Promise<ApiVersions> => {\n    return this.http.get(\"version\");\n  };\n\n  getFTLdb = (): Promise<ApiFtlDbResponse> => {\n    return this.http.get(\"settings/ftldb\");\n  };\n\n  getDNSInfo = (): Promise<ApiDnsSettings> => {\n    return this.http.get(\"settings/dns\");\n  };\n\n  getDHCPInfo = (): Promise<ApiDhcpSettings> => {\n    return this.http.get(\"settings/dhcp\");\n  };\n\n  updateDHCPInfo = (settings: ApiDhcpSettings): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/dhcp\", settings);\n  };\n\n  updateDNSInfo = (settings: ApiDnsSettings): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/dns\", settings);\n  };\n\n  getPreferences = (): Promise<ApiPreferences> => {\n    return this.http.get(\"settings/web\");\n  };\n\n  updatePreferences = (\n    settings: ApiPreferences\n  ): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/web\", settings);\n  };\n}\n\nexport default new ApiClient(new HttpClient(config));\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Header component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { MouseEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TimeRangeSelectorContainer } from \"../dashboard/TimeRangeSelector\";\nimport api from \"../../util/api\";\n\n//const sidebarToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('sidebar-hidden');\n//};\n\nconst sidebarMinimize = (e: MouseEvent) => {\n  e.preventDefault();\n  document.body.classList.toggle(\"sidebar-minimized\");\n  document.body.classList.toggle(\"brand-minimized\");\n};\n\nexport const mobileSidebarToggle = () => {\n  document.body.classList.toggle(\"sidebar-show\");\n};\n\nexport const mobileSidebarHide = () => {\n  document.body.classList.remove(\"sidebar-show\");\n};\n\n//const asideToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('aside-menu-hidden');\n//};\n\nexport default () => (\n  <header className=\"app-header navbar\">\n    <button\n      className=\"navbar-toggler d-lg-none\"\n      style={{ marginLeft: \"16px\" }}\n      onClick={mobileSidebarToggle}\n      type=\"button\"\n    >\n      &#9776;\n    </button>\n    <Link\n      to=\"/dashboard\"\n      className=\"navbar-brand\"\n      style={{ textAlign: \"center\" }}\n    >\n      <span style={{ color: \"white\", lineHeight: \"40px\" }}>\n        <span className=\"navbar-brand-full\">\n          Pi-\n          <b>hole</b>\n        </span>\n        <span className=\"navbar-brand-minimized\">\n          P<b>h</b>\n        </span>\n      </span>\n    </Link>\n    <ul className=\"nav navbar-nav d-md-down-none mr-auto\">\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link navbar-toggler sidebar-toggler\"\n          type=\"button\"\n          onClick={sidebarMinimize}\n        >\n          &#9776;\n        </button>\n      </li>\n      {api.loggedIn && window.location.pathname.endsWith(\"/dashboard\") ? (\n        <li>\n          <TimeRangeSelectorContainer />\n        </li>\n      ) : null}\n    </ul>\n  </header>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Wrap promises to make them cancelable\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * A promise which can be canceled\n */\nexport interface CancelablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * The options given to {@link makeCancelable}\n */\nexport interface CancelableOptions {\n  /**\n   * The function to call to repeat the promise\n   */\n  repeat: () => void;\n\n  /**\n   * The amount of time to wait until repeating\n   */\n  interval: number;\n}\n\n/**\n * The error thrown when the {@link CancelablePromise} is canceled\n */\nexport interface CanceledError {\n  isCanceled: true;\n}\n\n/**\n * Make a promise cancelable and repeatable\n *\n * @param promise the promise\n * @param options the interval repeat options\n * @returns a cancelable promise\n */\nexport function makeCancelable<T>(\n  promise: Promise<T>,\n  options?: CancelableOptions\n): CancelablePromise<T> {\n  let hasCanceled = false;\n  let repeatId: NodeJS.Timeout | null = null;\n\n  const handle = (\n    resolve: (value: T) => void,\n    reject: (error: any) => void,\n    val: T,\n    isError: boolean\n  ) => {\n    if (hasCanceled) {\n      reject({ isCanceled: true });\n      return;\n    }\n\n    if (isError) {\n      reject(val);\n    } else {\n      resolve(val);\n    }\n\n    if (options) {\n      repeatId = setTimeout(options.repeat, options.interval);\n    }\n  };\n\n  const wrappedPromise: Promise<T> = new Promise((resolve, reject) => {\n    promise.then(\n      val => handle(resolve, reject, val, false),\n      error => handle(resolve, reject, error, true)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      if (repeatId !== null) {\n        clearTimeout(repeatId);\n      }\n      hasCanceled = true;\n    }\n  };\n}\n\n/**\n * Ignore canceled promises (pass into a promise's catch function)\n *\n * @param err the error from catching the promise\n */\nexport const ignoreCancel = (err: any) => {\n  if (!err.isCanceled) throw err;\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Result types\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * A type which can be either Ok or Err, with some associated data.\n */\nexport interface Result<T, E> {\n  isOk(): boolean;\n  isErr(): boolean;\n  unwrap(): T;\n  unwrapErr(): E;\n}\n\nexport class Ok<T, E> implements Result<T, E> {\n  constructor(private value: T) {}\n\n  isErr(): boolean {\n    return false;\n  }\n\n  isOk(): boolean {\n    return true;\n  }\n\n  unwrap(): T {\n    return this.value;\n  }\n\n  unwrapErr(): E {\n    throw Error(\"unwrapErr on a Result.Ok\");\n  }\n}\n\nexport class Err<T, E> implements Result<T, E> {\n  constructor(private err: E) {}\n\n  isErr(): boolean {\n    return true;\n  }\n\n  isOk(): boolean {\n    return false;\n  }\n\n  unwrap(): T {\n    throw Error(\"unwrap on a Result.Err\");\n  }\n\n  unwrapErr(): E {\n    return this.err;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * WithAPIData Component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Component, ReactNode } from \"react\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport { Err, Ok, Result } from \"../../util/result\";\n\nexport interface WithAPIDataProps<T> {\n  apiCall: () => Promise<T>;\n  repeatOptions: {\n    ignoreCancel: boolean;\n    interval: number;\n  };\n\n  /**\n   * If the data should be cleared when the props update. Defaults to true.\n   */\n  flushOnUpdate: boolean;\n\n  /**\n   * Render the children before the first API request is done\n   */\n  renderInitial: () => ReactNode;\n\n  /**\n   * Render the children if the API request succeeded\n   *\n   * @param data the data returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderOk: (data: T, refresh: (data?: T) => void) => ReactNode;\n\n  /**\n   * Render the children if the API request failed\n   *\n   * @param error the error returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderErr: (error: any, refresh: (data?: T) => void) => ReactNode;\n}\n\nexport interface WithAPIDataState<T> {\n  apiResult: Result<T, any> | null;\n}\n\n/**\n * A component for getting API data. It can retrieve information once,\n * periodically, or on call (refresh).\n */\nexport class WithAPIData<T> extends Component<\n  WithAPIDataProps<T>,\n  WithAPIDataState<T>\n> {\n  static defaultProps = {\n    repeatOptions: {\n      ignoreCancel: true,\n      interval: 0\n    },\n    flushOnUpdate: true\n  };\n\n  state: WithAPIDataState<T> = {\n    apiResult: null\n  };\n\n  private dataHandle: CancelablePromise<T> | undefined;\n\n  loadData = (data?: T) => {\n    // Only repeat if there is a non-zero repeat interval\n    const cancelOptions =\n      this.props.repeatOptions.interval !== 0\n        ? {\n            repeat: this.loadData,\n            interval: this.props.repeatOptions.interval\n          }\n        : undefined;\n\n    // Clear in-flight or repeating requests so they are not orphaned\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n\n    if (data) {\n      // Some data was given, it should be used as the API response\n      this.setState({ apiResult: new Ok(data) });\n\n      if (cancelOptions) {\n        // If the request should be repeated, wait for the interval and then\n        // refresh with data from the API\n        setTimeout(() => this.loadData(), cancelOptions.interval);\n      }\n      return;\n    }\n\n    // No data was given, make a request to the API\n    this.dataHandle = makeCancelable(this.props.apiCall(), cancelOptions);\n\n    this.dataHandle.promise\n      .then(data => {\n        this.setState({\n          apiResult: new Ok(data)\n        });\n      })\n      .catch(error => {\n        if (this.props.repeatOptions.ignoreCancel) {\n          ignoreCancel(error);\n        } else {\n          throw error;\n        }\n      })\n      .catch(error => {\n        this.setState({\n          apiResult: new Err(error)\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<WithAPIDataProps<T>>,\n    prevState: Readonly<WithAPIDataState<T>>,\n    snapshot?: any\n  ): void {\n    if (prevProps === this.props) {\n      // Don't do anything if the props didn't change\n      return;\n    }\n\n    if (this.props.flushOnUpdate) {\n      // The props changed, so trigger a full reload of the data. Current data is\n      // cleared so that loading indicators are shown.\n      this.setState({ apiResult: null });\n      this.loadData();\n    }\n  }\n\n  render() {\n    if (!this.state.apiResult) {\n      return this.props.renderInitial();\n    }\n\n    if (this.state.apiResult.isOk()) {\n      return this.props.renderOk(this.state.apiResult.unwrap(), this.loadData);\n    } else {\n      return this.props.renderErr(\n        this.state.apiResult.unwrapErr(),\n        this.loadData\n      );\n    }\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithAPIData } from \"../WithAPIData\";\nimport api from \"../../../util/api\";\n\n/**\n * The data shared by the status context\n */\nexport interface StatusContextType {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n}\n\n/**\n * The status data which will be used initially, until the API responds with the\n * real status data.\n */\nexport const initialContext: StatusContextType = {\n  status: \"unknown\",\n  refresh: () => {}\n};\n\n/**\n * The React context which provides the status data to consumers\n */\nexport const StatusContext = React.createContext(initialContext);\n\n/**\n * Provide the blocking status via React context.\n * Sub-components can use the `StatusContext.Consumer` component to get the\n * status.\n */\nexport const StatusProvider = ({\n  children,\n  ...props\n}: {\n  children: ReactNode;\n}) => (\n  <WithAPIData\n    apiCall={api.getStatus}\n    repeatOptions={{ interval: 5000, ignoreCancel: true }}\n    flushOnUpdate={false}\n    renderInitial={() => (\n      <StatusContext.Provider value={initialContext} {...props}>\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderOk={(data, refresh) => (\n      <StatusContext.Provider\n        value={{ status: data.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderErr={(_, refresh) => (\n      <StatusContext.Provider\n        value={{ status: initialContext.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status badge component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { StatusContext } from \"./context/StatusContext\";\n\nexport interface StatusBadgeProps extends WithTranslation {\n  status: string;\n}\n\nclass StatusBadge extends Component<StatusBadgeProps, {}> {\n  isEnabled = () => this.props.status === \"enabled\";\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <span>\n        <i\n          className={\n            \"fa fa-circle text-\" + (this.isEnabled() ? \"success\" : \"danger\")\n          }\n        />\n        &nbsp;\n        {t(this.isEnabled() ? \"Enabled\" : \"Disabled\")}\n      </span>\n    );\n  }\n}\n\nexport const TranslatedStatusBadge = withTranslation(\"common\")(StatusBadge);\n\nexport default () => (\n  <StatusContext.Consumer>\n    {({ status }) => <TranslatedStatusBadge status={status} />}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A dropdown in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { MouseEvent, ReactNode } from \"react\";\n\nexport interface NavDropdownProps {\n  name: string;\n  icon: string;\n  isOpen: boolean;\n  children: ReactNode;\n}\n\nexport default ({ name, icon, isOpen, children }: NavDropdownProps) => (\n  <li className={\"nav-item nav-dropdown\" + (isOpen ? \" open\" : \"\")}>\n    <button\n      className=\"nav-link nav-dropdown-toggle\"\n      onClick={handleDropdownClick}\n    >\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </button>\n    <ul className=\"nav-dropdown-items\">{children}</ul>\n  </li>\n);\n\nconst handleDropdownClick = (e: MouseEvent<HTMLButtonElement>) => {\n  e.preventDefault();\n  (e.target as HTMLButtonElement).parentElement!.classList.toggle(\"open\");\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Sidebar component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment, ReactElement, Suspense } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport logo from \"../../img/logo.svg\";\nimport { mobileSidebarHide } from \"./Header\";\nimport api from \"../../util/api\";\nimport StatusBadge from \"./StatusBadge\";\nimport NavDropdown from \"./NavDropdown\";\nimport {\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../../routes\";\nimport i18next from \"i18next\";\n\n/**\n * A nav item constructed from the given {@link RouteItem}\n *\n * @param item The {@link RouteItem}\n * @param t The translation function\n * @constructor\n */\nexport const PiholeNavItem = ({\n  item,\n  t\n}: {\n  item: RouteItem;\n  t: i18next.TFunction;\n}): ReactElement => (\n  <NavItem>\n    <NavLink\n      to={item.url}\n      onClick={mobileSidebarHide}\n      className=\"nav-link\"\n      activeClassName=\"active\"\n    >\n      <i className={\"nav-icon \" + item.icon} />\n      {t(item.name)}\n    </NavLink>\n  </NavItem>\n);\n\n/**\n * A nav dropdown constructed from the given {@link RouteGroup}\n *\n * @param item The {@link RouteGroup}\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nexport const PiholeNavDropdown = ({\n  item,\n  t,\n  location\n}: {\n  item: RouteGroup;\n  t: i18next.TFunction;\n  location: Location;\n}): ReactElement => (\n  <NavDropdown\n    name={t(item.name)}\n    icon={item.icon}\n    isOpen={location.pathname.startsWith(item.url)}\n  >\n    <NavList items={item.children} t={t} location={location} />\n  </NavDropdown>\n);\n\n/**\n * A nav list constructed from the given {@link RouteItem}'s\n *\n * @param items The {@link RouteItem}'s\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nexport const NavList = ({\n  items,\n  t,\n  location\n}: {\n  items: Array<RouteData>;\n  t: i18next.TFunction;\n  location: Location;\n}): ReactElement => (\n  <Fragment>\n    {items.map((item, index) => {\n      // Don't show an item if it requires auth and we're not logged in\n      if (item.auth && !api.loggedIn) return null;\n\n      // Some items (login page) should only be shown when logged in or logged out, not both\n      if (item.authStrict && item.auth !== api.loggedIn) return null;\n\n      // Check if it's a custom component\n      if ((item as RouteCustomItem).customComponent !== undefined) {\n        const Component = (item as RouteCustomItem).customComponent;\n        return <Component key={index} />;\n      }\n\n      // At this point it's ok to show the item\n      return (item as RouteGroup).children ? (\n        <PiholeNavDropdown\n          item={item as RouteGroup}\n          key={index}\n          t={t}\n          location={location}\n        />\n      ) : (\n        <PiholeNavItem item={item as RouteItem} key={index} t={t} />\n      );\n    })}\n  </Fragment>\n);\n\nexport interface SidebarProps extends WithTranslation {\n  items: Array<RouteData>;\n  location: Location;\n}\n\n/**\n * The sidebar used by the web interface\n *\n * @param items The nav items\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nconst Sidebar = ({ items, t, location }: SidebarProps): ReactElement => (\n  <div className=\"sidebar\">\n    <nav className=\"sidebar-nav\">\n      <Nav>\n        <li className=\"nav-title\">\n          <img\n            src={logo}\n            className=\"img-responsive pull-left\"\n            style={{ height: \"67px\" }}\n            alt=\"\"\n          />\n          <p\n            className=\"pull-left\"\n            style={{\n              paddingLeft: \"15px\",\n              textTransform: \"initial\",\n              fontSize: \"14px\",\n              marginBottom: \"initial\",\n              lineHeight: \"14px\",\n              color: \"white\"\n            }}\n          >\n            {t(\"Status\")}\n          </p>\n          <br />\n          <span style={{ textTransform: \"initial\", paddingLeft: \"15px\" }}>\n            <StatusBadge />\n          </span>\n        </li>\n        <NavList items={items} t={t} location={location} />\n      </Nav>\n    </nav>\n  </div>\n);\n\nconst TranslatedSidebar = withTranslation([\"common\", \"location\"])(Sidebar);\n\nexport default (props: any) => (\n  <Suspense fallback={null}>\n    <TranslatedSidebar {...props} />\n  </Suspense>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * FooterUpdateStatus component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\nconst FooterUpdateStatus = ({\n  updateAvailable = false,\n  t\n}: { updateAvailable: boolean } & WithTranslation) => {\n  if (!updateAvailable) {\n    return null;\n  }\n\n  return (\n    <div className=\"ml-auto\">\n      <Link to=\"/settings/versions\">{t(\"Update Available\")}</Link>\n    </div>\n  );\n};\n\nexport default withTranslation(\"footer\")(FooterUpdateStatus);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Footer component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Suspense } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport FooterUpdateStatus from \"./FooterUpdateStatus\";\n\nconst Footer = (props: any) => {\n  const { t } = props;\n\n  return (\n    <footer className=\"app-footer\">\n      <div>\n        <i className=\"fab fa-paypal\" />\n        <strong>\n          <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=3J2L3Z4DHW9UY\">\n            &nbsp;\n            {t(\"Donate\")}\n          </a>\n        </strong>{\" \"}\n        {t(\"if you found this useful\")}\n      </div>\n      <FooterUpdateStatus {...props} />\n    </footer>\n  );\n};\n\nconst TranslatedFooter = withTranslation([\"common\", \"footer\"])(Footer);\n\nexport default () => (\n  <Suspense fallback={null}>\n    <TranslatedFooter />\n  </Suspense>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Summary Stats component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport api from \"../../util/api\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface SummaryStatsProps {\n  totalQueries: string;\n  blockedQueries: string;\n  percentBlocked: string;\n  gravityDomains: string;\n  uniqueClients: number;\n}\n\nclass SummaryStats extends Component<SummaryStatsProps & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-success stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-globe-americas fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.totalQueries}</h3>\n              <p style={{ marginBottom: \"0px\" }}>\n                {t(\"Total Queries ({{count}} clients)\", {\n                  count: this.props.uniqueClients\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-primary stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-hand-paper fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.blockedQueries}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Queries Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-warning stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-chart-pie fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.percentBlocked}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Percent Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-danger stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-list-alt fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.gravityDomains}</h3>\n              <p style={{ marginBottom: \"0px\" }}>{t(\"Domains On Blocklist\")}</p>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for the component\n *\n * @param data the API data\n * @returns {*} the transformed props\n */\nexport const transformData = (data: ApiSummary): SummaryStatsProps => ({\n  totalQueries: Object.keys(data.total_queries)\n    .reduce((total, queryType) => total + data.total_queries[queryType], 0)\n    .toLocaleString(),\n  blockedQueries: data.blocked_queries.toLocaleString(),\n  percentBlocked: data.percent_blocked.toFixed(2).toLocaleString() + \"%\",\n  gravityDomains: data.gravity_size.toLocaleString(),\n  uniqueClients: data.total_clients\n});\n\n/**\n * The props the summary stats should use when it fails to get the API data\n * (it does not need the error object)\n */\nexport const errorProps: SummaryStatsProps = {\n  totalQueries: \"Lost\",\n  blockedQueries: \"Connection\",\n  percentBlocked: \"To\",\n  gravityDomains: \"API\",\n  uniqueClients: 0\n};\n\n/**\n * The props used to show a loading state\n */\nexport const initialProps: SummaryStatsProps = {\n  blockedQueries: \"---\",\n  totalQueries: \"---\",\n  percentBlocked: \"---\",\n  gravityDomains: \"---\",\n  uniqueClients: 0\n};\n\nexport const TranslatedSummaryStats = withTranslation([\"common\", \"dashboard\"])(\n  SummaryStats\n);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range ? api.getSummaryDb(context.range) : api.getSummary()\n        }\n        repeatOptions={\n          context.range ? undefined : { interval: 5000, ignoreCancel: true }\n        }\n        renderInitial={() => (\n          <TranslatedSummaryStats {...initialProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedSummaryStats {...transformData(data)} {...props} />\n        )}\n        renderErr={() => <TranslatedSummaryStats {...errorProps} {...props} />}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Graph utility functions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\n/**\n * Pad a two digit number\n *\n * @param num the number\n * @returns {string} a padding number string\n */\nexport const padNumber = (num: number) => {\n  return (\"00\" + num).substr(-2, 2);\n};\n\n/**\n * Dynamically calculate a time interval so there are always 144 data points\n * (144 so that every point represents 10 minutes when the range is 24 hours)\n *\n * @param range The range to find the interval for\n */\nexport const getIntervalForRange = (range: TimeRange): number => {\n  return Math.ceil((range.until.unix() - range.from.unix()) / 144);\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Queries Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { getIntervalForRange, padNumber } from \"../../util/graphUtils\";\nimport api from \"../../util/api\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartData, ChartOptions, TimeUnit } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface QueriesGraphProps {\n  loading: boolean;\n  labels: Array<Date>;\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  domains_over_time: Array<number>;\n  blocked_over_time: Array<number>;\n}\n\nclass QueriesGraph extends Component<QueriesGraphProps & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    const data: ChartData = {\n      // @ts-ignore\n      labels: this.props.labels,\n      datasets: [\n        {\n          label: t(\"Total Queries\"),\n          data: this.props.domains_over_time,\n          fill: true,\n          backgroundColor: \"rgba(220,220,220,0.5)\",\n          borderColor: \"rgba(0, 166, 90,.8)\",\n          pointBorderColor: \"rgba(0, 166, 90,.8)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        },\n        {\n          label: t(\"Blocked Queries\"),\n          data: this.props.blocked_over_time,\n          fill: true,\n          backgroundColor: \"rgba(0,192,239,0.5)\",\n          borderColor: \"rgba(0,192,239,1)\",\n          pointBorderColor: \"rgba(0,192,239,1)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        }\n      ]\n    };\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: true,\n        mode: \"x-axis\",\n        callbacks: {\n          title: tooltipItem => {\n            const timeStr = tooltipItem[0].xLabel! as string;\n            const time = timeStr.match(/(\\d?\\d):?(\\d?\\d?)/);\n            const hour = parseInt(time![1], 10);\n            const minute = parseInt(time![2], 10) || 0;\n            const from = padNumber(hour) + \":\" + padNumber(minute - 5) + \":00\";\n            const to = padNumber(hour) + \":\" + padNumber(minute + 4) + \":59\";\n\n            return t(\"Queries from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            if (tooltipItems.datasetIndex === 1) {\n              let percentage = 0.0;\n              const total = data.datasets![0].data![\n                tooltipItems.index!\n              ] as number;\n              const blocked = data.datasets![1].data![\n                tooltipItems.index!\n              ] as number;\n\n              if (total > 0) percentage = (100.0 * blocked) / total;\n\n              return (\n                data.datasets![tooltipItems.datasetIndex].label +\n                \": \" +\n                tooltipItems.yLabel +\n                \" (\" +\n                percentage.toFixed(1) +\n                \"%)\"\n              );\n            } else\n              return (\n                data.datasets![tooltipItems.datasetIndex!].label +\n                \": \" +\n                tooltipItems.yLabel\n              );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true }\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Queries Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line width={970} height={170} data={data} options={options} />\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for QueriesGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns QueriesGraphProps QueriesGraph props\n */\nexport const transformData = (\n  data: Array<ApiHistoryGraphItem>,\n  range: TimeRange | null\n): QueriesGraphProps => {\n  let timeUnit: TimeUnit = \"hour\";\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    data = data.slice(0, -1);\n  }\n\n  const labels = data.map(step => new Date(1000 * step.timestamp));\n  const domains_over_time = data.map(step => step.total_queries);\n  const blocked_over_time = data.map(step => step.blocked_queries);\n\n  return {\n    loading: false,\n    labels,\n    timeUnit,\n    rangeName: range ? range.name : undefined,\n    domains_over_time,\n    blocked_over_time\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: QueriesGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  domains_over_time: [],\n  blocked_over_time: []\n};\n\nexport const TranslatedQueriesGraph = withTranslation([\n  \"dashboard\",\n  \"time-ranges\"\n])(QueriesGraph);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? api.getHistoryGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : api.getHistoryGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedQueriesGraph\n            {...transformData(data, context.range)}\n            {...props}\n          />\n        )}\n        renderErr={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Chart Tooltip component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { ChartTooltipOptions } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nexport interface ChartTooltipProps {\n  chart: RefObject<Line>;\n  handler: ChartTooltipOptions;\n}\n\nexport interface ChartTooltipState {\n  tooltip: any | null;\n}\n\nclass ChartTooltip extends Component<ChartTooltipProps, ChartTooltipState> {\n  state: ChartTooltipState = {\n    tooltip: null\n  };\n\n  render() {\n    const { tooltip } = this.state;\n\n    // Override the graph's options in a hacky way to avoid redrawing the entire graph.\n    // This lets the graph directly update the tooltip without going through the parent component.\n    let lastTime = Date.now();\n    this.props.handler.custom = tooltip => {\n      // Always disable the tooltip\n      if (tooltip.opacity === 0) this.setState({ tooltip });\n\n      // Limit how quickly we set state (50ms)\n      const now = Date.now();\n      if (now - lastTime < 50) return;\n\n      lastTime = now;\n      this.setState({ tooltip });\n    };\n\n    // Don't render anything if there is nothing to render\n    if (\n      tooltip === null ||\n      tooltip.opacity === 0 ||\n      this.props.chart.current === null\n    )\n      return null;\n\n    // Get the graph's position data so we can offset the tooltip\n    const position = this.props.chart.current.chartInstance.canvas!.getBoundingClientRect();\n    let width = tooltip.caretX;\n\n    // Prevent compression of the tooltip at the right edge of the screen\n    // @ts-ignore\n    if (document.offsetWidth - tooltip.caretX < 400) {\n      // @ts-ignore\n      width = document.offsetWidth - 400;\n    }\n\n    // Prevent tooltip disappearing behind the sidebar\n    if (tooltip.caretX < 100) width = 100;\n\n    // Tooltip CSS styling\n    const style = {\n      opacity: 1,\n      left: position.left + width + \"px\",\n      top: position.top + tooltip.caretY + window.scrollY + \"px\",\n      fontFamily: tooltip._bodyFontFamily,\n      fontSize: tooltip.bodyFontSize + \"px\",\n      fontStyle: tooltip._bodyFontStyle,\n      padding: tooltip.yPadding + \"px \" + tooltip.xPadding + \"px\"\n    };\n\n    // Transform and sort the tooltip data\n    let data = [];\n    if (tooltip.body) {\n      data = tooltip.body\n        .map((body: any) => body.lines)\n        .map((item: any, i: number) => ({\n          data: item[0],\n          colors: tooltip.labelColors[i]\n        }));\n    }\n    data.sort((a: any, b: any) =>\n      a.data.split(\": \")[0].localeCompare(b.data.split(\": \")[0])\n    );\n\n    return (\n      <div className=\"chartjs-tooltip\" style={style}>\n        <table>\n          <thead>\n            {tooltip.title.map((title: string, i: number) => (\n              <tr key={i}>\n                <th>{title}</th>\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {data.map((item: any, i: number) => (\n              <tr key={i}>\n                <td>\n                  <span\n                    className=\"chartjs-tooltip-key\"\n                    style={{\n                      background: item.colors.backgroundColor,\n                      borderColor: item.colors.borderColor,\n                      borderWidth: \"2px\"\n                    }}\n                  />\n                  {item.data}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ChartTooltip;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Clients Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { getIntervalForRange } from \"../../util/graphUtils\";\nimport api from \"../../util/api\";\nimport ChartTooltip from \"./ChartTooltip\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartDataSets, ChartOptions, TimeUnit } from \"chart.js\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface ClientsGraphProps {\n  loading: boolean;\n  labels: Array<string>;\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  datasets: Array<ChartDataSets>;\n}\n\nexport class ClientsGraph extends Component<\n  ClientsGraphProps & WithTranslation,\n  {}\n> {\n  private readonly graphRef: RefObject<Line>;\n\n  constructor(props: ClientsGraphProps & WithTranslation) {\n    super(props);\n    this.graphRef = React.createRef();\n  }\n\n  render() {\n    const { t } = this.props;\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: false,\n        mode: \"x-axis\",\n        callbacks: {\n          title: tooltipItem => {\n            const time = moment(tooltipItem[0].xLabel!, \"HH:mm\");\n\n            const fromTime = time.clone().subtract(5, \"minutes\");\n            const toTime = time\n              .clone()\n              .add(4, \"minutes\")\n              .add(59, \"seconds\");\n\n            const from = fromTime.format(\"HH:mm:ss\");\n            const to = toTime.format(\"HH:mm:ss\");\n\n            return t(\"Client activity from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            return (\n              data.datasets![tooltipItems.datasetIndex!].label +\n              \": \" +\n              tooltipItems.yLabel\n            );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true },\n            stacked: true\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Clients Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line\n            width={970}\n            height={170}\n            data={{\n              labels: this.props.labels,\n              datasets: this.props.datasets\n            }}\n            options={options}\n            ref={this.graphRef}\n          />\n        </div>\n\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n\n        {// Now you're thinking with portals!\n        ReactDOM.createPortal(\n          <ChartTooltip chart={this.graphRef} handler={options.tooltips!} />,\n          document.body\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for ClientsGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns {{labels: Date[], datasets: Array, loading: boolean}} ClientsGraph\n * props\n */\nexport const transformData = (\n  data: ApiClientsGraph,\n  range: TimeRange | null\n) => {\n  let timeUnit: TimeUnit = \"hour\";\n  let overTime = data.over_time;\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    overTime = data.over_time.slice(0, -1);\n  }\n\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const labels = overTime.map(step =>\n    new Date(1000 * step.timestamp).toISOString()\n  );\n  const datasets: Array<ChartDataSets> = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (let client of data.clients) {\n    datasets.push({\n      label: client.name.length !== 0 ? client.name : client.ip,\n      // If we ran out of colors, make a random one\n      backgroundColor:\n        i < colors.length\n          ? colors[i]\n          : \"#\" +\n            parseInt(\"\" + Math.random() * 0xffffff, 10)\n              .toString(16)\n              .padStart(6, \"0\"),\n      pointRadius: 0,\n      pointHitRadius: 5,\n      pointHoverRadius: 5,\n      cubicInterpolationMode: \"monotone\",\n      data: []\n    });\n\n    i++;\n  }\n\n  // Fill in data & labels\n  for (let step of overTime) {\n    for (let destination in datasets) {\n      if (datasets.hasOwnProperty(destination))\n        (datasets[destination].data as Array<number>).push(\n          step.data[destination]\n        );\n    }\n  }\n\n  datasets.sort((a, b) => a.label!.localeCompare(b.label!));\n\n  return {\n    labels,\n    datasets,\n    loading: false,\n    timeUnit,\n    rangeName: range ? range.name : undefined\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: ClientsGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  datasets: []\n};\n\nexport const TranslatedClientsGraph = withTranslation([\n  \"dashboard\",\n  \"time-ranges\"\n])(ClientsGraph);\n\nexport const ClientsGraphContainer = () => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? api.getClientsGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : api.getClientsGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => <TranslatedClientsGraph {...loadingProps} />}\n        renderOk={data => (\n          <TranslatedClientsGraph {...transformData(data, context.range)} />\n        )}\n        renderErr={() => <TranslatedClientsGraph {...loadingProps} />}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic Doughnut Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, MouseEvent, RefObject } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartOptions } from \"chart.js\";\n\nexport interface GenericDoughnutChartProps {\n  title: string;\n  loading: boolean;\n  data: Array<number>;\n  colors: Array<string>;\n  labels: Array<string>;\n}\n\nexport class GenericDoughnutChart extends Component<\n  GenericDoughnutChartProps,\n  {}\n> {\n  private readonly chartRef: RefObject<Doughnut>;\n\n  constructor(props: GenericDoughnutChartProps) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  handleClick = (e: MouseEvent, index: number) => {\n    // Hide the entry by clicking on the internal legend item\n    const chart: any = this.chartRef.current!.chartInstance;\n    chart.legend.options.onClick.call(\n      chart,\n      e,\n      chart.legend.legendItems[index]\n    );\n\n    // Cause an update so the external legend gets updated\n    this.forceUpdate();\n  };\n\n  render() {\n    const options: ChartOptions = {\n      legend: { display: false },\n      tooltips: {\n        enabled: true,\n        callbacks: {\n          title: () => this.props.title,\n          label: (tooltipItems, data) => {\n            const dataset = data.datasets![tooltipItems.datasetIndex!];\n            const label = data.labels![tooltipItems.index!];\n            return (\n              label +\n              \": \" +\n              (dataset.data![tooltipItems.index!] as number).toFixed(1) +\n              \"%\"\n            );\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n\n    // Get the metadata for the items, so we know if they are hidden or not.\n    // If the chart has not been created yet, make some fake metadata.\n    const meta =\n      this.chartRef.current !== null\n        ? this.chartRef.current.chartInstance.getDatasetMeta(0).data\n        : this.props.data.map(() => ({ hidden: false }));\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        <div className=\"card-body\">\n          <div className=\"float-left\" style={{ width: \"67%\" }}>\n            <Doughnut\n              width={100}\n              height={250}\n              options={options}\n              ref={this.chartRef}\n              data={{\n                datasets: [\n                  {\n                    // Make a copy of the data here. ChartJS does weird things\n                    // to the data, which React doesn't catch. This can cause\n                    // oddities such as one chart showing the other chart's\n                    // data. This behavior is fixed by sending ChartJS its own\n                    // copy of the data.\n                    data: [...this.props.data],\n                    backgroundColor: this.props.colors\n                  }\n                ],\n                labels: this.props.labels\n              }}\n            />\n          </div>\n          <div className=\"float-right\" style={{ width: \"33%\" }}>\n            <ul className=\"chart-legend\">\n              {this.props.labels\n                // Zip label and color together\n                .map((label, i) => [label, this.props.colors[i]])\n                // Create the list items\n                .map(([label, color], i) => (\n                  <li\n                    key={i}\n                    className={meta[i] && meta[i].hidden ? \"strike\" : \"\"}\n                    onClick={e => this.handleClick(e, i)}\n                  >\n                    <span style={{ backgroundColor: color }} />\n                    {label}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface ChartItem {\n  name: string;\n  ip?: string;\n  percent: number;\n}\n\n/**\n * Transform the API data into props for GenericDoughnutChart\n *\n * @param apiData the API data\n * @returns GenericDoughnutChartProps\n */\nexport const transformData = (apiData: Array<ChartItem>) => {\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const data = [];\n  const labels = [];\n  const usedColors = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (let entry of apiData) {\n    data.push(entry.percent);\n    labels.push(entry.name.length !== 0 ? entry.name : entry.ip!);\n    usedColors.push(\n      // If we ran out of colors, make a random one\n      i < colors.length\n        ? colors[i]\n        : \"#\" +\n            parseInt(\"\" + Math.random() * 0xffffff, 10)\n              .toString(16)\n              .padStart(6, \"0\")\n    );\n\n    i++;\n  }\n\n  return {\n    loading: false,\n    data,\n    colors: usedColors,\n    labels\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps = {\n  loading: true,\n  data: [],\n  colors: [],\n  labels: []\n};\n\nexport default function<T>({\n  apiCall,\n  title,\n  apiHandler,\n  ...props\n}: {\n  apiCall: () => Promise<T>;\n  title: string;\n  apiHandler: (data: T) => Array<ChartItem>;\n}) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      renderInitial={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n      renderOk={data => (\n        <GenericDoughnutChart\n          title={title}\n          {...transformData(apiHandler(data))}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Types Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst QueryTypesChart = ({\n  t,\n  apiCall\n}: WithTranslation & { apiCall: () => Promise<Array<ApiQueryType>> }) => (\n  <GenericDoughnutChart\n    title={t(\"Query Types\")}\n    apiCall={apiCall}\n    apiHandler={data => {\n      const total = data.reduce(\n        (previous, current) => previous + current.count,\n        0\n      );\n\n      return data.map(item => ({\n        name: item.name,\n        percent: total > 0 ? (item.count * 100) / total : 0\n      }));\n    }}\n  />\n);\n\nexport const QueryTypesChartContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <QueryTypesChart\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getQueryTypesDb(context.range)\n            : api.getQueryTypes()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation(\"dashboard\")(QueryTypesChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Upstream Servers / Forward Destinations Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst UpstreamsChart = ({\n  t,\n  apiCall\n}: WithTranslation & { apiCall: () => Promise<ApiUpstreams> }) => (\n  <GenericDoughnutChart\n    title={t(\"Queries Answered By Destination\")}\n    apiCall={apiCall}\n    apiHandler={data =>\n      data.upstreams.map(upstream => ({\n        name: upstream.name,\n        ip: upstream.ip,\n        percent: (upstream.count * 100) / data.total_queries\n      }))\n    }\n  />\n);\n\nexport const UpstreamsChartContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <UpstreamsChart\n        {...props}\n        apiCall={() =>\n          context.range ? api.getUpstreamsDb(context.range) : api.getUpstreams()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation(\"dashboard\")(UpstreamsChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic top items component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface TopTableInnerProps<T> {\n  loading: boolean;\n  title: string;\n  data: T;\n  headers: Array<string>;\n  emptyMessage: string;\n  isEmpty: (data: T) => boolean;\n  generateRows: (data: T) => ReactNode;\n}\n\nexport class TopTable<T> extends Component<TopTableInnerProps<T>, {}> {\n  static defaultProps = {\n    loading: true,\n    title: \"\",\n    data: {},\n    headers: [],\n    emptyMessage: \"\",\n    isEmpty: () => true,\n    generateRows: () => null\n  };\n\n  /**\n   * Generate the table\n   *\n   * @returns {*} a React element for the table, or an empty message\n   */\n  generateTable = () => {\n    // If there is no data, just show a message\n    if (this.props.isEmpty(this.props.data)) {\n      return this.props.emptyMessage;\n    }\n\n    return (\n      <table className=\"table table-bordered\">\n        <tbody>\n          <tr>\n            {this.props.headers.map((header, i) => (\n              <th key={i}>{header}</th>\n            ))}\n          </tr>\n          {this.props.generateRows(this.props.data)}\n        </tbody>\n      </table>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        <div className=\"card-body\">\n          <div style={{ overflowX: \"auto\" }}>{this.generateTable()}</div>\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface TopTableProps<T, D>\n  extends Omit<TopTableInnerProps<T>, \"loading\" | \"data\"> {\n  apiCall: () => Promise<D>;\n  initialData: T;\n  apiHandler: (data: D) => T;\n}\n\nexport default function<T, D>({\n  title,\n  apiCall,\n  initialData,\n  headers,\n  emptyMessage,\n  isEmpty,\n  apiHandler,\n  generateRows,\n  ...props\n}: TopTableProps<T, D>) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      repeatOptions={{\n        interval: 10 * 60 * 1000,\n        ignoreCancel: true\n      }}\n      renderInitial={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading={true}\n          {...props}\n        />\n      )}\n      renderOk={data => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={apiHandler(data)}\n          loading={false}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading={true}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Domains component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopDomainsData {\n  totalQueries: number;\n  topDomains: Array<ApiTopDomainItem>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topDomains: *}} the parsed data\n */\nexport const transformData = (data: ApiTopDomains): TopDomainsData => ({\n  totalQueries: data.total_queries,\n  topDomains: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top domains\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top domains\n */\nexport const generateRows = (t: i18next.TFunction) => (\n  data: TopDomainsData\n) => {\n  return data.topDomains.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-success\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopDomains = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopDomains> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Permitted Domains\")}\n    initialData={{\n      totalQueries: 0,\n      topDomains: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topDomains.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopDomainsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopDomains\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopDomainsDb(context.range)\n            : api.getTopDomains()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(TopDomainsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Blocked component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopBlockedDomainsData {\n  totalBlocked: number;\n  topBlocked: Array<ApiTopDomainItem>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalBlocked: number, topBlocked: *}} the parsed data\n */\nexport const transformData = (\n  data: ApiTopBlockedDomains\n): TopBlockedDomainsData => ({\n  totalBlocked: data.blocked_queries,\n  topBlocked: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top blocked\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top blocked\n */\nexport const generateRows = (t: i18next.TFunction) => (\n  data: TopBlockedDomainsData\n) => {\n  return data.topBlocked.map(item => {\n    const percentage = (item.count / data.totalBlocked) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalBlocked.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-warning\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopBlockedDomains = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopBlockedDomains> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Blocked Domains\")}\n    initialData={{\n      totalBlocked: 0,\n      topBlocked: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topBlocked.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopBlockedDomainsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopBlockedDomains\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopBlockedDomainsDb(context.range)\n            : api.getTopBlockedDomains()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(\n  TopBlockedDomainsContainer\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Clients component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopClientsData {\n  totalQueries: number;\n  topClients: Array<ApiClient>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topClients: *}} the parsed data\n */\nexport const transformData = (data: ApiTopClients): TopClientsData => ({\n  totalQueries: data.total_queries,\n  topClients: data.top_clients\n});\n\n/**\n * Create a function to generate rows of top clients\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top clients\n */\nexport const generateRows = (t: i18next.TFunction) => (\n  data: TopClientsData\n) => {\n  return data.topClients.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.name + \"|\" + item.ip}>\n        <td>{item.name !== \"\" ? item.name : item.ip}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-primary\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopClients = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopClients> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Clients\")}\n    initialData={{\n      totalQueries: 0,\n      topClients: []\n    }}\n    headers={[t(\"Client\"), t(\"Requests\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Clients Found\")}\n    isEmpty={data => data.topClients.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopClientsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopClients\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopClientsDb(context.range)\n            : api.getTopClients()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(TopClientsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Blocked Clients component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport i18next from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopBlockedClientsData {\n  blockedQueries: number;\n  topClients: Array<ApiClient>;\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data The API data\n * @returns The parsed data\n */\nexport const transformData = (\n  data: ApiTopBlockedClients\n): TopBlockedClientsData => ({\n  blockedQueries: data.blocked_queries,\n  topClients: data.top_clients\n});\n\n/**\n * Generate rows of top blocked clients\n *\n * @param t The translation function\n * @returns Rows of top blocked clients\n */\nexport const generateRows = (t: i18next.TFunction) => (\n  data: TopBlockedClientsData\n): ReactNode => {\n  return data.topClients.map(item => {\n    const percentage = (item.count / data.blockedQueries) * 100;\n\n    return (\n      <tr key={item.name + \"|\" + item.ip}>\n        <td>{item.name !== \"\" ? item.name : item.ip}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td style={{ verticalAlign: \"middle\" }}>\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.blockedQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-danger\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopBlockedClients = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopBlockedClients> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Blocked Clients\")}\n    initialData={{\n      blockedQueries: 0,\n      topClients: []\n    }}\n    headers={[t(\"Client\"), t(\"Requests\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Clients Found\")}\n    isEmpty={data => data.topClients.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopBlockedClientsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopBlockedClients\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopBlockedClientsDb(context.range)\n            : api.getTopBlockedClients()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(\n  TopBlockedClientsContainer\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Log component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport ReactTable, {\n  Filter,\n  ReactTableFunction,\n  RowInfo,\n  RowRenderProps\n} from \"react-table\";\nimport i18n from \"i18next\";\nimport i18next from \"i18next\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport debounce from \"lodash.debounce\";\nimport isEqual from \"lodash.isequal\";\nimport moment from \"moment\";\nimport { padNumber } from \"../../util/graphUtils\";\nimport api from \"../../util/api\";\nimport { dateRanges } from \"../../util/dateRanges\";\nimport { TranslatedTimeRangeSelector } from \"../dashboard/TimeRangeSelector\";\nimport { TimeRange } from \"../common/context/TimeRangeContext\";\nimport \"react-table/react-table.css\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface QueryLogState {\n  history: Array<ApiQuery>;\n  cursor: null | string;\n  loading: boolean;\n  atEnd: boolean;\n  filtersChanged: boolean;\n  filters: Array<Filter>;\n}\n\n/**\n * Get the default time range for the query log\n *\n * @param t The translation function\n */\nconst getDefaultRange = (t: i18next.TFunction): TimeRange => {\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n\n  return {\n    from: translatedDateRanges[last24Hours][0],\n    until: translatedDateRanges[last24Hours][1],\n    name: last24Hours\n  };\n};\n\nclass QueryLog extends Component<WithTranslation, QueryLogState> {\n  private updateHandler: null | CancelablePromise<ApiHistoryResponse> = null;\n\n  state: QueryLogState = {\n    history: [],\n    cursor: null,\n    loading: false,\n    atEnd: false,\n    filtersChanged: false,\n    filters: []\n  };\n\n  constructor(props: WithTranslation) {\n    super(props);\n\n    const { t } = this.props;\n\n    // This happens in the constructor to more easily use the translated date\n    // ranges\n    this.state.filters = [\n      {\n        id: \"time\",\n        value: getDefaultRange(t)\n      }\n    ];\n  }\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Get the props for a given row\n   *\n   * @param state the state of the ReactTable\n   * @param rowInfo the row information\n   * @returns {*} props for the row\n   */\n  getRowProps = (state: any, rowInfo: RowInfo | undefined) => {\n    // Check if the row is known to be blocked or allowed (not unknown)\n    if (rowInfo && rowInfo.row.status !== 0) {\n      // Blocked queries are red, allowed queries are green\n      return {\n        style: {\n          color: [1, 4, 5, 6].includes(rowInfo.row.status) ? \"red\" : \"green\"\n        }\n      };\n    } else {\n      // Unknown queries do not get colored\n      return {};\n    }\n  };\n\n  /**\n   * Convert the table filters into API history filters\n   *\n   * @param tableFilters the filters requested by the table\n   * @return the filters converted for use by the API\n   */\n  parseFilters = (tableFilters: Array<Filter>) => {\n    let filters: any = {};\n\n    for (const filter of tableFilters) {\n      switch (filter.id) {\n        case \"time\":\n          filters.from = moment(filter.value.from).unix();\n          filters.until = moment(filter.value.until).unix();\n          break;\n        case \"queryType\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          // Query Types start at 1\n          filters.query_type = parseInt(filter.value) + 1;\n          break;\n        case \"domain\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.domain = filter.value;\n          break;\n        case \"client\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.client = filter.value;\n          break;\n        case \"status\":\n          switch (filter.value) {\n            case \"all\":\n              // Filter is not applied\n              break;\n            case \"allowed\":\n              filters.blocked = false;\n              break;\n            case \"blocked\":\n              filters.blocked = true;\n              break;\n            default:\n              filters.status = filter.value;\n              break;\n          }\n          break;\n        case \"dnssec\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.dnssec = filter.value;\n          break;\n        case \"reply\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.reply = filter.value;\n          break;\n        default:\n          break;\n      }\n    }\n\n    return filters;\n  };\n\n  /**\n   * Fetch queries from the API, if necessary. This is called from the\n   * ReactTable component, which dictates its parameters.\n   *\n   * @param page The page of the query log\n   * @param pageSize The number of queries in the page\n   */\n  fetchQueries = ({ page, pageSize }: { page: number; pageSize: number }) => {\n    // Don't fetch the queries if:\n    // - We've reached the end of the queries\n    // - We are still waiting for the last fetch to finish\n    // - Filters are the same and we already have this page and the next\n    if (\n      this.state.atEnd ||\n      this.state.loading ||\n      (!this.state.filtersChanged &&\n        this.state.history.length >= (page + 2) * pageSize)\n    ) {\n      return;\n    }\n\n    // We have to ask the API for more queries\n    this.setState({ loading: true });\n\n    // Send a request for more queries\n    this.updateHandler = makeCancelable(\n      api.getHistory({\n        cursor: this.state.cursor,\n        ...this.parseFilters(this.state.filters)\n      })\n    );\n\n    this.updateHandler.promise\n      .then(data => {\n        // Update the log with the new queries\n        this.setState({\n          loading: false,\n          atEnd: data.cursor === null,\n          cursor: data.cursor,\n          history: this.state.history.concat(data.history),\n          filtersChanged: false\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <ReactTable\n        className=\"-striped\"\n        style={{ background: \"white\", marginBottom: \"24px\", lineHeight: 1 }}\n        columns={columns(t)}\n        showPaginationTop={true}\n        sortable={false}\n        filterable={false}\n        data={this.state.history}\n        loading={this.state.loading}\n        onFetchData={state => {\n          if (isEqual(state.filtered, this.state.filters)) {\n            // If the filters have not changed, do not debounce the fetch.\n            // This allows fetching the next page to happen without waiting for\n            // the debounce.\n            this.fetchQueries(state);\n          } else {\n            // The filters have changed, so debounce until they have stabilized\n            // (wait for the user to stop typing)\n            return debounce(this.fetchQueries, 350)(state);\n          }\n        }}\n        onFilteredChange={debounce(filters => {\n          if (isEqual(filters, this.state.filters)) {\n            return;\n          }\n\n          this.setState({\n            filters,\n            filtersChanged: true,\n            cursor: null,\n            atEnd: false,\n            loading: false,\n            history: []\n          });\n        }, 300)}\n        defaultFiltered={[\n          {\n            id: \"time\",\n            value: getDefaultRange(t)\n          }\n        ]}\n        getTrProps={this.getRowProps}\n        ofText={this.state.atEnd ? \"of\" : \"of at least\"}\n        // Pad empty rows to have the same height as filled rows\n        PadRowComponent={() => (\n          <span>\n            &nbsp;\n            <br />\n            &nbsp;\n          </span>\n        )}\n      />\n    );\n  }\n}\n\n/**\n * Convert a status code to a status message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst status = (t: i18next.TFunction) => [\n  t(\"Unknown\"),\n  t(\"Blocked (gravity)\"),\n  t(\"Allowed (forwarded)\"),\n  t(\"Allowed (cached)\"),\n  t(\"Blocked (regex/wildcard)\"),\n  t(\"Blocked (blacklist)\"),\n  t(\"Blocked (external)\")\n];\n\n/**\n * Convert a DNSSEC code to a DNSSEC message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst dnssec = (t: i18next.TFunction) => [\n  \"N/A\", // Unspecified, which means DNSSEC is off, so nothing should be shown\n  t(\"Secure\"),\n  t(\"Insecure\"),\n  t(\"Bogus\"),\n  t(\"Abandoned\"),\n  t(\"Unknown\")\n];\n\nconst dnssecColor = [\n  \"\", // Unspecified, which means DNSSEC is off, so the initial color should be shown\n  \"green\", // Secure\n  \"orange\", // Insecure\n  \"red\", // Bogus\n  \"red\", // Abandoned\n  \"orange\" // Unknown\n];\n\n/**\n * Convert a reply type code to a reply type. The unknown type is translated, so\n * you must pass in the translation function before using the message array.\n */\nconst replyTypes = (t: i18next.TFunction) => [\n  t(\"Unknown\"),\n  \"NODATA\",\n  \"NXDOMAIN\",\n  \"CNAME\",\n  \"IP\",\n  \"DOMAIN\",\n  \"RRNAME\"\n];\n\n/**\n * Convert a query type code to a query type.\n */\nconst queryTypes = [\"A\", \"AAAA\", \"ANY\", \"SRV\", \"SOA\", \"PTR\", \"TXT\"];\n\n/**\n * Create a method which returns a select component for the filter, using the\n * supplied items as the selectable filters.\n *\n * @param items The options to show in the filter\n * @param t The translation function\n * @param extras Extra custom options which should show up in the filter list\n * @returns {function({filter: *, onChange: *}): *} A select component with the\n * filter data\n */\nconst selectionFilter = (\n  items: string[],\n  t: i18next.TFunction,\n  extras: Array<{ name: string; value: any }> = []\n) => {\n  return ({\n    filter,\n    onChange\n  }: {\n    filter: Filter;\n    onChange: ReactTableFunction;\n  }) => (\n    <select\n      onChange={event => onChange(event.target.value)}\n      style={{ width: \"100%\" }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"all\">{t(\"All\")}</option>\n      {extras.map((extra, i) => (\n        <option key={i} value={extra.value}>\n          {extra.name}\n        </option>\n      ))}\n      {items.map((item, i) => (\n        <option key={i + extras.length} value={i}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\n/**\n * The columns of the Query Log. Some pieces are translated, so you must pass in\n * the translation function before using the columns.\n */\nconst columns = (t: i18next.TFunction) => [\n  {\n    Header: t(\"Time\"),\n    id: \"time\",\n    accessor: (r: ApiQuery) => r.timestamp,\n    width: 70,\n    Cell: (row: RowRenderProps) => {\n      const date = new Date(row.value * 1000);\n      const month = date.toLocaleDateString(i18n.language, {\n        month: \"short\"\n      });\n      const dayOfMonth = padNumber(date.getDate());\n      const hour = padNumber(date.getHours());\n      const minute = padNumber(date.getMinutes());\n      const second = padNumber(date.getSeconds());\n\n      return (\n        <Fragment>\n          {month + \", \" + dayOfMonth}\n          <br />\n          {hour + \":\" + minute + \":\" + second}\n        </Fragment>\n      );\n    },\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: ({\n      filter,\n      onChange\n    }: {\n      filter: Filter;\n      onChange: ReactTableFunction;\n    }) => (\n      <TranslatedTimeRangeSelector\n        range={filter ? filter.value : null}\n        onSelect={range => {\n          if (range) {\n            onChange(range);\n          } else {\n            onChange(getDefaultRange(t));\n          }\n        }}\n        showLabel={false}\n      />\n    )\n  },\n  {\n    Header: t(\"Type\"),\n    id: \"queryType\",\n    accessor: (r: ApiQuery) => queryTypes[r.type - 1],\n    width: 50,\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(queryTypes, t)\n  },\n  {\n    Header: t(\"Domain\"),\n    id: \"domain\",\n    accessor: (r: ApiQuery) => r.domain,\n    minWidth: 150,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Client\"),\n    id: \"client\",\n    accessor: (r: ApiQuery) => r.client,\n    minWidth: 120,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Status\"),\n    id: \"status\",\n    accessor: (r: ApiQuery) => r.status,\n    width: 140,\n    Cell: (row: RowRenderProps) => status(t)[row.value],\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(status(t), t, [\n      { name: t(\"Allowed\"), value: \"allowed\" },\n      { name: t(\"Blocked\"), value: \"blocked\" }\n    ])\n  },\n  {\n    Header: \"DNSSEC\",\n    id: \"dnssec\",\n    accessor: (r: ApiQuery) => r.dnssec,\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: dnssecColor[row.value] }}>\n        {dnssec(t)[row.value]}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(dnssec(t), t)\n  },\n  {\n    Header: t(\"Reply\"),\n    id: \"reply\",\n    accessor: (r: ApiQuery) => ({ type: r.reply, time: r.response_time }),\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: \"black\" }}>\n        {replyTypes(t)[row.value.type]}\n        <br />\n        {\"(\" + (row.value.time / 10).toLocaleString() + \"ms)\"}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(replyTypes(t), t)\n  },\n  {\n    Header: t(\"Action\"),\n    width: 100,\n    filterable: false,\n    Cell: (data: { row: any }) => {\n      // Blocked, but can whitelist\n      if ([1, 4, 5].includes(data.row.status)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-success full-width\"\n            onClick={() => api.addWhitelist(data.row.domain)}\n          >\n            {t(\"Whitelist\")}\n          </button>\n        );\n      }\n\n      // Not explicitly blocked (or is whitelisted), but could be blocked.\n      // This includes externally blocked.\n      if ([2, 3, 6].includes(data.row.status)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger full-width\"\n            onClick={() => api.addBlacklist(data.row.domain)}\n          >\n            {t(\"Blacklist\")}\n          </button>\n        );\n      }\n\n      return null;\n    }\n  }\n];\n\nexport default withTranslation([\"common\", \"query-log\", \"time-ranges\"])(\n  QueryLog\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain Input component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\n\nexport interface DomainInputProps {\n  placeholder?: string;\n  onEnter: (domain: string) => void;\n  onRefresh: () => void;\n  isValid: (domain: string) => boolean;\n  onValidationError: () => void;\n}\n\nexport interface DomainInputState {\n  domain: string;\n  isValid: boolean;\n}\n\nexport class DomainInput extends Component<\n  DomainInputProps & WithTranslation,\n  DomainInputState\n> {\n  static defaultProps = {\n    placeholder: \"\"\n  };\n\n  state: DomainInputState = {\n    domain: \"\",\n    isValid: true\n  };\n\n  handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ domain: e.target.value });\n  };\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const domain = this.state.domain;\n\n    // Don't do anything for empty inputs\n    if (domain.length === 0) {\n      return;\n    }\n\n    const isValid = this.props.isValid(domain);\n    this.setState({ isValid });\n    if (isValid) {\n      this.props.onEnter(domain);\n      // Clear the input on successful submit\n      this.setState({ domain: \"\" });\n    } else {\n      this.props.onValidationError();\n    }\n  };\n\n  render() {\n    const { t, placeholder, onRefresh } = this.props;\n\n    return (\n      <form className=\"form-group input-group\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className={`form-control ${this.state.isValid ? \"\" : \"is-invalid\"}`}\n          placeholder={placeholder}\n          value={this.state.domain}\n          onChange={this.handleChange}\n          disabled={!api.loggedIn}\n        />\n        <span className=\"btn-group input-group-append\">\n          {api.loggedIn ? (\n            <button className=\"btn border-secondary\" type=\"submit\">\n              {t(\"Add\")}\n            </button>\n          ) : null}\n          <button\n            onClick={onRefresh}\n            className=\"btn border-secondary\"\n            type=\"button\"\n          >\n            <i className=\"fa fa-sync\" />\n          </button>\n        </span>\n      </form>\n    );\n  }\n}\n\nexport const DomainInputContainer = withTranslation([\"common\", \"lists\"])(\n  DomainInput\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Alert component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\n\nexport type AlertType = \"info\" | \"success\" | \"danger\";\n\nexport interface AlertProps {\n  type: AlertType;\n  onClick: () => void;\n  message: string;\n  dismissible: boolean;\n}\n\nconst Alert = (props: AlertProps) => {\n  const dismissClass = props.dismissible ? \"alert-dismissible\" : \"\";\n\n  return (\n    <div className={`alert alert-${props.type} ${dismissClass} fade show`}>\n      {props.dismissible ? (\n        <button type=\"button\" className=\"close\" onClick={props.onClick}>\n          &times;\n        </button>\n      ) : null}\n      {props.message}\n    </div>\n  );\n};\n\nAlert.defaultProps = {\n  onClick: () => {},\n  dismissible: true\n};\n\nexport default Alert;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain List component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { Button } from \"reactstrap\";\nimport Alert from \"../common/Alert\";\n\nexport interface DomainListProps extends WithTranslation {\n  domains: string[];\n  onRemove: (domain: string) => void;\n}\n\nconst DomainList = ({ domains, onRemove, t }: DomainListProps) => {\n  // Create a button to remove the domain\n  const removeButton = (item: string) => (\n    <Button\n      color=\"danger\"\n      size=\"sm\"\n      className=\"pull-right\"\n      style={{ marginTop: \"2px\" }}\n      onClick={() => onRemove(item)}\n    >\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  );\n\n  // Map a domain string to a list item\n  const mapDomainsToListItems = (domain: string) => (\n    <li key={domain} className=\"list-group-item\">\n      {api.loggedIn ? removeButton(domain) : null}\n      <span\n        style={{\n          display: \"table-cell\",\n          verticalAlign: \"middle\",\n          height: \"32px\"\n        }}\n      >\n        {domain}\n      </span>\n    </li>\n  );\n\n  let body;\n\n  if (domains.length > 0) {\n    body = domains.map(mapDomainsToListItems);\n  } else {\n    body = (\n      <Alert\n        type=\"info\"\n        message={t(\"There are no domains in this list\")}\n        dismissible={false}\n      />\n    );\n  }\n\n  return <ul className=\"list-group\">{body}</ul>;\n};\n\nexport default withTranslation([\"common\", \"lists\"])(DomainList);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * List Page component (abstracted whitelist, blacklist, etc)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { DomainInputContainer } from \"./DomainInput\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport DomainList from \"./DomainList\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface ListPageProps {\n  title: string;\n  note?: {} | string;\n  placeholder: string;\n  onAdd: (domain: string) => Promise<any | never>;\n  onRefresh: () => Promise<any | never>;\n  onRemove: (domain: string) => Promise<any | never>;\n  isValid: (domain: string) => boolean;\n  validationErrorMsg: string;\n}\n\nexport interface ListPageState {\n  domains: string[];\n  message: string;\n  messageType: AlertType;\n}\n\nexport class ListPage extends Component<\n  ListPageProps & WithTranslation,\n  ListPageState\n> {\n  static defaultProps = {\n    note: \"\"\n  };\n\n  state: ListPageState = {\n    domains: [],\n    message: \"\",\n    messageType: \"info\"\n  };\n\n  private addHandler: undefined | CancelablePromise<any | never>;\n  private removeHandler: undefined | CancelablePromise<any | never>;\n  private refreshHandler: undefined | CancelablePromise<any | never>;\n\n  onEnter = (domain: string) => {\n    // Check if the domain was already added\n    if (this.state.domains.includes(domain)) {\n      this.onAlreadyAdded(domain);\n    } else {\n      // Store the domains before adding the new domain, for a possible rollback\n      const prevDomains = this.state.domains.slice();\n\n      // Try to add the domain\n      this.addHandler = makeCancelable(this.props.onAdd(domain));\n      this.addHandler.promise\n        .then(() => {\n          this.onAdded(domain);\n        })\n        .catch(ignoreCancel)\n        .catch(() => {\n          this.onAddFailed(domain, prevDomains);\n        });\n\n      // Show an in-progress message\n      this.onAdding(domain);\n    }\n  };\n\n  onAdding = (domain: string) =>\n    this.setState({\n      message: this.props.t(\"Adding {{domain}}...\", { domain }),\n      messageType: \"info\"\n    });\n\n  onAlreadyAdded = (domain: string) =>\n    this.setState({\n      message: this.props.t(\"{{domain}} is already added\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onAdded = (domain: string) =>\n    this.setState(prevState => ({\n      domains: [...prevState.domains, domain],\n      message: this.props.t(\"Successfully added {{domain}}\", { domain }),\n      messageType: \"success\"\n    }));\n\n  onAddFailed = (domain: string, prevDomains: string[]) =>\n    this.setState({\n      domains: prevDomains,\n      message: this.props.t(\"Failed to add {{domain}}\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onRemoved = (domain: string) =>\n    this.setState(prevState => ({\n      domains: prevState.domains.filter(item => item !== domain)\n    }));\n\n  onRemoveFailed = (domain: string, prevDomains: string[]) =>\n    this.setState({\n      domains: prevDomains,\n      message: this.props.t(\"Failed to remove {{domain}}\", { domain }),\n      messageType: \"danger\"\n    });\n\n  onRemove = (domain: string) => {\n    if (this.state.domains.includes(domain)) {\n      const prevDomains = this.state.domains.slice();\n\n      this.removeHandler = makeCancelable(this.props.onRemove(domain));\n      this.removeHandler.promise.catch(ignoreCancel).catch(() => {\n        this.onRemoveFailed(domain, prevDomains);\n      });\n\n      this.onRemoved(domain);\n    }\n  };\n\n  onRefresh = () => {\n    this.refreshHandler = makeCancelable(this.props.onRefresh());\n    this.refreshHandler.promise\n      .then(data => {\n        this.setState({ domains: data });\n      })\n      .catch(ignoreCancel);\n  };\n\n  handleValidationError = () => {\n    this.setState({\n      message: this.props.validationErrorMsg,\n      messageType: \"danger\"\n    });\n  };\n\n  componentDidMount() {\n    this.onRefresh();\n  }\n\n  componentWillUnmount() {\n    if (this.addHandler) this.addHandler.cancel();\n    if (this.removeHandler) this.removeHandler.cancel();\n    if (this.refreshHandler) this.refreshHandler.cancel();\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: \"24px\" }}>\n        <h2 className=\"text-center\">{this.props.title}</h2>\n        <br />\n        <DomainInputContainer\n          placeholder={this.props.placeholder}\n          onEnter={this.onEnter}\n          onRefresh={this.onRefresh}\n          isValid={this.props.isValid}\n          onValidationError={this.handleValidationError}\n        />\n        {this.props.note}\n        {this.state.message ? (\n          <Alert\n            message={this.state.message}\n            type={this.state.messageType}\n            onClick={() => this.setState({ message: \"\" })}\n          />\n        ) : null}\n        <DomainList domains={this.state.domains} onRemove={this.onRemove} />\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"lists\"])(ListPage);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Utility functions for validating domains, hostnames etc.\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport function isValidHostname(hostname: string): boolean {\n  // Must not exceed 253 characters total\n  if (hostname.length > 253) return false;\n  // Each segment must not exceed 63 characters\n  const segments = hostname.split(\".\");\n  // If at least one segment is empty or longer than 63 chars - sets to true, if none - false\n  const hasLongOrEmptySegments = segments.some(\n    segment => segment.length < 1 || segment.length > 63\n  );\n  if (hasLongOrEmptySegments) return false;\n  // Must not be all numbers and periods\n  const joined = segments.join(\"\");\n  // If the hostname without periods make a number, deny\n  if (isPositiveNumber(joined)) return false;\n\n  return /^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)+(\\.([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*))*$/.test(\n    hostname\n  );\n}\n\nexport function isValidDomain(domain: string): boolean {\n  // Make sure it's a fully qualified domain\n  const split = domain.split(\".\");\n  // Has to have at least 2 segments, of at least 1 character each\n  if (split.length < 2) return false;\n  return isValidHostname(domain);\n}\n\nexport function isPositiveNumber(input: string): boolean {\n  // Because parseInt has limitations, e.g. parseInt(\"15ex\") is parsed to 15\n  // Caution, does not work with negative numbers, replace with /^(\\-|\\+)?([0-9])$/ if needed\n  return /^[0-9]+$/.test(input);\n}\n\nexport function isValidRegex(regex: string): boolean {\n  try {\n    new RegExp(regex);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the string is a valid IPv4 address\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address\n */\nexport function isValidIpv4(address: string): boolean {\n  const segments = address.split(\".\");\n\n  // Must have 4 segments\n  if (segments.length !== 4) {\n    return false;\n  }\n\n  // All segments must be numbers (positive)\n  return segments.every(\n    segment => isPositiveNumber(segment) && parseInt(segment) < 256\n  );\n}\n\n/**\n * Check if the string is a valid IPv4 address, and it can contain an optional\n * port after the address, separated with a :.\n * Example: 127.0.0.1:5353\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address and the port\n * (if it exists) is valid.\n */\nexport function isValidIpv4OptionalPort(address: string): boolean {\n  const split = address.split(\":\");\n  const ipv4 = split[0];\n\n  // Check the IPv4 address\n  if (!isValidIpv4(ipv4)) {\n    return false;\n  }\n\n  // If no port is given or if the port is valid, return true\n  return (\n    split.length === 1 || (split.length === 2 && isPositiveNumber(split[1]))\n  );\n}\n\n/**\n * Check if the string is a valid IPv6 address, and it can contain an optional\n * port. This function does not do a thorough check of the IPv6 address; the\n * backend will check it in detail.\n * Examples:\n * 1fff:0:a88:85a3::ac1f\n * [1fff:0:a88:85a3::ac1f]:8001\n *\n * @param address The IPv6 address\n */\nexport function isValidIpv6OptionalPort(address: string): boolean {\n  return /^(\\[[a-fA-F0-9:]+]:\\d+|[a-fA-F0-9:]+)$/.test(address);\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Whitelist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidHostname } from \"../util/validate\";\n\nconst Whitelist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={t(\"Whitelist\")}\n      placeholder={t(\"Add a domain or hostname (example.com or example)\")}\n      onAdd={api.addWhitelist}\n      onRemove={api.removeWhitelist}\n      onRefresh={api.getWhitelist}\n      isValid={isValidHostname}\n      validationErrorMsg={t(\"Not a valid hostname\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(Whitelist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Blacklist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../util/api\";\nimport ListPage from \"../components/list/ListPage\";\nimport { isValidHostname } from \"../util/validate\";\n\nconst Blacklist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Exact\")})`}\n      placeholder={t(\"Add a domain or hostname (example.com or example)\")}\n      onAdd={api.addBlacklist}\n      onRemove={api.removeBlacklist}\n      onRefresh={api.getBlacklist}\n      isValid={isValidHostname}\n      validationErrorMsg={t(\"Not a valid hostname\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(Blacklist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Regexlist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidRegex } from \"../util/validate\";\n\nconst Regexlist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Regex\")})`}\n      placeholder={t(\"Input a regular expression\")}\n      onAdd={api.addRegexlist}\n      onRemove={api.removeRegexlist}\n      onRefresh={api.getRegexlist}\n      isValid={isValidRegex}\n      validationErrorMsg={t(\"Not a valid regular expression\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(Regexlist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version - Card component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Collapse } from \"reactstrap\";\n\nexport interface VersionCardProps extends WithTranslation {\n  branch: string;\n  hash: string;\n  name: string;\n  tag: string;\n  icon: string;\n}\n\nexport interface VersionCardState {\n  collapsed: boolean;\n}\n\nclass VersionCard extends Component<VersionCardProps, VersionCardState> {\n  state: VersionCardState = {\n    collapsed: true\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"card border-0 bg-primary\">\n        <div className=\"card-block\">\n          <div className=\"card-icon\">\n            <i className={this.props.icon} />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <h3>{this.props.name}</h3>\n          <p>\n            {t(\"Version\")}:{\" \"}\n            {this.props.branch === \"master\" ? this.props.tag : \"vDev\"}\n          </p>\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n          >\n            {t(\"Details\")}\n          </button>\n          <Collapse isOpen={!this.state.collapsed}>\n            <table\n              className=\"table table-borderless table-sm table-condensed\"\n              style={{ marginTop: \"1rem\", marginBottom: \"0\" }}\n            >\n              <tbody>\n                <tr>\n                  <td>{t(\"Branch\")}</td>\n                  <td>{this.props.branch}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Tag\")}</td>\n                  <td>{this.props.tag}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Hash\")}</td>\n                  <td>{this.props.hash}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(VersionCard);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport VersionCard from \"./VersionCard\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nclass VersionInfo extends Component<ApiVersions & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"Core\")}\n            icon=\"far fa-dot-circle fa-2x\"\n            branch={this.props.core.branch}\n            hash={this.props.core.hash}\n            tag={this.props.core.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"FTL\")}\n            icon=\"fa fa-industry fa-2x\"\n            branch={this.props.ftl.branch}\n            hash={this.props.ftl.hash}\n            tag={this.props.ftl.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"API\")}\n            icon=\"fa fa-bullseye fa-2x\"\n            branch={this.props.api.branch}\n            hash={this.props.api.hash}\n            tag={this.props.api.tag}\n          />\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-xs-12\">\n          <VersionCard\n            name={t(\"Web\")}\n            icon=\"far fa-list-alt fa-2x\"\n            branch={this.props.web.branch}\n            hash={this.props.web.hash}\n            tag={this.props.web.tag}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const initialData: ApiVersions = {\n  api: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  core: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  ftl: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  web: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  }\n};\n\nexport const TranslatedVersionInfo = withTranslation([\"common\"])(VersionInfo);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getVersion}\n    repeatOptions={{ interval: 600000, ignoreCancel: true }}\n    renderInitial={() => <TranslatedVersionInfo {...initialData} {...props} />}\n    renderOk={data => <TranslatedVersionInfo {...data} {...props} />}\n    renderErr={() => <TranslatedVersionInfo {...initialData} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Label\n} from \"reactstrap\";\nimport { isValidHostname, isValidIpv4 } from \"../../util/validate\";\nimport Alert, { AlertType } from \"../common/Alert\";\n\nexport interface DHCPInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  settings: ApiDhcpSettings;\n}\n\nclass DHCPInfo extends Component<WithTranslation, DHCPInfoState> {\n  state: DHCPInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    settings: {\n      active: false,\n      ip_start: \"\",\n      ip_end: \"\",\n      router_ip: \"\",\n      lease_time: 0,\n      domain: \"\",\n      ipv6_support: false,\n      rapid_commit: true\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDhcpSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  loadDHCPInfo = () => {\n    this.loadHandler = makeCancelable(api.getDHCPInfo());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({ settings: res });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDHCPInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to DHCP settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDHCPInfo(this.state.settings)\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  /**\n   * Settings are valid if the value is valid or if DHCP is disabled and the value is empty.\n   *\n   * @param value the value to check\n   * @param validator the validation function\n   */\n  isSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.settings.active && value.length === 0) || validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isIpStartValid = this.isSettingValid(\n      this.state.settings.ip_start,\n      isValidIpv4\n    );\n    const isIpEndValid = this.isSettingValid(\n      this.state.settings.ip_end,\n      isValidIpv4\n    );\n    const isRouterIpValid = this.isSettingValid(\n      this.state.settings.router_ip,\n      isValidIpv4\n    );\n    const isLeaseTimeValid = this.state.settings.lease_time >= 0;\n    const isDomainValid = this.isSettingValid(\n      this.state.settings.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.settings.active}\n              onChange={this.onChange(\"active\", \"checked\")}\n            />\n            {t(\"Enabled\")}\n          </Label>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"startIP\" sm={2}>\n            {t(\"Start IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"startIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_start}\n              onChange={this.onChange(\"ip_start\", \"value\")}\n              invalid={!isIpStartValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"endIP\" sm={2}>\n            {t(\"End IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"endIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_end}\n              onChange={this.onChange(\"ip_end\", \"value\")}\n              invalid={!isIpEndValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"routerIP\" sm={2}>\n            {t(\"Router IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"routerIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.router_ip}\n              onChange={this.onChange(\"router_ip\", \"value\")}\n              invalid={!isRouterIpValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"leaseTime\" sm={2}>\n            {t(\"Lease Time\")}\n          </Label>\n          <Col sm={10}>\n            <InputGroup>\n              <Input\n                id=\"leaseTime\"\n                disabled={!this.state.settings.active}\n                value={this.state.settings.lease_time}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  this.setState(oldState => ({\n                    settings: {\n                      ...oldState.settings,\n                      lease_time: parseInt(e.target.value)\n                    }\n                  }))\n                }\n                invalid={!isLeaseTimeValid}\n              />\n              <InputGroupAddon addonType=\"append\">Hours</InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"domain\" sm={2}>\n            {t(\"Domain\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"domain\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.domain}\n              onChange={this.onChange(\"domain\", \"value\")}\n              invalid={!isDomainValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={!this.state.settings.active}\n              checked={this.state.settings.ipv6_support}\n              onChange={this.onChange(\"ipv6_support\", \"checked\")}\n            />\n            {t(\"IPv6 Support\")}\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={!this.state.settings.active}\n              checked={this.state.settings.rapid_commit}\n              onChange={this.onChange(\"rapid_commit\", \"checked\")}\n            />\n            {t(\"Rapid Commit\")}\n          </Label>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={\n            this.state.processing ||\n            !isIpStartValid ||\n            !isIpEndValid ||\n            !isRouterIpValid ||\n            !isLeaseTimeValid ||\n            !isDomainValid\n          }\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\", \"api-errors\"])(DHCPInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A Upstream DNS List Item\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { Button, ListGroupItem } from \"reactstrap\";\n\nexport interface DnsListItemProps {\n  address: string;\n  onRemove: () => void;\n}\n\nconst DnsListItem = ({ address, onRemove }: DnsListItemProps) => (\n  <ListGroupItem>\n    {address}\n    <Button color=\"danger\" size=\"sm\" className=\"pull-right\" onClick={onRemove}>\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  </ListGroupItem>\n);\n\nexport default DnsListItem;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preconfigured Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport interface PreconfiguredUpstream {\n  name: string;\n  primaryIpv4: string;\n  secondaryIpv4: string;\n  primaryIpv6: string;\n  secondaryIpv6: string;\n}\n\n/**\n * A list of preconfigured upstream DNS servers. Each item has primary and\n * secondary IPv4 and IPv6 server entries. Some addresses may be empty.\n */\nexport const preconfiguredUpstreams: Array<PreconfiguredUpstream> = [\n  {\n    name: \"OpenDNS (ECS)\",\n    primaryIpv4: \"208.67.222.222\",\n    secondaryIpv4: \"208.67.220.220\",\n    primaryIpv6: \"2620:119:35::35\",\n    secondaryIpv6: \"2620:119:53::53\"\n  },\n  {\n    name: \"Google (ECS)\",\n    primaryIpv4: \"8.8.8.8\",\n    secondaryIpv4: \"8.8.4.4\",\n    primaryIpv6: \"2001:4860:4860:0:0:0:0:8888\",\n    secondaryIpv6: \"2001:4860:4860:0:0:0:0:8844\"\n  },\n  {\n    name: \"Quad9 (filtered, DNSSEC)\",\n    primaryIpv4: \"9.9.9.9\",\n    secondaryIpv4: \"149.112.112.112\",\n    primaryIpv6: \"2620:fe::fe\",\n    secondaryIpv6: \"2620:fe::9\"\n  },\n  {\n    name: \"Quad9 (unfiltered, no DNSSEC)\",\n    primaryIpv4: \"9.9.9.10\",\n    secondaryIpv4: \"149.112.112.10\",\n    primaryIpv6: \"2620:fe::10\",\n    secondaryIpv6: \"2620:fe::fe:10\"\n  },\n  {\n    name: \"Quad9 (filtered + ECS)\",\n    primaryIpv4: \"9.9.9.11\",\n    secondaryIpv4: \"149.112.112.11\",\n    primaryIpv6: \"2620:fe::11\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Cloudflare\",\n    primaryIpv4: \"1.1.1.1\",\n    secondaryIpv4: \"1.0.0.1\",\n    primaryIpv6: \"2606:4700:4700::1111\",\n    secondaryIpv6: \"2606:4700:4700::1001\"\n  },\n  {\n    name: \"Level3\",\n    primaryIpv4: \"4.2.2.1\",\n    secondaryIpv4: \"4.2.2.2\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Comodo\",\n    primaryIpv4: \"8.26.56.26\",\n    secondaryIpv4: \"8.20.247.20\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"DNS.WATCH\",\n    primaryIpv4: \"84.200.69.80\",\n    secondaryIpv4: \"84.200.70.40\",\n    primaryIpv6: \"2001:1608:10:25:0:0:1c04:b12f\",\n    secondaryIpv6: \"2001:1608:10:25:0:0:9249:d69b\"\n  }\n];\n\nexport interface PreconfiguredUpstreamOption {\n  label: string;\n  address: string;\n}\n\n/**\n * The preconfigured servers, but with an entry for each address. This is used\n * when displaying the servers in a list.\n */\nexport const preconfiguredUpstreamOptions = preconfiguredUpstreams.flatMap(\n  upstream => {\n    // Parse the upstream address information into the new format\n    const parseUpstream = (address: string, order: string, type: string) => ({\n      label: upstream.name + \" \" + order + \" \" + type + \" (\" + address + \")\",\n      address\n    });\n\n    let parsedUpstreams: Array<PreconfiguredUpstreamOption> = [];\n\n    if (upstream.primaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv4, \"Primary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.secondaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv4, \"Secondary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.primaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv6, \"Primary\", \"IPv6\")\n      );\n    }\n\n    if (upstream.secondaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv6, \"Secondary\", \"IPv6\")\n      );\n    }\n\n    return parsedUpstreams;\n  }\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Input For New DNS List Items\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { Button, InputGroup, InputGroupAddon, ListGroupItem } from \"reactstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  PreconfiguredUpstreamOption,\n  preconfiguredUpstreamOptions\n} from \"./preconfiguredUpstreams\";\n\nexport interface DnsListNewItemProps {\n  onAdd: (address: string) => void;\n  isValid: (address: string) => boolean;\n  upstreams: Array<string>;\n}\n\nexport interface DnsListNewItemState {\n  address: string;\n  selected: Array<PreconfiguredUpstreamOption>;\n}\n\n/**\n * A component to add upstream DNS servers. The servers are either selected from\n * a list of preconfigured upstreams, or custom servers can be input.\n */\nclass DnsListNewItem extends Component<\n  DnsListNewItemProps & WithTranslation,\n  DnsListNewItemState\n> {\n  state: DnsListNewItemState = {\n    address: \"\",\n    selected: []\n  };\n\n  private readonly typeahead: RefObject<any>;\n\n  constructor(props: DnsListNewItemProps & WithTranslation) {\n    super(props);\n    this.typeahead = React.createRef();\n  }\n\n  /**\n   * Get the currently selected upstream address (either custom or preconfigured)\n   *\n   * @returns {string} the selected upstream address\n   */\n  getAddress = () => {\n    if (this.state.selected.length === 0) {\n      return this.state.address;\n    }\n\n    return this.state.selected[0].address;\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isAddressValid = this.props.isValid(this.getAddress());\n\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Typeahead\n            id=\"dns-list-typeahead\"\n            onInputChange={address => this.setState({ address })}\n            onChange={selected => this.setState({ selected })}\n            options={preconfiguredUpstreamOptions.filter(\n              upstream => !this.props.upstreams.includes(upstream.address)\n            )}\n            selected={this.state.selected}\n            emptyLabel={t(\"Detected custom upstream server\")}\n            positionFixed\n            ref={this.typeahead}\n          />\n\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                // Add the server to the list\n                this.props.onAdd(this.getAddress());\n\n                // Reset the input\n                this.setState({ address: \"\", selected: [] });\n                this.typeahead.current.getInstance().clear();\n              }}\n              disabled={!isAddressValid}\n            >\n              <span className=\"fa fa-plus\" />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n}\n\nexport default withTranslation(\"settings\")(DnsListNewItem);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * An Editable List of Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { ListGroup } from \"reactstrap\";\nimport DnsListItem from \"./DnsListItem\";\nimport DnsListNewItem from \"./DnsListNewItem\";\nimport {\n  isValidIpv4OptionalPort,\n  isValidIpv6OptionalPort\n} from \"../../util/validate\";\n\nexport interface DnsListProps {\n  upstreams: Array<string>;\n  onAdd: (upstream: string) => void;\n  onRemove: (upstream: string) => void;\n}\n\n/**\n * Check if an upstream address is unique and valid\n *\n * @param address the address to check\n * @param upstreams the list of current upstreams\n * @returns {boolean} if the upstream address is unique and valid\n */\nexport const isAddressValid = (\n  address: string,\n  upstreams: Array<string>\n): boolean => {\n  return (\n    !upstreams.includes(address) &&\n    (isValidIpv4OptionalPort(address) || isValidIpv6OptionalPort(address))\n  );\n};\n\nconst DnsList = ({ upstreams, onAdd, onRemove }: DnsListProps) => (\n  <ListGroup style={{ overflowY: \"scroll\", maxHeight: \"350px\" }}>\n    {upstreams.map(upstream => (\n      <DnsListItem\n        key={upstream}\n        onRemove={() => onRemove(upstream)}\n        address={upstream}\n      />\n    ))}\n    <DnsListNewItem\n      onAdd={onAdd}\n      isValid={(address: string) => isAddressValid(address, upstreams)}\n      upstreams={upstreams}\n    />\n  </ListGroup>\n);\n\nexport default DnsList;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport i18next from \"i18next\";\n\nexport interface ConditionalForwardingObject {\n  enabled: boolean;\n  routerIp: string;\n  domain: string;\n}\n\nexport interface ConditionalForwardingSettingsProps {\n  settings: ConditionalForwardingObject;\n  onUpdate: (settings: ConditionalForwardingObject) => void;\n  isRouterIpValid: boolean;\n  isDomainValid: boolean;\n  t: i18next.TFunction;\n}\n\nconst ConditionalForwardingSettings = ({\n  settings,\n  onUpdate,\n  isRouterIpValid,\n  isDomainValid,\n  t\n}: ConditionalForwardingSettingsProps) => (\n  <Fragment>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.enabled}\n          onChange={e => onUpdate({ ...settings, enabled: e.target.checked })}\n        />\n        {t(\"Enabled\")}\n      </Label>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"routerIP\" sm={5}>\n        {t(\"Router IP\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"routerIP\"\n          disabled={!settings.enabled}\n          value={settings.routerIp}\n          onChange={e => onUpdate({ ...settings, routerIp: e.target.value })}\n          invalid={!isRouterIpValid}\n        />\n      </Col>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"localDomain\" sm={5}>\n        {t(\"Local Domain Name\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"localDomain\"\n          disabled={!settings.enabled}\n          value={settings.domain}\n          onChange={e => onUpdate({ ...settings, domain: e.target.value })}\n          invalid={!isDomainValid}\n        />\n      </Col>\n    </FormGroup>\n  </Fragment>\n);\n\nexport default ConditionalForwardingSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: DNS Options\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport i18next from \"i18next\";\n\nexport interface DnsOptionsObject {\n  fqdnRequired: boolean;\n  bogusPriv: boolean;\n  dnssec: boolean;\n  listeningType: string;\n}\n\nexport interface DnsOptionSettingsProps {\n  settings: DnsOptionsObject;\n  onUpdate: (settings: DnsOptionsObject) => void;\n  t: i18next.TFunction;\n}\n\nconst DnsOptionSettings = ({\n  settings,\n  onUpdate,\n  t\n}: DnsOptionSettingsProps) => (\n  <Fragment>\n    <FormGroup row>\n      <Label for=\"listeningBehavior\" sm={5}>\n        {t(\"Interface listening behavior\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"listeningBehavior\"\n          type=\"select\"\n          value={settings.listeningType}\n          onChange={e =>\n            onUpdate({ ...settings, listeningType: e.target.value })\n          }\n        >\n          <option>all</option>\n          <option>local</option>\n          <option>single</option>\n        </Input>\n      </Col>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.fqdnRequired}\n          onChange={e =>\n            onUpdate({ ...settings, fqdnRequired: e.target.checked })\n          }\n        />\n        {t(\"Forward FQDNs only\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.bogusPriv}\n          onChange={e => onUpdate({ ...settings, bogusPriv: e.target.checked })}\n        />\n        {t(\"Only forward public reverse lookups\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.dnssec}\n          onChange={e => onUpdate({ ...settings, dnssec: e.target.checked })}\n        />\n        {t(\"Use DNSSEC\")}\n      </Label>\n    </FormGroup>\n  </Fragment>\n);\n\nDnsOptionSettings.propTypes = {\n  settings: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired\n};\n\nexport default DnsOptionSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport DnsList from \"./DnsList\";\nimport { Button, Col, Form, FormGroup } from \"reactstrap\";\nimport ConditionalForwardingSettings, {\n  ConditionalForwardingObject\n} from \"./ConditionalForwardingSettings\";\nimport DnsOptionSettings, { DnsOptionsObject } from \"./DnsOptionSettings\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport { isValidHostname, isValidIpv4 } from \"../../util/validate\";\n\nexport interface DNSInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  upstreamDns: Array<string>;\n  conditionalForwarding: ConditionalForwardingObject;\n  options: DnsOptionsObject;\n}\n\nclass DNSInfo extends Component<WithTranslation, DNSInfoState> {\n  state: DNSInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    upstreamDns: [],\n    conditionalForwarding: {\n      enabled: false,\n      routerIp: \"\",\n      domain: \"\"\n    },\n    options: {\n      fqdnRequired: false,\n      bogusPriv: false,\n      dnssec: false,\n      listeningType: \"single\"\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDnsSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  loadDNSInfo = () => {\n    this.loadHandler = makeCancelable(api.getDNSInfo());\n    this.loadHandler.promise\n      .then(res => {\n        // If the domain is empty, fill it in with a default.\n        const savedDomain = res.conditional_forwarding.domain;\n        const domain = savedDomain.length === 0 ? \"lan\" : savedDomain;\n\n        this.setState({\n          upstreamDns: res.upstream_dns,\n          conditionalForwarding: {\n            enabled: res.conditional_forwarding.enabled,\n            routerIp: res.conditional_forwarding.router_ip,\n            domain\n          },\n          options: {\n            fqdnRequired: res.options.fqdn_required,\n            bogusPriv: res.options.bogus_priv,\n            dnssec: res.options.dnssec,\n            listeningType: res.options.listening_type\n          }\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDNSInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  handleUpstreamAdd = (upstream: string) => {\n    this.setState({\n      upstreamDns: this.state.upstreamDns.concat(upstream)\n    });\n  };\n\n  handleUpstreamRemove = (upstream: string) => {\n    this.setState({\n      upstreamDns: this.state.upstreamDns.filter(item => item !== upstream)\n    });\n  };\n\n  handleConditionalForwardingUpdate = (\n    conditionalForwarding: ConditionalForwardingObject\n  ) => {\n    this.setState({ conditionalForwarding });\n  };\n\n  handleDnsOptionsUpdate = (options: DnsOptionsObject) => {\n    this.setState({ options });\n  };\n\n  /**\n   * Save changes to DNS settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDNSInfo({\n        upstream_dns: this.state.upstreamDns,\n        conditional_forwarding: {\n          enabled: this.state.conditionalForwarding.enabled,\n          router_ip: this.state.conditionalForwarding.routerIp,\n          domain: this.state.conditionalForwarding.domain\n        },\n        options: {\n          fqdn_required: this.state.options.fqdnRequired,\n          bogus_priv: this.state.options.bogusPriv,\n          dnssec: this.state.options.dnssec,\n          listening_type: this.state.options.listeningType\n        }\n      })\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  isCFSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.conditionalForwarding.enabled && value.length === 0) ||\n      validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isRouterIpValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.routerIp,\n      isValidIpv4\n    );\n\n    const isDomainValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Col sm={6}>\n            <h3>{t(\"Upstream DNS Servers\")}</h3>\n            <DnsList\n              onAdd={this.handleUpstreamAdd}\n              onRemove={this.handleUpstreamRemove}\n              upstreams={this.state.upstreamDns}\n            />\n          </Col>\n          <Col sm={6}>\n            <h3>{t(\"Conditional Forwarding\")}</h3>\n            <ConditionalForwardingSettings\n              settings={this.state.conditionalForwarding}\n              onUpdate={this.handleConditionalForwardingUpdate}\n              isRouterIpValid={isRouterIpValid}\n              isDomainValid={isDomainValid}\n              t={t}\n            />\n            <h3>{t(\"DNS Options\")}</h3>\n            <DnsOptionSettings\n              settings={this.state.options}\n              onUpdate={this.handleDnsOptionsUpdate}\n              t={t}\n            />\n          </Col>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={this.state.processing || !isRouterIpValid || !isDomainValid}\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(DNSInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Network component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { Col, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface NetworkInfoProps extends WithTranslation {\n  interface: string;\n  ipv4Address: string;\n  ipv6Address: string;\n  hostname: string;\n}\n\nclass NetworkInfo extends Component<NetworkInfoProps, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"interface\" sm={4}>\n            {t(\"Interface\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"interface\"\n              value={this.props.interface}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"ipv4_address\" sm={4}>\n            {t(\"IPv4 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv4_address\"\n              value={this.props.ipv4Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"ipv6_address\" sm={4}>\n            {t(\"IPv6 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv6_address\"\n              value={this.props.ipv6Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"hostname\" sm={4}>\n            {t(\"Hostname\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"hostname\"\n              value={this.props.hostname}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport const transformData = (\n  data: ApiNetworkSettings\n): Omit<NetworkInfoProps, keyof WithTranslation> => ({\n  interface: data.interface,\n  ipv4Address: data.ipv4_address,\n  ipv6Address: data.ipv6_address,\n  hostname: data.hostname\n});\n\nexport const initialData = () => ({\n  interface: \"\",\n  ipv4Address: \"\",\n  ipv6Address: \"\",\n  hostname: \"\"\n});\n\nexport const TranslatedNetworkInfo = withTranslation([\"common\", \"settings\"])(\n  NetworkInfo\n);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getNetworkInfo}\n    repeatOptions={{\n      interval: 600000,\n      ignoreCancel: true\n    }}\n    renderInitial={() => (\n      <TranslatedNetworkInfo {...initialData()} {...props} />\n    )}\n    renderOk={data => (\n      <TranslatedNetworkInfo {...transformData(data)} {...props} />\n    )}\n    renderErr={() => <TranslatedNetworkInfo {...initialData()} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: FTL Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Form, Col, Input, FormGroup, Label } from \"reactstrap\";\nimport api from \"../../util/api\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface FTLInfoProps {\n  fileSize: number;\n  queries: number;\n  sqliteVersion: string;\n}\n\nclass FTLInfo extends Component<FTLInfoProps & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"queries\" sm={4}>\n            {t(\"Queries\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"queries\"\n              value={this.props.queries.toLocaleString()}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"filesize\" sm={4}>\n            {t(\"Filesize\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"filesize\"\n              value={`${this.props.fileSize.toLocaleString()} B`}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"bold\" for=\"sqliteversion\" sm={4}>\n            {t(\"SQLite version\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"sqliteversion\"\n              value={this.props.sqliteVersion}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport const transformData = (data: ApiFtlDbResponse): FTLInfoProps => ({\n  fileSize: data.filesize,\n  queries: data.queries,\n  sqliteVersion: data.sqlite_version\n});\n\nexport const initialData = {\n  fileSize: 0,\n  queries: 0,\n  sqliteVersion: \"\"\n};\n\nexport const TranslatedFTLInfo = withTranslation([\"settings\"])(FTLInfo);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getFTLdb}\n    repeatOptions={{\n      interval: 600000,\n      ignoreCancel: true\n    }}\n    renderInitial={() => <TranslatedFTLInfo {...initialData} {...props} />}\n    renderOk={data => <TranslatedFTLInfo {...transformData(data)} {...props} />}\n    renderErr={() => <TranslatedFTLInfo {...initialData} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Networking DNS & DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport DHCPInfo from \"../components/settings/DHCPInfo\";\nimport DNSInfo from \"../components/settings/DNSInfo\";\nimport NetworkInfo from \"../components/settings/NetworkInfo\";\nimport FTLInfo from \"../components/settings/FTLInfo\";\n\nexport interface NetworkingState {\n  activeTab: string;\n}\n\nclass Networking extends Component<WithTranslation, NetworkingState> {\n  state = {\n    activeTab: \"network\"\n  };\n\n  /**\n   * Set the active tab to the input\n   *\n   * @param tab the tab ID to switch to\n   */\n  setTab = (tab: string) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  };\n\n  /**\n   * Create a navigation tab\n   *\n   * @param id the tab's ID\n   * @param name the tab's display name\n   * @returns {NavItem} the tab component\n   */\n  tab = (id: string, name: string): ReactNode => (\n    <NavItem>\n      <NavLink\n        active={this.state.activeTab === id}\n        onClick={() => this.setTab(id)}\n      >\n        {name}\n      </NavLink>\n    </NavItem>\n  );\n\n  /**\n   * Create tab content\n   *\n   * @param id the tab's ID\n   * @param component the component to render in the tab\n   * @returns {ReactNode} the tab content component\n   */\n  tabContent = (id: string, component: ReactNode): ReactNode => (\n    <TabPane tabId={id}>{component}</TabPane>\n  );\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Nav tabs>\n          {this.tab(\"network\", t(\"Network\"))}\n          {this.tab(\"dhcp\", t(\"DHCP\"))}\n          {this.tab(\"dns\", t(\"DNS\"))}\n          {this.tab(\"ftl\", t(\"FTL\"))}\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          {this.tabContent(\"network\", <NetworkInfo />)}\n          {this.tabContent(\"dhcp\", <DHCPInfo />)}\n          {this.tabContent(\"dns\", <DNSInfo />)}\n          {this.tabContent(\"ftl\", <FTLInfo />)}\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(Networking);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Forgot Password Reminder\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\n\nexport interface ForgotPasswordProps extends WithTranslation {\n  error: boolean;\n}\n\nexport interface ForgotPasswordState {\n  collapsed: boolean;\n}\n\nclass ForgotPassword extends Component<\n  ForgotPasswordProps,\n  ForgotPasswordState\n> {\n  state: ForgotPasswordState = {\n    collapsed: true\n  };\n\n  /**\n   * Handle collapsing the body when clicked\n   */\n  onClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  /**\n   * @returns {Boolean|boolean} If the body should be expanded\n   */\n  isExpanded = () => this.props.error || !this.state.collapsed;\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"full-width\">\n        <div\n          className={\n            \"card mb0 \" + (this.props.error ? \"border-danger\" : \"border-white\")\n          }\n        >\n          <div className={this.props.error ? \"bg-danger\" : \"bg-white pr0\"}>\n            <span className={this.props.error ? \"pull-left\" : \"pull-right\"}>\n              <button\n                type=\"button\"\n                className={\n                  \"pr0 \" + (this.props.error ? \"btn disabled\" : \"btn btn-link\")\n                }\n                onClick={this.onClick}\n              >\n                {t(\"Forgot Password\")}\n              </button>\n            </span>\n          </div>\n          <div\n            className={\n              \"card-body bg-white \" +\n              (this.isExpanded() ? \"\" : \" collapse \") +\n              (this.props.error ? \"p12\" : \"p0\")\n            }\n          >\n            {t(\"forgot_password_description\")}\n            <pre>\n              <code>sudo pihole -a -p</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation(\"login\")(ForgotPassword);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Login page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport sha from \"sha.js\";\nimport api from \"../util/api\";\nimport logo from \"../img/logo.svg\";\nimport { routes } from \"../routes\";\nimport ForgotPassword from \"../components/login/ForgotPassword\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport config from \"../config\";\nimport { History, LocationDescriptorObject } from \"history\";\n\nexport interface LoginProps extends WithTranslation {\n  location: LocationDescriptorObject<{ from: Location }>;\n  history: History;\n}\n\nexport interface LoginState {\n  password: string;\n  error: boolean;\n  cookiesEnabled: boolean;\n}\n\nclass Login extends Component<LoginProps, LoginState> {\n  state = {\n    password: \"\",\n    error: false,\n    cookiesEnabled: false\n  };\n\n  componentWillMount() {\n    // Check if cookies are enabled\n    if (navigator.cookieEnabled) this.setState({ cookiesEnabled: true });\n  }\n\n  /**\n   * Update the password in the state.\n   *\n   * @param e the event\n   */\n  handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: e.target.value });\n  };\n\n  /**\n   * Try to authenticate the user\n   */\n  authenticate = (e?: FormEvent) => {\n    // Prevent the page from reloading when the user gets redirected\n    e && e.preventDefault();\n\n    // Hash the password twice before sending to the API\n    let hashedPassword = sha(\"sha256\")\n      .update(this.state.password)\n      .digest(\"hex\");\n    hashedPassword = sha(\"sha256\")\n      .update(hashedPassword)\n      .digest(\"hex\");\n\n    // Clear the state\n    this.setState({ password: \"\", error: false });\n\n    // Send the password to the API to authenticate the user\n    api\n      .authenticate(hashedPassword)\n      .then(() => {\n        api.loggedIn = true;\n\n        if (config.fakeAPI) {\n          // When using the fake API, set the cookie ourselves\n          document.cookie = \"user_id=;\";\n        }\n\n        // Redirect to the page the user was originally going to, or if that doesn't exist, go to home\n        const locationState = this.props.location.state || {\n          from: { pathname: \"/\" }\n        };\n        this.props.history.push(locationState.from.pathname);\n      })\n      // If there was an error, tell the user they used the wrong password\n      .catch(() => this.setState({ error: true }));\n  };\n\n  render() {\n    // If the user is already logged in, then go to the home page\n    if (api.loggedIn) return <Redirect to=\"/\" />;\n\n    const { t } = this.props;\n\n    return (\n      <div\n        className=\"mainbox col-md-8 offset-md-2 col-lg-6 offset-lg-3\"\n        style={{ float: \"none\" }}\n      >\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <div style={{ textAlign: \"center\" }}>\n              <img src={logo} alt=\"Logo\" width=\"30%\" />\n            </div>\n            <br />\n\n            <div className=\"card-title text-center\" style={{ marginBottom: 0 }}>\n              <span className=\"logo-lg\" style={{ fontSize: \"25px\" }}>\n                Pi-\n                <b>hole</b>\n              </span>\n            </div>\n            <div className=\"login-box-msg\">\n              {t(\"Sign in to start your session\")}\n              {// If the user tried to go to a protected page and is not logged in,\n              // tell them they will be redirected once login is successful\n              this.props.location.state &&\n              this.props.location.state.from.pathname in routes(t) ? (\n                <Fragment>\n                  <br />\n                  {t('You will be transferred to the \"{{page}}\" page', {\n                    page: routes(t)[this.props.location.state.from.pathname]\n                  })}\n                </Fragment>\n              ) : null}\n              {// If cookies are not enabled (or detected), show a warning\n              !this.state.cookiesEnabled ? (\n                <div className=\"text-center\" style={{ color: \"#F00\" }}>\n                  {t(\"Verify that cookies are allowed for {{host}}\", {\n                    host: window.location.host\n                  })}\n                </div>\n              ) : null}\n            </div>\n            {this.state.error ? (\n              <div className=\"form-group has-error login-box-msg\">\n                <label className=\"control-label\">\n                  <i className=\"fa fa-times-circle-o\" /> {t(\"Wrong Password!\")}\n                </label>\n              </div>\n            ) : null}\n          </div>\n\n          <div className=\"card-body\">\n            <form id=\"loginform\" onSubmit={this.authenticate}>\n              <div\n                className={\n                  \"input-group\" + (this.state.error ? \" has-error\" : \"\")\n                }\n              >\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={this.state.password}\n                  onChange={this.handlePasswordChange}\n                  placeholder={t(\"Password\")}\n                  autoFocus\n                />\n              </div>\n              <br />\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg btn-block\"\n              >\n                {t(\"Log in\")}\n              </button>\n              <br />\n              <ForgotPassword error={this.state.error} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"login\", \"location\"])(Login);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Logout the user\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport api from \"../util/api\";\nimport config from \"../config\";\n\nexport default class Logout extends Component {\n  componentWillMount() {\n    api.loggedIn = false;\n\n    if (config.fakeAPI) {\n      // When using the fake API, don't try deleting the resource\n      // (it results in an error). Instead, delete the cookie.\n      document.cookie =\n        \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    } else {\n      api.logout();\n    }\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A button in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { MouseEventHandler } from \"react\";\n\nexport interface NavButtonProps {\n  name: string;\n  icon: string;\n  onClick: MouseEventHandler;\n}\n\nconst NavButton = ({ name, icon, onClick }: NavButtonProps) => (\n  <li className=\"nav-item\">\n    <a\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        onClick(e);\n      }}\n      className=\"nav-link\"\n    >\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </a>\n  </li>\n);\n\nNavButton.defaultProps = {\n  onClick: () => {}\n};\n\nexport default NavButton;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * The enable/disable sidebar button\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport NavButton from \"./NavButton\";\nimport NavDropdown from \"./NavDropdown\";\nimport { StatusContext } from \"./context/StatusContext\";\nimport {\n  CancelablePromise,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader\n} from \"reactstrap\";\n\nexport interface EnableDisableProps {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n  onSetStatus: (\n    action: StatusAction,\n    time?: number\n  ) => Promise<ApiSuccessResponse>;\n}\n\nexport interface EnableDisableState {\n  processing: boolean;\n  customModalShown: boolean;\n  customTime: number;\n  customMultiplier: number;\n}\n\nexport class EnableDisable extends Component<\n  EnableDisableProps & WithTranslation,\n  EnableDisableState\n> {\n  state: EnableDisableState = {\n    processing: false,\n    customModalShown: false,\n    customTime: 60,\n    customMultiplier: 60\n  };\n\n  private updateHandler: CancelablePromise<ApiSuccessResponse> | undefined;\n\n  /**\n   * Convert a status action into a status. ex. \"enable\" -> \"enabled\"\n   *\n   * @param action The action\n   * @returns {string} The associated status\n   */\n  getStatusFromAction = (action: StatusAction): Status => {\n    switch (action) {\n      case \"enable\":\n        return \"enabled\";\n      case \"disable\":\n        return \"disabled\";\n    }\n  };\n\n  /**\n   * Send a request to the API to update the status\n   *\n   * @param action The action to perform (\"enable\" or \"disable\")\n   * @param time The amount of time to disable for. This setting is optional.\n   */\n  setStatus = (action: StatusAction, time?: number) => {\n    if (this.state.processing) {\n      // Wait for the first status change to go through\n      return;\n    }\n\n    // Only allow one status update at a time\n    this.toggleProcessing();\n\n    // Send the status change request\n    this.updateHandler = makeCancelable(this.props.onSetStatus(action, time));\n    this.updateHandler.promise\n      // Refresh once we get a good response\n      .then(() =>\n        this.props.refresh({ status: this.getStatusFromAction(action) })\n      )\n      // Allow new status changes when finished\n      .then(this.toggleProcessing)\n      .catch(e => {\n        // Ignore canceled requests\n        if (e.isCanceled) {\n          return;\n        }\n\n        // Even if it failed, allow new status changes\n        this.toggleProcessing();\n      });\n  };\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Toggle the custom time modal\n   */\n  toggleModal = () => {\n    this.setState({ customModalShown: !this.state.customModalShown });\n  };\n\n  /**\n   * Toggle the processing flag\n   */\n  toggleProcessing = () => {\n    this.setState(prevState => ({ processing: !prevState.processing }));\n  };\n\n  /**\n   * Submit the request to disable blocking for the custom time that the user\n   * input.\n   *\n   * @param e the submit event\n   */\n  submitCustom = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({ customModalShown: false });\n    this.setStatus(\n      \"disable\",\n      this.state.customTime * this.state.customMultiplier\n    );\n  };\n\n  /**\n   * Render the custom time modal\n   *\n   * @returns {*} the modal component tree\n   */\n  renderModal = () => {\n    const { t } = this.props;\n\n    return (\n      <Modal\n        isOpen={this.state.customModalShown}\n        toggle={this.toggleModal}\n        style={{ maxWidth: \"300px\" }}\n      >\n        <Form onSubmit={this.submitCustom}>\n          <ModalHeader toggle={this.toggleModal}>\n            {t(\"Custom time\")}\n          </ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input\n                type=\"number\"\n                value={this.state.customTime}\n                onChange={e =>\n                  this.setState({ customTime: parseInt(e.target.value) })\n                }\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Input\n                  type=\"select\"\n                  value={this.state.customMultiplier}\n                  onChange={e =>\n                    this.setState({\n                      customMultiplier: parseInt(e.target.value)\n                    })\n                  }\n                >\n                  <option value={1}>{t(\"Seconds\")}</option>\n                  <option value={60}>{t(\"Minutes\")}</option>\n                </Input>\n              </InputGroupAddon>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\">{t(\"Apply\")}</Button>\n            <Button onClick={this.toggleModal}>{t(\"Cancel\")}</Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  };\n\n  render() {\n    const { t, status } = this.props;\n\n    switch (status) {\n      case \"enabled\":\n        return (\n          <NavDropdown name={t(\"Disable\")} icon=\"fa fa-stop\" isOpen={false}>\n            <NavButton\n              name={t(\"Permanently\")}\n              icon=\"fa fa-stop\"\n              onClick={() => this.setStatus(\"disable\")}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 10 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 10)}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 30 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 30)}\n            />\n            <NavButton\n              name={t(\"For {{time}} minutes\", { time: 5 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 5 * 60)}\n            />\n            <NavButton\n              name={t(\"Custom time\")}\n              icon=\"fa fa-clock\"\n              onClick={this.toggleModal}\n            />\n            {this.renderModal()}\n          </NavDropdown>\n        );\n      case \"disabled\":\n        return (\n          <NavButton\n            name={t(\"Enable\")}\n            icon=\"fa fa-play\"\n            onClick={() => this.setStatus(\"enable\")}\n          />\n        );\n      case \"unknown\":\n      default:\n        return null;\n    }\n  }\n}\n\nexport const TranslatedEnableDisable = withTranslation(\"common\")(EnableDisable);\n\nexport const EnableDisableContainer = () => (\n  <StatusContext.Consumer>\n    {({ status, refresh }) => (\n      <TranslatedEnableDisable\n        status={status}\n        refresh={refresh}\n        onSetStatus={api.setStatus}\n      />\n    )}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preferences context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithAPIData } from \"../WithAPIData\";\nimport api from \"../../../util/api\";\nimport config from \"../../../config\";\n\n/**\n * The data shared by the preferences context\n */\nexport interface PreferencesContextType {\n  settings: ApiPreferences;\n  refresh: (data?: ApiPreferences) => void;\n}\n\n/**\n * The key used to store preferences in local storage\n */\nexport const WEB_PREFERENCES_STORAGE_KEY = \"webPreferences\";\n\n/**\n * The default preferences. These preferences are used until the API responds\n * with the real preferences, unless there are cached preferences available.\n */\nexport const defaultPreferences: ApiPreferences = {\n  layout: \"boxed\",\n  language: \"en\"\n};\n\n/**\n * Load the initial web interface preferences. Cached preferences from local\n * storage will be used if available, otherwise default preferences will be\n * used.\n */\nexport const loadInitialPreferences = (): ApiPreferences => {\n  const cachedPreferencesString = localStorage.getItem(\n    WEB_PREFERENCES_STORAGE_KEY\n  );\n\n  if (cachedPreferencesString === null) {\n    return defaultPreferences;\n  }\n\n  try {\n    return JSON.parse(cachedPreferencesString);\n  } catch (e) {\n    return defaultPreferences;\n  }\n};\n\n/**\n * Load the context which will be used initially, until the API responds with\n * the real preferences. These preferences are loaded from cache if available.\n */\nexport const loadInitialContext = (): PreferencesContextType => ({\n  settings: loadInitialPreferences(),\n  refresh: () => {}\n});\n\n/**\n * The React context which provides the preferences to consumers\n */\nexport const PreferencesContext = React.createContext(loadInitialContext());\n\n/**\n * Provide the web interface preferences via React context.\n * Sub-components can use the `PreferencesContext.Consumer` component to get\n * the preferences.\n */\nexport const PreferencesProvider = ({\n  children,\n  ...props\n}: {\n  children: ReactNode;\n}) => (\n  <WithAPIData\n    apiCall={\n      config.fakeAPI\n        ? () => Promise.resolve(loadInitialPreferences())\n        : api.getPreferences\n    }\n    renderInitial={() => (\n      <PreferencesContext.Provider value={loadInitialContext()} {...props}>\n        {children}\n      </PreferencesContext.Provider>\n    )}\n    renderOk={(settings, refresh) => {\n      // Update the cached settings\n      localStorage.setItem(\n        WEB_PREFERENCES_STORAGE_KEY,\n        JSON.stringify(settings)\n      );\n\n      return (\n        <PreferencesContext.Provider value={{ settings, refresh }} {...props}>\n          {children}\n        </PreferencesContext.Provider>\n      );\n    }}\n    renderErr={(_, refresh) => (\n      <PreferencesContext.Provider\n        // Reload the initial settings here, as the cache may have been updated\n        // between page load and when the error occurred\n        value={{ settings: loadInitialPreferences(), refresh }}\n        {...props}\n      >\n        {children}\n      </PreferencesContext.Provider>\n    )}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Web Interface preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport { Button, Col, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { PreferencesContext } from \"../common/context/PreferencesContext\";\nimport languages from \"../../languages.json\";\nimport config from \"../../config\";\n\nexport interface PreferenceSettingsProps {\n  settings: ApiPreferences;\n  refresh: (preferences?: ApiPreferences) => void;\n}\n\nexport interface PreferenceSettingsState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  translateMessage: boolean;\n  error: { key: string; data: any } | null;\n  settings: ApiPreferences;\n}\n\nclass PreferenceSettings extends Component<\n  PreferenceSettingsProps & WithTranslation,\n  PreferenceSettingsState\n> {\n  state: PreferenceSettingsState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    translateMessage: true,\n    error: null,\n    // Initial value is the current settings\n    settings: this.props.settings\n  };\n\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to preferences\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({\n      alertMessage: \"Processing...\",\n      error: null,\n      alertType: \"info\",\n      showAlert: true,\n      processing: true,\n      translateMessage: true\n    });\n\n    // Allow preference changes when using the fake API\n    const apiPromise = config.fakeAPI\n      ? Promise.resolve({ status: \"success\" } as ApiSuccessResponse)\n      : api.updatePreferences(this.state.settings);\n\n    this.updateHandler = makeCancelable(apiPromise);\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: \"Successfully saved preferences\",\n          alertType: \"success\",\n          showAlert: true,\n          processing: false,\n          translateMessage: true\n        });\n\n        // Update anyone using the preferences\n        this.props.refresh(this.state.settings);\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n        let apiError = null;\n        let translateMessage = true;\n\n        if (error instanceof Error) {\n          message = error.message;\n          translateMessage = false;\n        } else {\n          message = \"API Error: {{error}}\";\n          apiError = error;\n        }\n\n        this.setState({\n          alertMessage: message,\n          error: apiError,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false,\n          translateMessage\n        });\n      });\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  getAlertMessage = () => {\n    const { t } = this.props;\n\n    if (this.state.error) {\n      // Translate the API error\n      return t(this.state.alertMessage, {\n        error: t(this.state.error.key, this.state.error.data)\n      });\n    } else {\n      // Check if the message should be translated\n      if (this.state.translateMessage) {\n        return t(this.state.alertMessage);\n      } else {\n        return this.state.alertMessage;\n      }\n    }\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.getAlertMessage()}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Label for=\"layout\" sm={2}>\n            {t(\"Layout\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"layout\"\n              type=\"select\"\n              value={this.state.settings.layout}\n              onChange={this.onChange(\"layout\", \"value\")}\n            >\n              <option value=\"boxed\">{t(\"Boxed\")}</option>\n              <option value=\"traditional\">{t(\"Full\")}</option>\n            </Input>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"language\" sm={2}>\n            {t(\"Language\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"language\"\n              type=\"select\"\n              value={this.state.settings.language}\n              onChange={this.onChange(\"language\", \"value\")}\n            >\n              {languages.map((language: string) => (\n                <option key={language} value={language}>\n                  {language}\n                </option>\n              ))}\n            </Input>\n          </Col>\n        </FormGroup>\n        <Button type=\"submit\" disabled={this.state.processing}>\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst TranslatedPreferenceSettings = withTranslation([\n  \"common\",\n  \"settings\",\n  \"api-errors\",\n  \"preferences\"\n])(PreferenceSettings);\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings, refresh }) => (\n      <TranslatedPreferenceSettings settings={settings} refresh={refresh} />\n    )}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Navigation information\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport Dashboard from \"./views/Dashboard\";\nimport QueryLog from \"./components/log/QueryLog\";\nimport Whitelist from \"./views/Whitelist\";\nimport Blacklist from \"./views/Blacklist\";\nimport Regexlist from \"./views/Regexlist\";\nimport Versions from \"./views/Versions\";\nimport Networking from \"./views/Networking\";\nimport Login from \"./views/Login\";\nimport Logout from \"./views/Logout\";\nimport { EnableDisableContainer } from \"./components/common/EnableDisable\";\nimport Preferences from \"./views/Preferences\";\nimport i18next from \"i18next\";\nimport { ComponentType } from \"react\";\n\nexport const routes = (t: i18next.TFunction): { [key: string]: string } => ({\n  \"/dashboard\": t(\"Dashboard\"),\n  \"/query-log\": t(\"Query Log\"),\n  \"/whitelist\": t(\"Whitelist\"),\n  \"/blacklist/exact\": `${t(\"Blacklist\")} (${t(\"Exact\")})`,\n  \"/blacklist/regex\": `${t(\"Blacklist\")} (${t(\"Regex\")})`,\n  \"/settings/versions\": t(\"Versions\"),\n  \"/settings/networking\": t(\"Networking\"),\n  \"/settings/preferences\": t(\"Preferences\"),\n  \"/login\": t(\"Login\"),\n  \"/logout\": t(\"Logout\")\n});\n\nexport interface RouteItem {\n  name: string;\n  url: string;\n  component: ComponentType<any>;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n}\n\nexport interface RouteCustomItem {\n  customComponent: ComponentType<any>;\n  auth: boolean;\n  authStrict?: boolean;\n  fakeRoute: boolean;\n}\n\nexport interface RouteGroup {\n  name: string;\n  url: string;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n  children: Array<RouteData>;\n}\n\nexport type RouteData = RouteItem | RouteGroup | RouteCustomItem;\n\nexport const nav: Array<RouteData> = [\n  {\n    name: \"Dashboard\",\n    url: \"/dashboard\",\n    component: Dashboard,\n    icon: \"fa fa-tachometer-alt\",\n    auth: false\n  },\n  {\n    name: \"Query Log\",\n    url: \"/query-log\",\n    component: QueryLog,\n    icon: \"fa fa-database\",\n    auth: true\n  },\n  {\n    name: \"Whitelist\",\n    url: \"/whitelist\",\n    component: Whitelist,\n    icon: \"far fa-check-circle\",\n    auth: false\n  },\n  {\n    name: \"Blacklist\",\n    url: \"/blacklist\",\n    icon: \"fa fa-ban\",\n    auth: false,\n    children: [\n      {\n        name: \"Exact\",\n        url: \"/blacklist/exact\",\n        component: Blacklist,\n        icon: \"fa fa-ban\",\n        auth: false\n      },\n      {\n        name: \"Regex\",\n        url: \"/blacklist/regex\",\n        component: Regexlist,\n        icon: \"fa fa-ban\",\n        auth: false\n      }\n    ]\n  },\n  {\n    customComponent: EnableDisableContainer,\n    fakeRoute: true,\n    auth: true\n  },\n  {\n    name: \"Settings\",\n    url: \"/settings\",\n    icon: \"fa fa-wrench\",\n    auth: true,\n    children: [\n      {\n        name: \"Versions\",\n        url: \"/settings/versions\",\n        component: Versions,\n        icon: \"fa fa-download\",\n        auth: true\n      },\n      {\n        name: \"Networking\",\n        url: \"/settings/networking\",\n        component: Networking,\n        icon: \"fa fa-sitemap\",\n        auth: true\n      },\n      {\n        name: \"Preferences\",\n        url: \"/settings/preferences\",\n        component: Preferences,\n        icon: \"fa fa-sliders-h\",\n        auth: true\n      }\n    ]\n  },\n  {\n    name: \"Login\",\n    url: \"/login\",\n    component: Login,\n    icon: \"fa fa-user\",\n    auth: false,\n    authStrict: true\n  },\n  {\n    name: \"Logout\",\n    url: \"/logout\",\n    component: Logout,\n    icon: \"fa fa-user-times\",\n    auth: true,\n    authStrict: true\n  }\n];\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Dashboard page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport SummaryStats from \"../components/dashboard/SummaryStats\";\nimport QueriesGraph from \"../components/dashboard/QueriesGraph\";\nimport { ClientsGraphContainer } from \"../components/dashboard/ClientsGraph\";\nimport QueryTypesChart from \"../components/dashboard/QueryTypesChart\";\nimport UpstreamsChart from \"../components/dashboard/UpstreamsChart\";\nimport TopDomains from \"../components/dashboard/TopDomains\";\nimport TopBlockedDomains from \"../components/dashboard/TopBlockedDomains\";\nimport TopClients from \"../components/dashboard/TopClients\";\nimport api from \"../util/api\";\nimport { TimeRangeSelectorContainer } from \"../components/dashboard/TimeRangeSelector\";\nimport TopBlockedClients from \"../components/dashboard/TopBlockedClients\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    {api.loggedIn ? (\n      <div className=\"dashboard-time-selector\">\n        <TimeRangeSelectorContainer size=\"md\" />\n      </div>\n    ) : null}\n    <div className=\"row\">\n      <SummaryStats />\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <QueriesGraph />\n      </div>\n    </div>\n    {api.loggedIn ? (\n      <Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ClientsGraphContainer />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <QueryTypesChart />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <UpstreamsChart />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <TopDomains />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <TopBlockedDomains />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <TopClients />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <TopBlockedClients />\n          </div>\n        </div>\n      </Fragment>\n    ) : null}\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings - Software versions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport VersionInfo from \"../components/settings/VersionInfo\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    <div className=\"container-flex\">\n      <VersionInfo />\n    </div>\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Web Interface Preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport PreferenceSettings from \"../components/settings/PreferenceSettings\";\n\nexport default () => <PreferenceSettings />;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * React context objects\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { StatusProvider } from \"./StatusContext\";\nimport { PreferencesProvider } from \"./PreferencesContext\";\nimport { TimeRangeProvider } from \"./TimeRangeContext\";\n\n/**\n * Provide all of the necessary context needed at the root level to the\n * children. Currently, this includes status, preferences, and time range (for\n * the dashboard).\n */\nexport const GlobalContextProvider = ({\n  children\n}: {\n  children: ReactNode;\n}) => (\n  <StatusProvider>\n    <PreferencesProvider>\n      <TimeRangeProvider>{children}</TimeRangeProvider>\n    </PreferencesProvider>\n  </StatusProvider>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Apply the web interface layout preference\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { PreferencesContext } from \"./context/PreferencesContext\";\n\n/**\n * Update the web interface layout\n *\n * @param layout The layout to update to\n */\nconst applyLayout = (layout: WebLayout) => {\n  switch (layout) {\n    case \"boxed\":\n      document.body.classList.add(\"boxcontainer\");\n      document.body.classList.add(\"background-image\");\n      break;\n    case \"traditional\":\n      document.body.classList.remove(\"boxcontainer\");\n      document.body.classList.remove(\"background-image\");\n      break;\n  }\n};\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings }) => {\n      applyLayout(settings.layout);\n\n      // This is not a visual component, so nothing should be shown\n      return null;\n    }}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Apply the web interface language preference\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { PreferencesContext } from \"./context/PreferencesContext\";\nimport i18n from \"i18next\";\n\nconst applyLanguage = (language: string) => {\n  if (i18n.language === language) {\n    // Don't change the language if it's already correctly set\n    return;\n  }\n\n  // noinspection JSIgnoredPromiseFromCall\n  i18n.changeLanguage(language);\n};\n\nexport default () => (\n  <PreferencesContext.Consumer>\n    {({ settings }) => {\n      applyLanguage(settings.language);\n\n      return null;\n    }}\n  </PreferencesContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Main container of the web interface (performs main routing)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ComponentType, ReactNode, Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Header, { mobileSidebarHide } from \"../components/common/Header\";\nimport Sidebar from \"../components/common/Sidebar\";\nimport Footer from \"../components/common/Footer\";\nimport api from \"../util/api\";\nimport {\n  nav,\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../routes\";\nimport { GlobalContextProvider } from \"../components/common/context\";\nimport LayoutApplier from \"../components/common/LayoutApplier\";\nimport LanguageApplier from \"../components/common/LanguageApplier\";\n\nexport default (props: any) => (\n  <div className=\"app\">\n    <GlobalContextProvider>\n      <LayoutApplier />\n      <LanguageApplier />\n      <Header />\n      <div className=\"app-body\">\n        <Sidebar items={nav} {...props} />\n        <main className=\"main\" onClick={mobileSidebarHide}>\n          <div className=\"container-fluid\" style={{ marginTop: \"1.5rem\" }}>\n            <Suspense fallback={null}>\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/dashboard\" />\n                {nav.map(createRoute)}\n              </Switch>\n            </Suspense>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </GlobalContextProvider>\n  </div>\n);\n\n/**\n * Create a route from the route data.\n * If the route has children, an array of routes will be returned.\n *\n * @param routeData the route data (see routes.tsx)\n */\nconst createRoute = (routeData: RouteData): ReactNode => {\n  if ((routeData as RouteCustomItem).fakeRoute) {\n    return;\n  }\n\n  if ((routeData as RouteGroup).children) {\n    return (routeData as RouteGroup).children.map(createRoute);\n  }\n\n  let navItem: RouteItem = routeData as RouteItem;\n\n  return navItem.auth ? (\n    <AuthRoute\n      key={navItem.url}\n      path={navItem.url}\n      component={navItem.component}\n    />\n  ) : (\n    <Route key={navItem.url} path={navItem.url} component={navItem.component} />\n  );\n};\n\ninterface AuthRouteProps {\n  /**\n   * The component that the authenticated user will see\n   */\n  component: ComponentType<any>;\n\n  /**\n   * The route path\n   */\n  path: string;\n}\n\n/**\n * Create a route which requires authentication.\n * If the user is unauthenticated, they will be redirected to the login page.\n * If the user logs in at the redirected login page, they will go to their original destination.\n *\n * @param authProps The component and path to use for the route\n * @returns Route\n */\nconst AuthRoute = (authProps: AuthRouteProps) => {\n  // Typescript only likes capitalized components in its TSX\n  const Component = authProps.component;\n\n  return (\n    <Route\n      path={authProps.path}\n      render={props =>\n        api.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Provide the base path for relative paths\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * Get the base path of the web interface. The API will inject a base element\n * for this purpose, but if the web interface is not hosted by the API, it will\n * fall back to the public URL set by Create React App.\n *\n * @returns The base path to use\n */\nexport const getBasePath = (): string => {\n  const baseElement = document.getElementsByTagName(\"base\")[0];\n\n  if (baseElement) {\n    return new URL(baseElement.href).pathname;\n  } else {\n    return process.env.PUBLIC_URL;\n  }\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Internationalization setup\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport i18n from \"i18next\";\nimport XHR from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport config from \"../config\";\nimport languages from \"../languages.json\";\n\n/**\n * Set up the internationalization service\n *\n * @param ajax An optional ajax function to use when fetching translations\n */\nexport function setupI18n(ajax?: any) {\n  return i18n\n    .use(XHR)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      fallbackLng: \"en\",\n      whitelist: languages,\n      ns: [\"common\"],\n      defaultNS: \"common\",\n      fallbackNS: [\n        \"dashboard\",\n        \"footer\",\n        \"lists\",\n        \"location\",\n        \"login\",\n        \"query-log\",\n        \"settings\",\n        \"api-errors\",\n        \"preferences\",\n        \"time-ranges\"\n      ],\n      nsSeparator: false,\n      keySeparator: false,\n      returnEmptyString: false,\n      debug: config.developmentMode,\n      interpolation: {\n        // Handled by React\n        escapeValue: false\n      },\n      backend: {\n        loadPath: process.env.PUBLIC_URL + \"/i18n/{{lng}}/{{ns}}.json\",\n        ajax\n      }\n    });\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Starting point for React\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"ionicons/dist/css/ionicons.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"simple-line-icons/css/simple-line-icons.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./scss/style.css\";\nimport Full from \"./containers/Full\";\nimport api from \"./util/api\";\nimport { setupI18n } from \"./util/i18n\";\nimport { getBasePath } from \"./util/basePath\";\n\n// Before rendering anything, check if there is a session cookie.\n// Note: the user could have an old session, so the first API call\n// will set loggedIn to false if necessary\napi.loggedIn = document.cookie.includes(\"user_id=\");\n\nsetupI18n();\n\nReactDOM.render(\n  <BrowserRouter basename={getBasePath()}>\n    <Switch>\n      <Route path=\"/\" name=\"Home\" component={Full} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.00d87c43.svg\";"],"sourceRoot":""}