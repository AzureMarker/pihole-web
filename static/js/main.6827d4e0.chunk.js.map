{"version":3,"sources":["img/logo.svg","config.tsx","components/common/context/TimeRangeContext.tsx","util/dateRanges.tsx","components/dashboard/TimeRangeSelector.tsx","util/http.tsx","config.development.tsx","config.production.tsx","util/api.tsx","components/common/Header.tsx","util/CancelablePromise.tsx","util/result.ts","components/common/WithAPIData.tsx","components/common/context/StatusContext.tsx","components/common/StatusBadge.tsx","components/common/NavDropdown.tsx","components/common/Sidebar.tsx","components/common/FooterUpdateStatus.tsx","components/common/Footer.tsx","components/dashboard/SummaryStats.tsx","util/graphUtils.tsx","components/dashboard/QueriesGraph.tsx","components/dashboard/ChartTooltip.tsx","components/dashboard/ClientsGraph.tsx","components/dashboard/GenericDoughnutChart.tsx","components/dashboard/QueryTypesChart.tsx","components/dashboard/UpstreamsChart.tsx","components/dashboard/TopTable.tsx","components/dashboard/TopDomains.tsx","components/dashboard/TopBlockedDomains.tsx","components/dashboard/TopClients.tsx","components/dashboard/TopBlockedClients.tsx","components/log/QueryLog.tsx","components/list/DomainInput.tsx","components/common/Alert.tsx","components/list/DomainList.tsx","components/list/ListPage.tsx","util/validate.tsx","views/ExactWhitelist.tsx","views/ExactBlacklist.tsx","views/RegexWhitelist.tsx","views/RegexBlacklist.tsx","components/settings/VersionCard.tsx","components/settings/VersionInfo.tsx","components/settings/DHCPInfo.tsx","components/settings/DnsListItem.tsx","components/settings/preconfiguredUpstreams.tsx","components/settings/DnsListNewItem.tsx","components/settings/DnsList.tsx","components/settings/ConditionalForwardingSettings.tsx","components/settings/DnsOptionSettings.tsx","components/settings/DNSInfo.tsx","components/settings/CacheInfo.tsx","components/settings/NetworkInfo.tsx","components/settings/FTLInfo.tsx","views/Networking.tsx","components/login/ForgotPassword.tsx","views/Login.tsx","views/Logout.tsx","components/common/NavButton.tsx","components/common/EnableDisable.tsx","redux/actions/index.tsx","components/settings/PreferenceSettings.tsx","routes.tsx","views/Dashboard.tsx","views/Versions.tsx","views/Preferences.tsx","components/common/context/index.tsx","containers/Full.tsx","util/basePath.ts","redux/state/preferences.tsx","redux/state/index.tsx","redux/reducers/index.tsx","redux/sagas/applyLanguage.tsx","redux/sagas/applyLayout.tsx","redux/sagas/preferences.tsx","redux/sagas/autoLogin.tsx","redux/sagas/index.tsx","redux/store.tsx","util/i18n.tsx","index.tsx"],"names":["module","exports","config","initialContext","range","update","TimeRangeContext","React","createContext","TimeRangeProvider","children","useState","setRange","Provider","value","now","moment","oneDayAgo","subtract","startOfDay","startOf","startOfYesterday","endOfYesterday","endOf","lastWeek","lastMonth","startOfMonth","startOfLastMonth","endOfLastMonth","startOfYear","epoch","dateRanges","t","TranslatedTimeRangeSelector","withTranslation","props","onSelect","translatedDateRanges","last24Hours","today","label","showLabel","name","from","toDate","toLocaleString","until","renderLabel","size","startDate","endDate","maxDate","onApply","event","picker","isSame","chosenLabel","timePicker","showDropdowns","ranges","Button","color","className","TimeRangeSelectorContainer","Consumer","context","fallback","checkIfLoggedOut","response","api","loggedIn","status","document","cookie","window","location","reload","Promise","reject","isCanceled","resolve","convertJSON","data","Error","json","checkForErrors","error","paramsToString","params","Object","keys","map","key","join","timeRangeToParams","unix","process","REACT_APP_CUSTOM_API_URL","developmentMode","fakeAPI","apiPath","http","authenticate","get","headers","checkAuthStatus","logout","delete","getSummary","getSummaryDb","getHistoryGraph","getHistoryGraphDb","interval","getClientsGraph","getClientsGraphDb","getQueryTypes","getQueryTypesDb","getUpstreams","getUpstreamsDb","getTopDomains","getTopDomainsDb","getTopBlockedDomains","url","getTopBlockedDomainsDb","getTopClients","getTopClientsDb","getTopBlockedClients","getTopBlockedClientsDb","getHistory","getExactWhitelist","getExactBlacklist","getRegexWhitelist","getRegexBlacklist","addExactWhitelist","domain","post","addExactBlacklist","addRegexWhitelist","addRegexBlacklist","removeExactWhitelist","removeExactBlacklist","removeRegexWhitelist","encodeURIComponent","removeRegexBlacklist","getStatus","setStatus","action","time","getNetworkInfo","getVersion","getFTLdb","getCacheInfo","getDNSInfo","getDHCPInfo","updateDHCPInfo","settings","put","updateDNSInfo","getPreferences","updatePreferences","handleResponse","then","options","fetch","urlFor","method","credentials","credentialType","body","JSON","stringify","Headers","endpoint","sidebarMinimize","e","preventDefault","classList","toggle","mobileSidebarToggle","mobileSidebarHide","remove","onClick","type","to","style","lineHeight","pathname","endsWith","makeCancelable","promise","hasCanceled","repeatId","handle","val","isError","setTimeout","repeat","cancel","clearTimeout","ignoreCancel","err","Ok","this","Err","WithAPIData","state","apiResult","dataHandle","loadData","cancelOptions","repeatOptions","undefined","setState","apiCall","catch","prevProps","prevState","snapshot","flushOnUpdate","isOk","renderOk","unwrap","renderErr","unwrapErr","renderInitial","Component","defaultProps","refresh","StatusContext","StatusProvider","_","StatusBadge","isEnabled","TranslatedStatusBadge","icon","isOpen","handleDropdownClick","target","parentElement","PiholeNavItem","item","NavItem","activeClassName","PiholeNavDropdown","NavDropdown","startsWith","items","NavList","index","auth","authStrict","customComponent","TranslatedSidebar","Nav","textTransform","src","logo","height","alt","fontSize","FooterUpdateStatus","updateAvailable","TranslatedFooter","SummaryStats","totalQueries","count","uniqueClients","blockedQueries","percentBlocked","gravityDomains","errorProps","initialProps","TranslatedSummaryStats","sum_queries","blocked_queries","percent_blocked","toFixed","gravity_size","total_clients","transformData","padNumber","num","substr","getIntervalForRange","Math","ceil","QueriesGraph","labels","datasets","domains_over_time","fill","backgroundColor","borderColor","pointBorderColor","pointRadius","pointHoverRadius","pointHitRadius","cubicInterpolationMode","blocked_over_time","tooltips","enabled","mode","callbacks","title","tooltipItem","xLabel","match","hour","parseInt","minute","tooltipItems","datasetIndex","percentage","total","blocked","yLabel","legend","display","scales","xAxes","unit","timeUnit","displayFormats","tooltipFormat","yAxes","ticks","beginAtZero","maintainAspectRatio","rangeName","width","loading","background","position","top","left","loadingProps","TranslatedQueriesGraph","diff","slice","step","Date","timestamp","total_queries","ChartTooltip","tooltip","lastTime","handler","custom","opacity","chart","current","chartInstance","canvas","getBoundingClientRect","caretX","offsetWidth","caretY","scrollY","fontFamily","_bodyFontFamily","bodyFontSize","fontStyle","_bodyFontStyle","padding","yPadding","xPadding","lines","i","colors","labelColors","sort","a","b","split","localeCompare","borderWidth","ClientsGraph","graphRef","createRef","fromTime","clone","toTime","add","format","stacked","ref","ReactDOM","createPortal","TranslatedClientsGraph","ClientsGraphContainer","apiClient","overTime","over_time","toISOString","clients","client","push","length","ip","String","random","toString","padStart","entries","GenericDoughnutChart","chartRef","handleClick","call","legendItems","forceUpdate","dataset","meta","getDatasetMeta","hidden","apiHandler","apiData","usedColors","entry","percent","QueryTypesChart","reduce","previous","UpstreamsChart","upstreams","upstream","TopTable","generateCard","isEmpty","emptyMessage","overflowX","header","generateRows","initialData","topDomains","top_domains","TopDomains","totalBlocked","topBlocked","TopBlockedDomains","topClients","top_clients","TopClients","TopBlockedClients","getDefaultRange","QueryLog","updateHandler","history","cursor","atEnd","filtersChanged","filters","getRowProps","rowInfo","row","includes","parseFilters","tableFilters","filter","id","query_type","dnssec","reply","fetchQueries","page","pageSize","concat","columns","showPaginationTop","sortable","filterable","onFetchData","isEqual","filtered","debounce","onFilteredChange","defaultFiltered","getTrProps","ofText","PadRowComponent","dnssecColor","replyTypes","queryTypes","selectionFilter","extras","onChange","extra","Header","accessor","r","Cell","date","month","toLocaleDateString","i18n","language","dayOfMonth","getDate","getHours","getMinutes","second","getSeconds","filterMethod","Filter","minWidth","response_time","DomainInput","isValid","handleChange","handleSubmit","onEnter","onValidationError","placeholder","onRefresh","onSubmit","disabled","DomainInputContainer","Alert","dismissClass","dismissible","message","domains","onRemove","marginTop","ListPage","messageType","addHandler","removeHandler","refreshHandler","onAlreadyAdded","prevDomains","onAdd","onAdded","onAddFailed","onAdding","onRemoved","onRemoveFailed","handleValidationError","validationErrorMsg","note","isValidHostname","hostname","segments","some","segment","isPositiveNumber","test","input","isValidRegex","regex","RegExp","isValidIpv4","address","every","VersionCard","collapsed","branch","tag","Collapse","hash","VersionInfo","core","ftl","web","TranslatedVersionInfo","DHCPInfo","alertMessage","alertType","showAlert","processing","active","ip_start","ip_end","router_ip","lease_time","ipv6_support","rapid_commit","loadHandler","loadDHCPInfo","res","attr","oldState","saveSettings","isSettingValid","validator","hideAlert","isIpStartValid","isIpEndValid","isRouterIpValid","isLeaseTimeValid","isDomainValid","alert","Form","FormGroup","check","Label","Input","checked","for","sm","Col","invalid","InputGroup","InputGroupAddon","addonType","DnsListItem","ListGroupItem","preconfiguredUpstreamOptions","primaryIpv4","secondaryIpv4","primaryIpv6","secondaryIpv6","flatMap","parseUpstream","order","parsedUpstreams","DnsListNewItem","selected","typeahead","getAddress","isAddressValid","onInputChange","emptyLabel","positionFixed","getInstance","clear","isValidIpv4OptionalPort","isValidIpv6OptionalPort","DnsList","ListGroup","overflowY","maxHeight","ConditionalForwardingSettings","onUpdate","isCidrValid","cidr","isNaN","DnsOptionSettings","listeningType","fqdnRequired","bogusPriv","DNSInfo","upstreamDns","conditionalForwarding","loadDNSInfo","savedDomain","conditional_forwarding","upstream_dns","fqdn_required","bogus_priv","listening_type","handleUpstreamAdd","handleUpstreamRemove","handleConditionalForwardingUpdate","handleDnsOptionsUpdate","isCFSettingValid","isValidIpv6","isValidIpv4Cidr","cidrNum","isValidIpv6Cidr","CacheInfo","cache_size","cache_evicted","cache_inserted","loadCacheInfo","plaintext","readOnly","NetworkInfo","interface","ipv4Address","ipv6Address","loadNetworkInfo","ipv4_address","ipv6_address","FTLInfo","fileSize","queries","sqliteVersion","loadFTLInfo","filesize","sqlite_version","Networking","activeTab","setTab","tab","NavLink","tabContent","component","TabPane","tabId","tabs","TabContent","ForgotPassword","isExpanded","Login","password","cookiesEnabled","handlePasswordChange","hashedPassword","sha","digest","locationState","navigator","cookieEnabled","routes","host","autoFocus","Logout","NavButton","href","EnableDisable","customModalShown","customTime","customMultiplier","getStatusFromAction","toggleProcessing","onSetStatus","toggleModal","submitCustom","renderModal","Modal","maxWidth","ModalHeader","ModalBody","ModalFooter","TranslatedEnableDisable","preferencesRequest","createAction","preferencesSuccess","PreferenceSettings","translateMessage","apiPromise","apiError","getAlertMessage","layout","languages","code","TranslatedPreferenceSettings","mapActionsToProps","connect","preferences","nav","ExactWhitelist","RegexWhitelist","ExactBlacklist","RegexBlacklist","fakeRoute","GlobalContextProvider","createRoute","routeData","navItem","path","AuthRoute","authProps","render","defaultPreferences","initialState","cachedPreferencesString","localStorage","getItem","parse","loadInitialPreferences","createReducer","payload","applyLanguage","applyLayout","watchPreferences","fetchPreferences","cachePreferences","takeEvery","select","autoLogin","rootSaga","spawn","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","thunk","store","configureStore","reducer","runSaga","run","ajax","use","XHR","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","lang","ns","defaultNS","fallbackNS","nsSeparator","keySeparator","returnEmptyString","debug","interpolation","escapeValue","backend","loadPath","basename","baseElement","getElementsByTagName","URL","getBasePath","exact","getElementById"],"mappings":"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","file":"static/js/main.6827d4e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.efd0af1e.svg\";","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Config handler\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport developmentConfig from \"./config.development\";\nimport productionConfig from \"./config.production\";\n\nexport interface Config {\n  developmentMode: boolean;\n  fakeAPI: boolean;\n  apiPath: string;\n}\n\nlet config: Config;\n\nif (process.env.NODE_ENV === \"development\") {\n  config = developmentConfig;\n} else {\n  config = productionConfig;\n}\n\nif (process.env.REACT_APP_FAKE_API) {\n  config.fakeAPI = true;\n  config.apiPath = process.env.PUBLIC_URL + \"/fakeAPI\";\n}\n\nexport default config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Context used for sharing a time range\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Moment } from \"moment\";\nimport React, { ReactNode, useState } from \"react\";\n\n/**\n * Represents a range of time\n */\nexport interface TimeRange {\n  from: Moment;\n  until: Moment;\n  name: string;\n}\n\n/**\n * The type of the data shared by the time range context\n */\nexport interface TimeRangeContextType {\n  range: TimeRange | null;\n\n  /**\n   * Update the time range\n   *\n   * @param range The new time range\n   */\n  update: (range: TimeRange | null) => void;\n}\n\n/**\n * The initial data shared by the time range context\n */\nconst initialContext: TimeRangeContextType = {\n  range: null,\n  update: () => {}\n};\n\n/**\n * The React context which provides the time range to consumers\n */\nexport const TimeRangeContext = React.createContext(initialContext);\n\n/**\n * Provide the time range via React context.\n * Sub-components can use the `TimeRangeContext.Consumer` component to get the\n * time range.\n */\nexport const TimeRangeProvider = ({ children }: { children: ReactNode }) => {\n  const [range, setRange] = useState(initialContext.range);\n\n  return (\n    <TimeRangeContext.Provider value={{ range, update: setRange }}>\n      {children}\n    </TimeRangeContext.Provider>\n  );\n};\n","import moment, { Moment } from \"moment\";\nimport { TFunction } from \"i18next\";\n\nconst now = moment();\nconst oneDayAgo = moment().subtract(1, \"day\");\nconst startOfDay = moment().startOf(\"day\");\nconst startOfYesterday = moment().subtract(1, \"days\").startOf(\"day\");\nconst endOfYesterday = moment().subtract(1, \"days\").endOf(\"day\");\nconst lastWeek = moment().subtract(7, \"days\");\nconst lastMonth = moment().subtract(30, \"days\");\nconst startOfMonth = moment().startOf(\"month\");\nconst startOfLastMonth = moment().subtract(1, \"month\").startOf(\"month\");\nconst endOfLastMonth = moment().subtract(1, \"month\").endOf(\"month\");\nconst startOfYear = moment().startOf(\"year\");\nconst epoch = moment(0);\n\n/**\n * Preconfigured date ranges for use in a date range picker. The keys are\n * translated, so this object must be computed using the translation function.\n *\n * @param t The translation function\n */\nexport const dateRanges: (\n  t: TFunction\n) => { [name: string]: [Moment, Moment] } = t => ({\n  [t(\"Last 24 Hours\")]: [oneDayAgo, now],\n  [t(\"Today\")]: [startOfDay, now],\n  [t(\"Yesterday\")]: [startOfYesterday, endOfYesterday],\n  [t(\"Last 7 Days\")]: [lastWeek, now],\n  [t(\"Last 30 Days\")]: [lastMonth, now],\n  [t(\"This Month\")]: [startOfMonth, now],\n  [t(\"Last Month\")]: [startOfLastMonth, endOfLastMonth],\n  [t(\"This Year\")]: [startOfYear, now],\n  [t(\"All Time\")]: [epoch, now]\n});\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Selector For Time Range Context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment, Suspense } from \"react\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Button } from \"reactstrap\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { dateRanges } from \"../../util/dateRanges\";\n\nexport interface TimeRangeSelectorProps {\n  /**\n   * The range to show\n   */\n  range: TimeRange | null;\n\n  /**\n   * Called when a new range is selected\n   *\n   * @param range The new range, or null if \"Last 24 Hours\" is selected\n   */\n  onSelect: (range: TimeRange | null) => void;\n\n  /**\n   * If the chosen label should be shown outside of the selector\n   */\n  showLabel: boolean;\n\n  /**\n   * The button size to use\n   */\n  size?: string;\n}\n\n/**\n * Get the label to be shown next to the selector button\n *\n * @param props The selector props\n */\nconst renderLabel = (\n  props: TimeRangeSelectorProps & WithTranslation\n): string | null => {\n  const { t } = props;\n\n  if (!props.showLabel) {\n    return null;\n  }\n\n  if (!props.range) {\n    return t<string>(\"Last 24 Hours\");\n  }\n\n  if (props.range.name === \"Custom Range\") {\n    return (\n      props.range.from.toDate().toLocaleString() +\n      \" - \" +\n      props.range.until.toDate().toLocaleString()\n    );\n  }\n\n  return props.range.name;\n};\n\n/**\n * A time range selector which shows the selected time range (label if\n * predefined, or time range if custom)\n */\nexport const TimeRangeSelector = (\n  props: TimeRangeSelectorProps & WithTranslation\n) => {\n  const { range, onSelect, t } = props;\n\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n  const today = t(\"Today\");\n  const label = renderLabel(props);\n  const size = props.size ? props.size : \"sm\";\n\n  return (\n    <DateRangePicker\n      startDate={range ? range.from : translatedDateRanges[last24Hours][0]}\n      endDate={range ? range.until : translatedDateRanges[last24Hours][1]}\n      maxDate={translatedDateRanges[today][1]}\n      onApply={(event, picker) => {\n        if (\n          picker.startDate.isSame(translatedDateRanges[last24Hours][0]) &&\n          picker.endDate.isSame(translatedDateRanges[last24Hours][1])\n        ) {\n          // Set to null so we fetch data from FTL instead of the database\n          onSelect(null);\n        } else {\n          // Set the time range so we fetch from the database\n          onSelect({\n            from: picker.startDate,\n            until: picker.endDate,\n            name: picker.chosenLabel\n          });\n        }\n      }}\n      timePicker\n      showDropdowns\n      ranges={translatedDateRanges}\n    >\n      <Button color=\"light\" size={size}>\n        <i className=\"far fa-clock fa-lg\" />\n        {label ? (\n          <Fragment>\n            &nbsp; &nbsp;\n            {label}\n          </Fragment>\n        ) : null}\n      </Button>\n    </DateRangePicker>\n  );\n};\n\nexport const TranslatedTimeRangeSelector = withTranslation(\"time-ranges\")(\n  TimeRangeSelector\n);\n\nexport const TimeRangeSelectorContainer = ({ size }: { size?: string }) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <Suspense fallback={null}>\n        <TranslatedTimeRangeSelector\n          range={context.range}\n          onSelect={context.update}\n          showLabel\n          size={size}\n        />\n      </Suspense>\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Basic HTTP functions for accessing API endpoints\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport api from \"./api\";\nimport { Config } from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\nimport { CanceledError } from \"./CancelablePromise\";\n\n/**\n * A class which provides HTTP functions. Each function parses the response and\n * checks for errors\n */\nexport default class HttpClient {\n  constructor(public config: Config) {}\n\n  /**\n   * Check if the user is logged out, convert to JSON, and check for API errors\n   *\n   * @param response The HTTP response\n   */\n  handleResponse = <T extends any>(response: Response): Promise<T> => {\n    // @ts-ignore\n    return checkIfLoggedOut(response).then(convertJSON).then(checkForErrors);\n  };\n\n  /**\n   * Perform a GET request\n   *\n   * @param url The URL to access\n   * @param options Optional fetch configuration\n   * @returns A promise with the data or error returned\n   */\n  get = <T extends any>(url: string, options: RequestInit = {}): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"GET\",\n      credentials: this.credentialType(),\n      ...options\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a POST request\n   *\n   * @param url The URL to access\n   * @param data The data to send\n   * @returns A promise with the data or error returned\n   */\n  post = <T extends any>(url: string, data: object): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a PUT request\n   *\n   * @param url The URL to access\n   * @param data The data to send\n   * @returns A promise with the data or error returned\n   */\n  put = <T extends any>(url: string, data: object): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Perform a DELETE request\n   *\n   * @param url The URL to access\n   * @returns A promise with the data or error returned\n   */\n  delete = <T extends any>(url: string): Promise<T> => {\n    // @ts-ignore\n    return fetch(this.urlFor(url), {\n      method: \"DELETE\",\n      credentials: this.credentialType()\n    }).then(this.handleResponse);\n  };\n\n  /**\n   * Get the URL for an endpoint\n   *\n   * @param endpoint The endpoint\n   * @returns The URL for the endpoint\n   */\n  urlFor = (endpoint: string): string => {\n    return this.config.apiPath + \"/\" + endpoint;\n  };\n\n  /**\n   * Get the credential type for requests\n   *\n   * @returns The credential type\n   */\n  credentialType = (): RequestCredentials => {\n    // Development API requests may use a different origin (pi.hole) since it is\n    // running off of the developer's machine. Therefore, allow credentials to\n    // be used across origins when in development mode.\n    return this.config.developmentMode ? \"include\" : \"same-origin\";\n  };\n}\n\n/**\n * If the user is logged in, check if the user's session has lapsed.\n * If so, log them out and refresh the page.\n *\n * @param response The Response from fetch\n * @return If logged in, the response, otherwise a canceled promise\n */\nexport const checkIfLoggedOut = (response: Response): Promise<Response> => {\n  if (api.loggedIn && response.status === 401) {\n    // Clear the user's old session and refresh the page\n    document.cookie =\n      \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    window.location.reload();\n    return Promise.reject({ isCanceled: true });\n  }\n\n  return Promise.resolve(response);\n};\n\n/**\n * If the input is a Response, return a promise for parsing the JSON.\n * If the input is an Error, return a rejecting promise with error.\n * If the request was canceled, return a rejecting promise with cancel object.\n *\n * @param data a Response or Error\n * @returns {*} a promise with the parsed JSON, or the error\n */\nexport const convertJSON = <T extends any>(\n  data: Response | Error | CanceledError\n): Promise<T> => {\n  if ((data as CanceledError).isCanceled || data instanceof Error) {\n    return Promise.reject(data);\n  }\n\n  return (data as Response).json();\n};\n\n/**\n * Check for an error returned by the API\n *\n * @param data the parsed JSON body of the response\n * @returns A resolving promise with the data if no error, otherwise a\n * rejecting promise with the error\n */\nexport const checkForErrors = <T extends any>(data: T): Promise<T> => {\n  if (data.error) {\n    return Promise.reject(data.error);\n  }\n\n  return Promise.resolve(data);\n};\n\n/**\n * Convert an object into GET parameters. The object must be flat (only\n * key-value pairs).\n *\n * @param params The parameters object\n * @returns The parameters converted into GET parameter form\n */\nexport const paramsToString = (params: {\n  [key: string]: string | number;\n}): string => {\n  return Object.keys(params)\n    .map(key => key + \"=\" + params[key])\n    .join(\"&\");\n};\n\n/**\n * Convert a time range into GET parameters\n *\n * @param range The time range to convert\n * @return The time range as GET parameters\n */\nexport const timeRangeToParams = (range: TimeRange) => {\n  return paramsToString({\n    from: range.from.unix(),\n    until: range.until.unix()\n  });\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Development config\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Config } from \"./config\";\n\nconst apiUrlBase =\n  process.env.REACT_APP_CUSTOM_API_URL || process.env.PUBLIC_URL;\n\nexport default {\n  developmentMode: true,\n  fakeAPI: false,\n  apiPath: apiUrlBase + \"/api\"\n} as Config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Production config\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Config } from \"./config\";\n\nexport default {\n  developmentMode: false,\n  fakeAPI: false,\n  apiPath: process.env.PUBLIC_URL + \"/api\"\n} as Config;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * API functions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport HttpClient, { paramsToString, timeRangeToParams } from \"./http\";\nimport config from \"../config\";\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\nexport class ApiClient {\n  public loggedIn = false;\n\n  constructor(private http: HttpClient) {}\n\n  authenticate = (key: string): Promise<ApiSuccessResponse> => {\n    return this.http.get(\"auth\", {\n      headers: { \"X-Pi-hole-Authenticate\": key }\n    });\n  };\n\n  checkAuthStatus = (): Promise<ApiSuccessResponse> => {\n    return this.http.get(\"auth\");\n  };\n\n  logout = (): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"auth\");\n  };\n\n  getSummary = (): Promise<ApiSummary> => {\n    return this.http.get(\"stats/summary\");\n  };\n\n  getSummaryDb = (range: TimeRange): Promise<ApiSummary> => {\n    return this.http.get(\"stats/database/summary?\" + timeRangeToParams(range));\n  };\n\n  getHistoryGraph = (): Promise<ApiHistoryGraphItem[]> => {\n    return this.http.get(\"stats/overTime/history\");\n  };\n\n  getHistoryGraphDb = (\n    range: TimeRange,\n    interval: number\n  ): Promise<ApiHistoryGraphItem[]> => {\n    return this.http.get(\n      \"stats/database/overTime/history?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  };\n\n  getClientsGraph = (): Promise<ApiClientsGraph> => {\n    return this.http.get(\"stats/overTime/clients\");\n  };\n\n  getClientsGraphDb = (\n    range: TimeRange,\n    interval: number\n  ): Promise<ApiClientsGraph> => {\n    return this.http.get(\n      \"stats/database/overTime/clients?interval=\" +\n        interval +\n        \"&\" +\n        timeRangeToParams(range)\n    );\n  };\n\n  getQueryTypes = (): Promise<ApiQueryType[]> => {\n    return this.http.get(\"stats/query_types\");\n  };\n\n  getQueryTypesDb = (range: TimeRange): Promise<ApiQueryType[]> => {\n    return this.http.get(\n      \"stats/database/query_types?\" + timeRangeToParams(range)\n    );\n  };\n\n  getUpstreams = (): Promise<ApiUpstreams> => {\n    return this.http.get(\"stats/upstreams\");\n  };\n\n  getUpstreamsDb = (range: TimeRange): Promise<ApiUpstreams> => {\n    return this.http.get(\n      \"stats/database/upstreams?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopDomains = (): Promise<ApiTopDomains> => {\n    return this.http.get(\"stats/top_domains\");\n  };\n\n  getTopDomainsDb = (range: TimeRange): Promise<ApiTopDomains> => {\n    return this.http.get(\n      \"stats/database/top_domains?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopBlockedDomains = (): Promise<ApiTopBlockedDomains> => {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/top_blocked\"\n      : \"stats/top_domains?blocked=true\";\n\n    return this.http.get(url);\n  };\n\n  getTopBlockedDomainsDb = (\n    range: TimeRange\n  ): Promise<ApiTopBlockedDomains> => {\n    // The API uses a GET parameter to differentiate top domains from top\n    // blocked, but the fake API is not able to handle GET parameters right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/database/top_blocked?\"\n      : \"stats/database/top_domains?blocked=true&\";\n\n    return this.http.get(url + timeRangeToParams(range));\n  };\n\n  getTopClients = (): Promise<ApiTopClients> => {\n    return this.http.get(\"stats/top_clients\");\n  };\n\n  getTopClientsDb = (range: TimeRange): Promise<ApiTopClients> => {\n    return this.http.get(\n      \"stats/database/top_clients?\" + timeRangeToParams(range)\n    );\n  };\n\n  getTopBlockedClients = (): Promise<ApiTopBlockedClients> => {\n    // The API uses a GET parameter to differentiate top clients from top\n    // blocked clients, but the fake API is not able to handle GET parameters\n    // right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/top_blocked_clients\"\n      : \"stats/top_clients?blocked=true\";\n\n    return this.http.get(url);\n  };\n\n  getTopBlockedClientsDb = (\n    range: TimeRange\n  ): Promise<ApiTopBlockedClients> => {\n    // The API uses a GET parameter to differentiate top clients from top\n    // blocked clients, but the fake API is not able to handle GET parameters\n    // right now.\n    const url = this.http.config.fakeAPI\n      ? \"stats/database/top_blocked_clients?\"\n      : \"stats/database/top_clients?blocked=true&\";\n\n    return this.http.get(url + timeRangeToParams(range));\n  };\n\n  getHistory = (params: any): Promise<ApiHistoryResponse> => {\n    return this.http.get(\"stats/history?\" + paramsToString(params));\n  };\n\n  getExactWhitelist = (): Promise<string[]> => {\n    return this.http.get(\"dns/whitelist/exact\");\n  };\n\n  getExactBlacklist = (): Promise<string[]> => {\n    return this.http.get(\"dns/blacklist/exact\");\n  };\n\n  getRegexWhitelist = (): Promise<string[]> => {\n    return this.http.get(\"dns/whitelist/regex\");\n  };\n\n  getRegexBlacklist = (): Promise<string[]> => {\n    return this.http.get(\"dns/blacklist/regex\");\n  };\n\n  addExactWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/whitelist/exact\", { domain: domain });\n  };\n\n  addExactBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/blacklist/exact\", { domain: domain });\n  };\n\n  addRegexWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/whitelist/regex\", { domain: domain });\n  };\n\n  addRegexBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/blacklist/regex\", { domain: domain });\n  };\n\n  removeExactWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"dns/whitelist/exact/\" + domain);\n  };\n\n  removeExactBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\"dns/blacklist/exact/\" + domain);\n  };\n\n  removeRegexWhitelist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\n      \"dns/whitelist/regex/\" + encodeURIComponent(domain)\n    );\n  };\n\n  removeRegexBlacklist = (domain: string): Promise<ApiSuccessResponse> => {\n    return this.http.delete(\n      \"dns/blacklist/regex/\" + encodeURIComponent(domain)\n    );\n  };\n\n  getStatus = (): Promise<ApiStatus> => {\n    return this.http.get(\"dns/status\");\n  };\n\n  setStatus = (\n    action: StatusAction,\n    time?: number\n  ): Promise<ApiSuccessResponse> => {\n    return this.http.post(\"dns/status\", {\n      action,\n      time\n    });\n  };\n\n  getNetworkInfo = (): Promise<ApiNetworkSettings> => {\n    return this.http.get(\"settings/network\");\n  };\n\n  getVersion = (): Promise<ApiVersions> => {\n    return this.http.get(\"version\");\n  };\n\n  getFTLdb = (): Promise<ApiFtlDbResponse> => {\n    return this.http.get(\"settings/ftldb\");\n  };\n\n  getCacheInfo = (): Promise<ApiCacheResponse> => {\n    return this.http.get(\"dns/cacheinfo\");\n  };\n\n  getDNSInfo = (): Promise<ApiDnsSettings> => {\n    return this.http.get(\"settings/dns\");\n  };\n\n  getDHCPInfo = (): Promise<ApiDhcpSettings> => {\n    return this.http.get(\"settings/dhcp\");\n  };\n\n  updateDHCPInfo = (settings: ApiDhcpSettings): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/dhcp\", settings);\n  };\n\n  updateDNSInfo = (settings: ApiDnsSettings): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/dns\", settings);\n  };\n\n  getPreferences = (): Promise<ApiPreferences> => {\n    return this.http.get(\"settings/web\");\n  };\n\n  updatePreferences = (\n    settings: ApiPreferences\n  ): Promise<ApiSuccessResponse> => {\n    return this.http.put(\"settings/web\", settings);\n  };\n}\n\nexport default new ApiClient(new HttpClient(config));\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Header component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { MouseEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TimeRangeSelectorContainer } from \"../dashboard/TimeRangeSelector\";\nimport api from \"../../util/api\";\n\n//const sidebarToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('sidebar-hidden');\n//};\n\nconst sidebarMinimize = (e: MouseEvent) => {\n  e.preventDefault();\n  document.body.classList.toggle(\"sidebar-minimized\");\n  document.body.classList.toggle(\"brand-minimized\");\n};\n\nexport const mobileSidebarToggle = () => {\n  document.body.classList.toggle(\"sidebar-show\");\n};\n\nexport const mobileSidebarHide = () => {\n  document.body.classList.remove(\"sidebar-show\");\n};\n\n//const asideToggle = e => {\n//  e.preventDefault();\n//  document.body.classList.toggle('aside-menu-hidden');\n//};\n\nexport default () => (\n  <header className=\"app-header navbar\">\n    <button\n      className=\"navbar-toggler d-lg-none text-white ml-3\"\n      onClick={mobileSidebarToggle}\n      type=\"button\"\n    >\n      &#9776;\n    </button>\n    <Link to=\"/dashboard\" className=\"navbar-brand text-center\">\n      <span className=\"text-white\" style={{ lineHeight: \"40px\" }}>\n        <span className=\"navbar-brand-full\">\n          Pi-\n          <b>hole</b>\n        </span>\n        <span className=\"navbar-brand-minimized\">\n          P<b>h</b>\n        </span>\n      </span>\n    </Link>\n    <ul className=\"nav navbar-nav d-md-down-none mr-auto\">\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link navbar-toggler text-white sidebar-toggler\"\n          type=\"button\"\n          onClick={sidebarMinimize}\n        >\n          &#9776;\n        </button>\n      </li>\n      {api.loggedIn && window.location.pathname.endsWith(\"/dashboard\") ? (\n        <li>\n          <TimeRangeSelectorContainer />\n        </li>\n      ) : null}\n    </ul>\n  </header>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Wrap promises to make them cancelable\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * A promise which can be canceled\n */\nexport interface CancelablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * The options given to {@link makeCancelable}\n */\nexport interface CancelableOptions {\n  /**\n   * The function to call to repeat the promise\n   */\n  repeat: () => void;\n\n  /**\n   * The amount of time to wait until repeating\n   */\n  interval: number;\n}\n\n/**\n * The error thrown when the {@link CancelablePromise} is canceled\n */\nexport interface CanceledError {\n  isCanceled: true;\n}\n\n/**\n * Make a promise cancelable and repeatable\n *\n * @param promise the promise\n * @param options the interval repeat options\n * @returns a cancelable promise\n */\nexport function makeCancelable<T>(\n  promise: Promise<T>,\n  options?: CancelableOptions\n): CancelablePromise<T> {\n  let hasCanceled = false;\n  let repeatId: NodeJS.Timeout | null = null;\n\n  const handle = (\n    resolve: (value: T) => void,\n    reject: (error: any) => void,\n    val: T,\n    isError: boolean\n  ) => {\n    if (hasCanceled) {\n      reject({ isCanceled: true });\n      return;\n    }\n\n    if (isError) {\n      reject(val);\n    } else {\n      resolve(val);\n    }\n\n    if (options) {\n      repeatId = setTimeout(options.repeat, options.interval);\n    }\n  };\n\n  const wrappedPromise: Promise<T> = new Promise((resolve, reject) => {\n    promise.then(\n      val => handle(resolve, reject, val, false),\n      error => handle(resolve, reject, error, true)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      if (repeatId !== null) {\n        clearTimeout(repeatId);\n      }\n      hasCanceled = true;\n    }\n  };\n}\n\n/**\n * Ignore canceled promises (pass into a promise's catch function)\n *\n * @param err the error from catching the promise\n */\nexport const ignoreCancel = (err: any) => {\n  if (!err.isCanceled) throw err;\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Result types\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * A type which can be either Ok or Err, with some associated data.\n */\nexport interface Result<T, E> {\n  isOk(): boolean;\n  isErr(): boolean;\n  unwrap(): T;\n  unwrapErr(): E;\n}\n\nexport class Ok<T, E> implements Result<T, E> {\n  constructor(private value: T) {}\n\n  isErr(): boolean {\n    return false;\n  }\n\n  isOk(): boolean {\n    return true;\n  }\n\n  unwrap(): T {\n    return this.value;\n  }\n\n  unwrapErr(): E {\n    throw Error(\"unwrapErr on a Result.Ok\");\n  }\n}\n\nexport class Err<T, E> implements Result<T, E> {\n  constructor(private err: E) {}\n\n  isErr(): boolean {\n    return true;\n  }\n\n  isOk(): boolean {\n    return false;\n  }\n\n  unwrap(): T {\n    throw Error(\"unwrap on a Result.Err\");\n  }\n\n  unwrapErr(): E {\n    return this.err;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * WithAPIData Component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { Component, ReactNode } from \"react\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport { Err, Ok, Result } from \"../../util/result\";\n\nexport interface WithAPIDataProps<T> {\n  apiCall: () => Promise<T>;\n  repeatOptions: {\n    ignoreCancel: boolean;\n    interval: number;\n  };\n\n  /**\n   * If the data should be cleared when the props update. Defaults to true.\n   */\n  flushOnUpdate: boolean;\n\n  /**\n   * Render the children before the first API request is done\n   */\n  renderInitial: () => ReactNode;\n\n  /**\n   * Render the children if the API request succeeded\n   *\n   * @param data the data returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderOk: (data: T, refresh: (data?: T) => void) => ReactNode;\n\n  /**\n   * Render the children if the API request failed\n   *\n   * @param error the error returned from the API call\n   * @param refresh a function to trigger an asynchronous data refresh. If a\n   *        parameter is given, it will be used as the new API response\n   *        instead of hitting the API again.\n   */\n  renderErr: (error: any, refresh: (data?: T) => void) => ReactNode;\n}\n\nexport interface WithAPIDataState<T> {\n  apiResult: Result<T, any> | null;\n}\n\n/**\n * A component for getting API data. It can retrieve information once,\n * periodically, or on call (refresh).\n */\nexport class WithAPIData<T> extends Component<\n  WithAPIDataProps<T>,\n  WithAPIDataState<T>\n> {\n  static defaultProps = {\n    repeatOptions: {\n      ignoreCancel: true,\n      interval: 0\n    },\n    flushOnUpdate: true\n  };\n\n  state: WithAPIDataState<T> = {\n    apiResult: null\n  };\n\n  private dataHandle: CancelablePromise<T> | undefined;\n\n  loadData = (data?: T) => {\n    // Only repeat if there is a non-zero repeat interval\n    const cancelOptions =\n      this.props.repeatOptions.interval !== 0\n        ? {\n            repeat: this.loadData,\n            interval: this.props.repeatOptions.interval\n          }\n        : undefined;\n\n    // Clear in-flight or repeating requests so they are not orphaned\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n\n    if (data) {\n      // Some data was given, it should be used as the API response\n      this.setState({ apiResult: new Ok(data) });\n\n      if (cancelOptions) {\n        // If the request should be repeated, wait for the interval and then\n        // refresh with data from the API\n        setTimeout(() => this.loadData(), cancelOptions.interval);\n      }\n      return;\n    }\n\n    // No data was given, make a request to the API\n    this.dataHandle = makeCancelable(this.props.apiCall(), cancelOptions);\n\n    this.dataHandle.promise\n      .then(data => {\n        this.setState({\n          apiResult: new Ok(data)\n        });\n      })\n      .catch(error => {\n        if (this.props.repeatOptions.ignoreCancel) {\n          ignoreCancel(error);\n        } else {\n          throw error;\n        }\n      })\n      .catch(error => {\n        this.setState({\n          apiResult: new Err(error)\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    if (this.dataHandle) {\n      this.dataHandle.cancel();\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<WithAPIDataProps<T>>,\n    prevState: Readonly<WithAPIDataState<T>>,\n    snapshot?: any\n  ): void {\n    if (prevProps === this.props) {\n      // Don't do anything if the props didn't change\n      return;\n    }\n\n    if (this.props.flushOnUpdate) {\n      // The props changed, so trigger a full reload of the data. Current data is\n      // cleared so that loading indicators are shown.\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ apiResult: null });\n      this.loadData();\n    }\n  }\n\n  render() {\n    if (!this.state.apiResult) {\n      return this.props.renderInitial();\n    }\n\n    if (this.state.apiResult.isOk()) {\n      return this.props.renderOk(this.state.apiResult.unwrap(), this.loadData);\n    }\n\n    return this.props.renderErr(\n      this.state.apiResult.unwrapErr(),\n      this.loadData\n    );\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status context\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithAPIData } from \"../WithAPIData\";\nimport api from \"../../../util/api\";\n\n/**\n * The data shared by the status context\n */\nexport interface StatusContextType {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n}\n\n/**\n * The status data which will be used initially, until the API responds with the\n * real status data.\n */\nexport const initialContext: StatusContextType = {\n  status: \"unknown\",\n  refresh: () => {}\n};\n\n/**\n * The React context which provides the status data to consumers\n */\nexport const StatusContext = React.createContext(initialContext);\n\n/**\n * Provide the blocking status via React context.\n * Sub-components can use the `StatusContext.Consumer` component to get the\n * status.\n */\nexport const StatusProvider = ({\n  children,\n  ...props\n}: {\n  children: ReactNode;\n}) => (\n  <WithAPIData\n    apiCall={api.getStatus}\n    repeatOptions={{ interval: 5000, ignoreCancel: true }}\n    flushOnUpdate={false}\n    renderInitial={() => (\n      <StatusContext.Provider value={initialContext} {...props}>\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderOk={(data, refresh) => (\n      <StatusContext.Provider\n        value={{ status: data.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n    renderErr={(_, refresh) => (\n      <StatusContext.Provider\n        value={{ status: initialContext.status, refresh }}\n        {...props}\n      >\n        {children}\n      </StatusContext.Provider>\n    )}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Status badge component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { StatusContext } from \"./context/StatusContext\";\n\nexport interface StatusBadgeProps extends WithTranslation {\n  status: string;\n}\n\nclass StatusBadge extends Component<StatusBadgeProps, {}> {\n  isEnabled = () => this.props.status === \"enabled\";\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <span>\n        <i\n          className={\n            \"fa fa-circle text-\" + (this.isEnabled() ? \"success\" : \"danger\")\n          }\n        />\n        &nbsp;\n        {t(this.isEnabled() ? \"Enabled\" : \"Disabled\")}\n      </span>\n    );\n  }\n}\n\nexport const TranslatedStatusBadge = withTranslation(\"common\")(StatusBadge);\n\nexport default () => (\n  <StatusContext.Consumer>\n    {({ status }) => <TranslatedStatusBadge status={status} />}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A dropdown in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { MouseEvent, ReactNode } from \"react\";\n\nexport interface NavDropdownProps {\n  name: string;\n  icon: string;\n  isOpen: boolean;\n  children: ReactNode;\n}\n\nexport default ({ name, icon, isOpen, children }: NavDropdownProps) => (\n  <li className={\"nav-item nav-dropdown\" + (isOpen ? \" open\" : \"\")}>\n    <button\n      className=\"nav-link nav-dropdown-toggle\"\n      onClick={handleDropdownClick}\n      type=\"button\"\n    >\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </button>\n    <ul className=\"nav-dropdown-items\">{children}</ul>\n  </li>\n);\n\nconst handleDropdownClick = (e: MouseEvent<HTMLButtonElement>) => {\n  (e.target as HTMLButtonElement).parentElement!.classList.toggle(\"open\");\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Sidebar component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment, ReactElement, Suspense } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport logo from \"../../img/logo.svg\";\nimport { mobileSidebarHide } from \"./Header\";\nimport api from \"../../util/api\";\nimport StatusBadge from \"./StatusBadge\";\nimport NavDropdown from \"./NavDropdown\";\nimport {\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../../routes\";\nimport { TFunction } from \"i18next\";\n\n/**\n * A nav item constructed from the given {@link RouteItem}\n *\n * @param item The {@link RouteItem}\n * @param t The translation function\n * @constructor\n */\nexport const PiholeNavItem = ({\n  item,\n  t\n}: {\n  item: RouteItem;\n  t: TFunction;\n}): ReactElement => (\n  <NavItem>\n    <NavLink\n      to={item.url}\n      onClick={mobileSidebarHide}\n      className=\"nav-link\"\n      activeClassName=\"active\"\n    >\n      <i className={\"nav-icon \" + item.icon} />\n      {t(item.name)}\n    </NavLink>\n  </NavItem>\n);\n\n/**\n * A nav dropdown constructed from the given {@link RouteGroup}\n *\n * @param item The {@link RouteGroup}\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nexport const PiholeNavDropdown = ({\n  item,\n  t,\n  location\n}: {\n  item: RouteGroup;\n  t: TFunction;\n  location: Location;\n}): ReactElement => (\n  <NavDropdown\n    name={t(item.name)}\n    icon={item.icon}\n    isOpen={location.pathname.startsWith(item.url)}\n  >\n    <NavList items={item.children} t={t} location={location} />\n  </NavDropdown>\n);\n\n/**\n * A nav list constructed from the given {@link RouteItem}'s\n *\n * @param items The {@link RouteItem}'s\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nexport const NavList = ({\n  items,\n  t,\n  location\n}: {\n  items: RouteData[];\n  t: TFunction;\n  location: Location;\n}): ReactElement => (\n  <Fragment>\n    {items.map((item, index) => {\n      // Don't show an item if it requires auth and we're not logged in\n      if (item.auth && !api.loggedIn) return null;\n\n      // Some items (login page) should only be shown when logged in or logged out, not both\n      if (item.authStrict && item.auth !== api.loggedIn) return null;\n\n      // Check if it's a custom component\n      if ((item as RouteCustomItem).customComponent !== undefined) {\n        const Component = (item as RouteCustomItem).customComponent;\n        return <Component key={index} />;\n      }\n\n      // At this point it's ok to show the item\n      return (item as RouteGroup).children ? (\n        <PiholeNavDropdown\n          item={item as RouteGroup}\n          key={index}\n          t={t}\n          location={location}\n        />\n      ) : (\n        <PiholeNavItem item={item as RouteItem} key={index} t={t} />\n      );\n    })}\n  </Fragment>\n);\n\nexport interface SidebarProps extends WithTranslation {\n  items: RouteData[];\n  location: Location;\n}\n\n/**\n * The sidebar used by the web interface\n *\n * @param items The nav items\n * @param t The translation function\n * @param location The location object\n * @constructor\n */\nconst Sidebar = ({ items, t, location }: SidebarProps): ReactElement => (\n  <div className=\"sidebar\">\n    <nav className=\"sidebar-nav\">\n      <Nav>\n        <li className=\"nav-title\" style={{ textTransform: \"none\" }}>\n          <img\n            src={logo}\n            className=\"img-responsive float-left\"\n            style={{ height: \"67px\" }}\n            alt=\"\"\n          />\n          <p\n            className=\"float-left pl-3 text-white mb-0\"\n            style={{\n              fontSize: \"0.875rem\",\n              lineHeight: \"1\"\n            }}\n          >\n            {t(\"Status\")}\n          </p>\n          <br />\n          <span className=\"pl-3\">\n            <StatusBadge />\n          </span>\n        </li>\n        <NavList items={items} t={t} location={location} />\n      </Nav>\n    </nav>\n  </div>\n);\n\nconst TranslatedSidebar = withTranslation([\"common\", \"location\"])(Sidebar);\n\nexport default (props: any) => (\n  <Suspense fallback={null}>\n    <TranslatedSidebar {...props} />\n  </Suspense>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * FooterUpdateStatus component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\nconst FooterUpdateStatus = ({\n  updateAvailable = false,\n  t\n}: { updateAvailable: boolean } & WithTranslation) => {\n  if (!updateAvailable) {\n    return null;\n  }\n\n  return (\n    <div className=\"ml-auto\">\n      <Link to=\"/settings/versions\">{t(\"Update Available\")}</Link>\n    </div>\n  );\n};\n\nexport default FooterUpdateStatus;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Footer component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Suspense } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport FooterUpdateStatus from \"./FooterUpdateStatus\";\n\nconst Footer = (props: any) => {\n  return (\n    <footer className=\"app-footer\">\n      <FooterUpdateStatus {...props} />\n    </footer>\n  );\n};\n\nconst TranslatedFooter = withTranslation([\"common\", \"footer\"])(Footer);\n\nexport default () => (\n  <Suspense fallback={null}>\n    <TranslatedFooter />\n  </Suspense>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Summary Stats component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport api from \"../../util/api\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface SummaryStatsProps {\n  totalQueries: string;\n  blockedQueries: string;\n  percentBlocked: string;\n  gravityDomains: string;\n  uniqueClients: number;\n}\n\nclass SummaryStats extends Component<SummaryStatsProps & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-success stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-globe-americas fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.totalQueries}</h3>\n              <p className=\"mb-0\">\n                {t(\"Total Queries ({{count}} clients)\", {\n                  count: this.props.uniqueClients\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-primary stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-hand-paper fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.blockedQueries}</h3>\n              <p className=\"mb-0\">{t(\"Queries Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-warning stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"fa fa-chart-pie fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.percentBlocked}</h3>\n              <p className=\"mb-0\">{t(\"Percent Blocked\")}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-xs-12\">\n          <div className=\"card border-0 bg-danger stat-height-lock\">\n            <div className=\"card-body\">\n              <div className=\"card-icon\">\n                <i className=\"far fa-list-alt fa-2x\" />\n              </div>\n            </div>\n            <div className=\"card-img-overlay\">\n              <h3>{this.props.gravityDomains}</h3>\n              <p className=\"mb-0\">{t(\"Domains On Blocklist\")}</p>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for the component\n *\n * @param data the API data\n * @returns {*} the transformed props\n */\nexport const transformData = (data: ApiSummary): SummaryStatsProps => ({\n  totalQueries: data.sum_queries.toLocaleString(),\n  blockedQueries: data.blocked_queries.toLocaleString(),\n  percentBlocked: data.percent_blocked.toFixed(2).toLocaleString() + \"%\",\n  gravityDomains: data.gravity_size.toLocaleString(),\n  uniqueClients: data.total_clients\n});\n\n/**\n * The props the summary stats should use when it fails to get the API data\n * (it does not need the error object)\n */\nexport const errorProps: SummaryStatsProps = {\n  totalQueries: \"Lost\",\n  blockedQueries: \"Connection\",\n  percentBlocked: \"To\",\n  gravityDomains: \"API\",\n  uniqueClients: 0\n};\n\n/**\n * The props used to show a loading state\n */\nexport const initialProps: SummaryStatsProps = {\n  blockedQueries: \"---\",\n  totalQueries: \"---\",\n  percentBlocked: \"---\",\n  gravityDomains: \"---\",\n  uniqueClients: 0\n};\n\nexport const TranslatedSummaryStats = withTranslation([\"common\", \"dashboard\"])(\n  SummaryStats\n);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range ? api.getSummaryDb(context.range) : api.getSummary()\n        }\n        repeatOptions={\n          context.range ? undefined : { interval: 5000, ignoreCancel: true }\n        }\n        renderInitial={() => (\n          <TranslatedSummaryStats {...initialProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedSummaryStats {...transformData(data)} {...props} />\n        )}\n        renderErr={() => <TranslatedSummaryStats {...errorProps} {...props} />}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Graph utility functions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { TimeRange } from \"../components/common/context/TimeRangeContext\";\n\n/**\n * Pad a two digit number\n *\n * @param num the number\n * @returns {string} a padding number string\n */\nexport const padNumber = (num: number) => {\n  return (\"00\" + num).substr(-2, 2);\n};\n\n/**\n * Dynamically calculate a time interval so there are always 144 data points\n * (144 so that every point represents 10 minutes when the range is 24 hours)\n *\n * @param range The range to find the interval for\n */\nexport const getIntervalForRange = (range: TimeRange): number => {\n  return Math.ceil((range.until.unix() - range.from.unix()) / 144);\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Queries Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { getIntervalForRange, padNumber } from \"../../util/graphUtils\";\nimport api from \"../../util/api\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartData, ChartOptions, TimeUnit } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface QueriesGraphProps {\n  loading: boolean;\n  labels: Date[];\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  domains_over_time: number[];\n  blocked_over_time: number[];\n}\n\nclass QueriesGraph extends Component<QueriesGraphProps & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    const data: ChartData = {\n      // @ts-ignore\n      labels: this.props.labels,\n      datasets: [\n        {\n          label: t(\"Total Queries\"),\n          data: this.props.domains_over_time,\n          fill: true,\n          backgroundColor: \"rgba(220,220,220,0.5)\",\n          borderColor: \"rgba(0, 166, 90,.8)\",\n          pointBorderColor: \"rgba(0, 166, 90,.8)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        },\n        {\n          label: t(\"Blocked Queries\"),\n          data: this.props.blocked_over_time,\n          fill: true,\n          backgroundColor: \"rgba(0,192,239,0.5)\",\n          borderColor: \"rgba(0,192,239,1)\",\n          pointBorderColor: \"rgba(0,192,239,1)\",\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHitRadius: 5,\n          cubicInterpolationMode: \"monotone\"\n        }\n      ]\n    };\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: true,\n        mode: \"x-axis\",\n        callbacks: {\n          title: tooltipItem => {\n            const timeStr = tooltipItem[0].xLabel! as string;\n            const time = timeStr.match(/(\\d?\\d):?(\\d?\\d?)/);\n            const hour = parseInt(time![1], 10);\n            const minute = parseInt(time![2], 10) || 0;\n            const from = padNumber(hour) + \":\" + padNumber(minute - 5) + \":00\";\n            const to = padNumber(hour) + \":\" + padNumber(minute + 4) + \":59\";\n\n            return t(\"Queries from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            if (tooltipItems.datasetIndex === 1) {\n              let percentage = 0.0;\n              const total = data.datasets![0].data![\n                tooltipItems.index!\n              ] as number;\n              const blocked = data.datasets![1].data![\n                tooltipItems.index!\n              ] as number;\n\n              if (total > 0) percentage = (100.0 * blocked) / total;\n\n              return (\n                data.datasets![tooltipItems.datasetIndex].label +\n                \": \" +\n                tooltipItems.yLabel +\n                \" (\" +\n                percentage.toFixed(1) +\n                \"%)\"\n              );\n            }\n\n            return (\n              data.datasets![tooltipItems.datasetIndex!].label +\n              \": \" +\n              tooltipItems.yLabel\n            );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true }\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Queries Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line width={970} height={170} data={data} options={options} />\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for QueriesGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns QueriesGraphProps QueriesGraph props\n */\nexport const transformData = (\n  data: ApiHistoryGraphItem[],\n  range: TimeRange | null\n): QueriesGraphProps => {\n  let timeUnit: TimeUnit = \"hour\";\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    data = data.slice(0, -1);\n  }\n\n  const labels = data.map(step => new Date(1000 * step.timestamp));\n  const domains_over_time = data.map(step => step.total_queries);\n  const blocked_over_time = data.map(step => step.blocked_queries);\n\n  return {\n    loading: false,\n    labels,\n    timeUnit,\n    rangeName: range ? range.name : undefined,\n    domains_over_time,\n    blocked_over_time\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: QueriesGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  domains_over_time: [],\n  blocked_over_time: []\n};\n\nexport const TranslatedQueriesGraph = withTranslation([\n  \"dashboard\",\n  \"time-ranges\"\n])(QueriesGraph);\n\nexport default (props: any) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? api.getHistoryGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : api.getHistoryGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n        renderOk={data => (\n          <TranslatedQueriesGraph\n            {...transformData(data, context.range)}\n            {...props}\n          />\n        )}\n        renderErr={() => (\n          <TranslatedQueriesGraph {...loadingProps} {...props} />\n        )}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Chart Tooltip component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { ChartTooltipOptions } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nexport interface ChartTooltipProps {\n  chart: RefObject<Line>;\n  handler: ChartTooltipOptions;\n}\n\nexport interface ChartTooltipState {\n  tooltip: any | null;\n}\n\nclass ChartTooltip extends Component<ChartTooltipProps, ChartTooltipState> {\n  state: ChartTooltipState = {\n    tooltip: null\n  };\n\n  render() {\n    const { tooltip } = this.state;\n\n    // Override the graph's options in a hacky way to avoid redrawing the entire graph.\n    // This lets the graph directly update the tooltip without going through the parent component.\n    let lastTime = Date.now();\n    this.props.handler.custom = tooltip => {\n      // Always disable the tooltip\n      if (tooltip.opacity === 0) this.setState({ tooltip });\n\n      // Limit how quickly we set state (50ms)\n      const now = Date.now();\n      if (now - lastTime < 50) return;\n\n      lastTime = now;\n      this.setState({ tooltip });\n    };\n\n    // Don't render anything if there is nothing to render\n    if (\n      tooltip === null ||\n      tooltip.opacity === 0 ||\n      this.props.chart.current === null\n    )\n      return null;\n\n    // Get the graph's position data so we can offset the tooltip\n    const position = this.props.chart.current.chartInstance.canvas!.getBoundingClientRect();\n    let width = tooltip.caretX;\n\n    // Prevent compression of the tooltip at the right edge of the screen\n    // @ts-ignore\n    if (document.offsetWidth - tooltip.caretX < 400) {\n      // @ts-ignore\n      width = document.offsetWidth - 400;\n    }\n\n    // Prevent tooltip disappearing behind the sidebar\n    if (tooltip.caretX < 100) width = 100;\n\n    // Tooltip CSS styling\n    const style = {\n      opacity: 1,\n      left: position.left + width + \"px\",\n      top: position.top + tooltip.caretY + window.scrollY + \"px\",\n      fontFamily: tooltip._bodyFontFamily,\n      fontSize: tooltip.bodyFontSize + \"px\",\n      fontStyle: tooltip._bodyFontStyle,\n      padding: tooltip.yPadding + \"px \" + tooltip.xPadding + \"px\"\n    };\n\n    // Transform and sort the tooltip data\n    let data = [];\n    if (tooltip.body) {\n      data = tooltip.body\n        .map((body: any) => body.lines)\n        .map((item: any, i: number) => ({\n          data: item[0],\n          colors: tooltip.labelColors[i]\n        }));\n    }\n    data.sort((a: any, b: any) =>\n      a.data.split(\": \")[0].localeCompare(b.data.split(\": \")[0])\n    );\n\n    return (\n      <div className=\"chartjs-tooltip\" style={style}>\n        <table>\n          <thead>\n            {tooltip.title.map((title: string, i: number) => (\n              <tr key={i}>\n                <th>{title}</th>\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {data.map((item: any, i: number) => (\n              <tr key={i}>\n                <td>\n                  <span\n                    className=\"chartjs-tooltip-key\"\n                    style={{\n                      background: item.colors.backgroundColor,\n                      borderColor: item.colors.borderColor,\n                      borderWidth: \"2px\"\n                    }}\n                  />\n                  {item.data}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ChartTooltip;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Clients Graph component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { getIntervalForRange } from \"../../util/graphUtils\";\nimport api, { ApiClient } from \"../../util/api\";\nimport ChartTooltip from \"./ChartTooltip\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartDataSets, ChartOptions, TimeUnit } from \"chart.js\";\nimport {\n  TimeRange,\n  TimeRangeContext\n} from \"../common/context/TimeRangeContext\";\n\nexport interface ClientsGraphProps {\n  loading: boolean;\n  labels: string[];\n  timeUnit: TimeUnit;\n  rangeName?: string;\n  datasets: ChartDataSets[];\n}\n\nexport class ClientsGraph extends Component<\n  ClientsGraphProps & WithTranslation,\n  {}\n> {\n  private readonly graphRef: RefObject<Line>;\n\n  constructor(props: ClientsGraphProps & WithTranslation) {\n    super(props);\n    this.graphRef = React.createRef();\n  }\n\n  render() {\n    const { t } = this.props;\n\n    const options: ChartOptions = {\n      tooltips: {\n        enabled: false,\n        mode: \"x-axis\",\n        callbacks: {\n          title: tooltipItem => {\n            const time = moment(tooltipItem[0].xLabel!, \"HH:mm\");\n\n            const fromTime = time.clone().subtract(5, \"minutes\");\n            const toTime = time.clone().add(4, \"minutes\").add(59, \"seconds\");\n\n            const from = fromTime.format(\"HH:mm:ss\");\n            const to = toTime.format(\"HH:mm:ss\");\n\n            return t(\"Client activity from {{from}} to {{to}}\", { from, to });\n          },\n          label: (tooltipItems, data) => {\n            return (\n              data.datasets![tooltipItems.datasetIndex!].label +\n              \": \" +\n              tooltipItems.yLabel\n            );\n          }\n        }\n      },\n      legend: { display: false },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: this.props.timeUnit,\n              displayFormats: { hour: \"HH:mm\" },\n              tooltipFormat: \"HH:mm\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: { beginAtZero: true },\n            stacked: true\n          }\n        ]\n      },\n      maintainAspectRatio: false\n    };\n\n    const range = this.props.rangeName\n      ? this.props.rangeName\n      : t(\"Last 24 Hours\");\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          {t(\"Clients Over {{range}}\", { range })}\n        </div>\n        <div className=\"card-body\">\n          <Line\n            width={970}\n            height={170}\n            data={{\n              labels: this.props.labels,\n              datasets: this.props.datasets\n            }}\n            options={options}\n            ref={this.graphRef}\n          />\n        </div>\n\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n\n        {\n          // Now you're thinking with portals!\n          ReactDOM.createPortal(\n            <ChartTooltip chart={this.graphRef} handler={options.tooltips!} />,\n            document.body\n          )\n        }\n      </div>\n    );\n  }\n}\n\n/**\n * Transform the API data into props for ClientsGraph\n *\n * @param data The API data\n * @param range The time range to use\n * @returns {{labels: Date[], datasets: Array, loading: boolean}} ClientsGraph\n * props\n */\nexport const transformData = (\n  data: ApiClientsGraph,\n  range: TimeRange | null\n) => {\n  let timeUnit: TimeUnit = \"hour\";\n  let overTime = data.over_time;\n\n  if (range) {\n    if (range.until.diff(range.from, \"day\") > 1) {\n      timeUnit = \"day\";\n    }\n  } else {\n    // Remove last data point as it's not yet finished\n    overTime = data.over_time.slice(0, -1);\n  }\n\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const labels = overTime.map(step =>\n    new Date(1000 * step.timestamp).toISOString()\n  );\n  const datasets: ChartDataSets[] = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (const client of data.clients) {\n    datasets.push({\n      label: client.name.length !== 0 ? client.name : client.ip,\n      // If we ran out of colors, make a random one\n      backgroundColor:\n        i < colors.length\n          ? colors[i]\n          : \"#\" +\n            parseInt(String(Math.random() * 0xffffff), 10)\n              .toString(16)\n              .padStart(6, \"0\"),\n      pointRadius: 0,\n      pointHitRadius: 5,\n      pointHoverRadius: 5,\n      cubicInterpolationMode: \"monotone\",\n      data: []\n    });\n\n    i++;\n  }\n\n  // Fill in data & labels\n  for (const step of overTime) {\n    for (const [index, value] of datasets.entries()) {\n      (value.data as number[]).push(step.data[index]);\n    }\n  }\n\n  datasets.sort((a, b) => a.label!.localeCompare(b.label!));\n\n  return {\n    labels,\n    datasets,\n    loading: false,\n    timeUnit,\n    rangeName: range ? range.name : undefined\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps: ClientsGraphProps = {\n  loading: true,\n  labels: [],\n  timeUnit: \"hour\",\n  rangeName: \"---\",\n  datasets: []\n};\n\nexport const TranslatedClientsGraph = withTranslation([\n  \"dashboard\",\n  \"time-ranges\"\n])(ClientsGraph);\n\nexport interface ClientsGraphContainerProps {\n  apiClient: ApiClient;\n}\n\nexport const ClientsGraphContainer = ({\n  apiClient\n}: ClientsGraphContainerProps) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <WithAPIData\n        apiCall={() =>\n          context.range\n            ? apiClient.getClientsGraphDb(\n                context.range,\n                getIntervalForRange(context.range)\n              )\n            : apiClient.getClientsGraph()\n        }\n        repeatOptions={\n          context.range\n            ? undefined\n            : {\n                interval: 10 * 60 * 1000,\n                ignoreCancel: true\n              }\n        }\n        renderInitial={() => <TranslatedClientsGraph {...loadingProps} />}\n        renderOk={data => (\n          <TranslatedClientsGraph {...transformData(data, context.range)} />\n        )}\n        renderErr={() => <TranslatedClientsGraph {...loadingProps} />}\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nClientsGraphContainer.defaultProps = {\n  apiClient: api\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic Doughnut Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, MouseEvent, RefObject } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { WithAPIData } from \"../common/WithAPIData\";\nimport { ChartOptions } from \"chart.js\";\n\nexport interface GenericDoughnutChartProps {\n  title: string;\n  loading: boolean;\n  data: number[];\n  colors: string[];\n  labels: string[];\n}\n\nexport class GenericDoughnutChart extends Component<\n  GenericDoughnutChartProps,\n  {}\n> {\n  private readonly chartRef: RefObject<Doughnut>;\n\n  constructor(props: GenericDoughnutChartProps) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  handleClick = (e: MouseEvent, index: number) => {\n    // Hide the entry by clicking on the internal legend item\n    const chart: any = this.chartRef.current!.chartInstance;\n    chart.legend.options.onClick.call(\n      chart,\n      e,\n      chart.legend.legendItems[index]\n    );\n\n    // Cause an update so the external legend gets updated\n    this.forceUpdate();\n  };\n\n  render() {\n    const options: ChartOptions = {\n      legend: { display: false },\n      tooltips: {\n        enabled: true,\n        callbacks: {\n          title: () => this.props.title,\n          label: (tooltipItems, data) => {\n            const dataset = data.datasets![tooltipItems.datasetIndex!];\n            const label = data.labels![tooltipItems.index!];\n            return (\n              label +\n              \": \" +\n              (dataset.data![tooltipItems.index!] as number).toFixed(1) +\n              \"%\"\n            );\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n\n    // Get the metadata for the items, so we know if they are hidden or not.\n    // If the chart has not been created yet, make some fake metadata.\n    const meta =\n      this.chartRef.current !== null\n        ? this.chartRef.current.chartInstance.getDatasetMeta(0).data\n        : this.props.data.map(() => ({ hidden: false }));\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        <div className=\"card-body\">\n          <div className=\"float-left\" style={{ width: \"67%\" }}>\n            <Doughnut\n              width={100}\n              height={250}\n              options={options}\n              ref={this.chartRef}\n              data={{\n                datasets: [\n                  {\n                    // Make a copy of the data here. ChartJS does weird things\n                    // to the data, which React doesn't catch. This can cause\n                    // oddities such as one chart showing the other chart's\n                    // data. This behavior is fixed by sending ChartJS its own\n                    // copy of the data.\n                    data: [...this.props.data],\n                    backgroundColor: this.props.colors\n                  }\n                ],\n                labels: this.props.labels\n              }}\n            />\n          </div>\n          <div className=\"float-right\" style={{ width: \"33%\" }}>\n            <ul className=\"chart-legend\">\n              {this.props.labels\n                // Zip label and color together\n                .map((label, i) => [label, this.props.colors[i]])\n                // Create the list items\n                .map(([label, color], i) => (\n                  <li\n                    key={i}\n                    className={meta[i] && meta[i].hidden ? \"strike\" : \"\"}\n                    onClick={e => this.handleClick(e, i)}\n                  >\n                    <span style={{ backgroundColor: color }} />\n                    {label}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface ChartItem {\n  name: string;\n  ip?: string;\n  percent: number;\n}\n\n/**\n * Transform the API data into props for GenericDoughnutChart\n *\n * @param apiData the API data\n * @returns GenericDoughnutChartProps\n */\nexport const transformData = (apiData: ChartItem[]) => {\n  const colors = [\n    \"#20a8d8\",\n    \"#f86c6b\",\n    \"#4dbd74\",\n    \"#f8cb00\",\n    \"#263238\",\n    \"#63c2de\",\n    \"#b0bec5\"\n  ];\n  const data = [];\n  const labels = [];\n  const usedColors = [];\n\n  // Fill in dataset metadata\n  let i = 0;\n  for (const entry of apiData) {\n    data.push(entry.percent);\n    labels.push(entry.name.length !== 0 ? entry.name : entry.ip!);\n    usedColors.push(\n      // If we ran out of colors, make a random one\n      i < colors.length\n        ? colors[i]\n        : \"#\" +\n            parseInt(String(Math.random() * 0xffffff), 10)\n              .toString(16)\n              .padStart(6, \"0\")\n    );\n\n    i++;\n  }\n\n  return {\n    loading: false,\n    data,\n    colors: usedColors,\n    labels\n  };\n};\n\n/**\n * The props used to show a loading state (either initial load or error)\n */\nexport const loadingProps = {\n  loading: true,\n  data: [],\n  colors: [],\n  labels: []\n};\n\nexport default function <T>({\n  apiCall,\n  title,\n  apiHandler,\n  ...props\n}: {\n  apiCall: () => Promise<T>;\n  title: string;\n  apiHandler: (data: T) => ChartItem[];\n}) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      renderInitial={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n      renderOk={data => (\n        <GenericDoughnutChart\n          title={title}\n          {...transformData(apiHandler(data))}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <GenericDoughnutChart title={title} {...loadingProps} {...props} />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Types Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst QueryTypesChart = ({\n  t,\n  apiCall\n}: WithTranslation & { apiCall: () => Promise<ApiQueryType[]> }) => (\n  <GenericDoughnutChart\n    title={t(\"Query Types\")}\n    apiCall={apiCall}\n    apiHandler={data => {\n      const total = data.reduce(\n        (previous, current) => previous + current.count,\n        0\n      );\n\n      return data.map(item => ({\n        name: item.name,\n        percent: total > 0 ? (item.count * 100) / total : 0\n      }));\n    }}\n  />\n);\n\nexport const QueryTypesChartContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <QueryTypesChart\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getQueryTypesDb(context.range)\n            : api.getQueryTypes()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation(\"dashboard\")(QueryTypesChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Upstream Servers / Forward Destinations Chart component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport GenericDoughnutChart from \"./GenericDoughnutChart\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nconst UpstreamsChart = ({\n  t,\n  apiCall\n}: WithTranslation & { apiCall: () => Promise<ApiUpstreams> }) => (\n  <GenericDoughnutChart\n    title={t(\"Queries Answered By Destination\")}\n    apiCall={apiCall}\n    apiHandler={data =>\n      data.upstreams.map(upstream => ({\n        name: upstream.name,\n        ip: upstream.ip,\n        percent: (upstream.count * 100) / data.total_queries\n      }))\n    }\n  />\n);\n\nexport const UpstreamsChartContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <UpstreamsChart\n        {...props}\n        apiCall={() =>\n          context.range ? api.getUpstreamsDb(context.range) : api.getUpstreams()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation(\"dashboard\")(UpstreamsChartContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Generic top items component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nexport interface TopTableInnerProps<T> {\n  loading: boolean;\n  title: string;\n  data: T;\n  headers: string[];\n  emptyMessage: string;\n  isEmpty: (data: T) => boolean;\n  generateRows: (data: T) => ReactNode;\n}\n\nexport class TopTable<T> extends Component<TopTableInnerProps<T>, {}> {\n  static defaultProps = {\n    loading: true,\n    title: \"\",\n    data: {},\n    headers: [],\n    emptyMessage: \"\",\n    isEmpty: () => true,\n    generateRows: () => null\n  };\n\n  /**\n   * Generate the card containing the table\n   *\n   * @returns {*} a React element for the card\n   */\n  generateCard = () => {\n    // If there is no data, just show a message\n    if (this.props.isEmpty(this.props.data)) {\n      return <div className=\"card-body\">{this.props.emptyMessage}</div>;\n    }\n\n    return (\n      <div className=\"card-body p-0\">\n        <div style={{ overflowX: \"auto\" }}>\n          <table className=\"table m-0\">\n            <tbody>\n              <tr>\n                {this.props.headers.map((header, i) => (\n                  <th className=\"border-top-0\" key={i}>\n                    {header}\n                  </th>\n                ))}\n              </tr>\n              {this.props.generateRows(this.props.data)}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{this.props.title}</div>\n        {this.generateCard()}\n        {this.props.loading ? (\n          <div\n            className=\"card-img-overlay\"\n            style={{ background: \"rgba(255,255,255,0.7)\" }}\n          >\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                fontSize: \"30px\"\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport interface TopTableProps<T, D>\n  extends Omit<TopTableInnerProps<T>, \"loading\" | \"data\"> {\n  apiCall: () => Promise<D>;\n  initialData: T;\n  apiHandler: (data: D) => T;\n}\n\nexport default function <T, D>({\n  title,\n  apiCall,\n  initialData,\n  headers,\n  emptyMessage,\n  isEmpty,\n  apiHandler,\n  generateRows,\n  ...props\n}: TopTableProps<T, D>) {\n  return (\n    <WithAPIData\n      apiCall={apiCall}\n      repeatOptions={{\n        interval: 10 * 60 * 1000,\n        ignoreCancel: true\n      }}\n      renderInitial={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading\n          {...props}\n        />\n      )}\n      renderOk={data => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={apiHandler(data)}\n          loading={false}\n          {...props}\n        />\n      )}\n      renderErr={() => (\n        <TopTable\n          title={title}\n          headers={headers}\n          emptyMessage={emptyMessage}\n          isEmpty={isEmpty}\n          generateRows={generateRows}\n          data={initialData}\n          loading\n          {...props}\n        />\n      )}\n    />\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Domains component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport { TFunction } from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopDomainsData {\n  totalQueries: number;\n  topDomains: ApiTopDomainItem[];\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topDomains: *}} the parsed data\n */\nexport const transformData = (data: ApiTopDomains): TopDomainsData => ({\n  totalQueries: data.total_queries,\n  topDomains: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top domains\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top domains\n */\nexport const generateRows = (t: TFunction) => (data: TopDomainsData) => {\n  return data.topDomains.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td className=\"align-middle\">\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-success\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopDomains = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopDomains> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Permitted Domains\")}\n    initialData={{\n      totalQueries: 0,\n      topDomains: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topDomains.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopDomainsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopDomains\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopDomainsDb(context.range)\n            : api.getTopDomains()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(TopDomainsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Blocked component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport { TFunction } from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopBlockedDomainsData {\n  totalBlocked: number;\n  topBlocked: ApiTopDomainItem[];\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalBlocked: number, topBlocked: *}} the parsed data\n */\nexport const transformData = (\n  data: ApiTopBlockedDomains\n): TopBlockedDomainsData => ({\n  totalBlocked: data.blocked_queries,\n  topBlocked: data.top_domains\n});\n\n/**\n * Create a function to generate rows of top blocked\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top blocked\n */\nexport const generateRows = (t: TFunction) => (data: TopBlockedDomainsData) => {\n  return data.topBlocked.map(item => {\n    const percentage = (item.count / data.totalBlocked) * 100;\n\n    return (\n      <tr key={item.domain}>\n        <td>{item.domain}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td className=\"align-middle\">\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalBlocked.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-warning\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopBlockedDomains = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopBlockedDomains> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Blocked Domains\")}\n    initialData={{\n      totalBlocked: 0,\n      topBlocked: []\n    }}\n    headers={[t(\"Domain\"), t(\"Hits\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Domains Found\")}\n    isEmpty={data => data.topBlocked.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopBlockedDomainsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopBlockedDomains\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopBlockedDomainsDb(context.range)\n            : api.getTopBlockedDomains()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(\n  TopBlockedDomainsContainer\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Clients component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport { TFunction } from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopClientsData {\n  totalQueries: number;\n  topClients: ApiClientData[];\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data the API data\n * @returns {{totalQueries: number, topClients: *}} the parsed data\n */\nexport const transformData = (data: ApiTopClients): TopClientsData => ({\n  totalQueries: data.total_queries,\n  topClients: data.top_clients\n});\n\n/**\n * Create a function to generate rows of top clients\n *\n * @param t the translation function\n * @returns {function(*): any[]} a function to generate rows of top clients\n */\nexport const generateRows = (t: TFunction) => (data: TopClientsData) => {\n  return data.topClients.map(item => {\n    const percentage = (item.count / data.totalQueries) * 100;\n\n    return (\n      <tr key={item.name + \"|\" + item.ip}>\n        <td>{item.name !== \"\" ? item.name : item.ip}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td className=\"align-middle\">\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.totalQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-primary\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopClients = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopClients> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Clients\")}\n    initialData={{\n      totalQueries: 0,\n      topClients: []\n    }}\n    headers={[t(\"Client\"), t(\"Requests\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Clients Found\")}\n    isEmpty={data => data.topClients.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopClientsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopClients\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopClientsDb(context.range)\n            : api.getTopClients()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(TopClientsContainer);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Top Blocked Clients component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport TopTable from \"./TopTable\";\nimport { TFunction } from \"i18next\";\nimport { TimeRangeContext } from \"../common/context/TimeRangeContext\";\n\nexport interface TopBlockedClientsData {\n  blockedQueries: number;\n  topClients: ApiClientData[];\n}\n\n/**\n * Transform the API data into the form used in generateRows\n *\n * @param data The API data\n * @returns The parsed data\n */\nexport const transformData = (\n  data: ApiTopBlockedClients\n): TopBlockedClientsData => ({\n  blockedQueries: data.blocked_queries,\n  topClients: data.top_clients\n});\n\n/**\n * Generate rows of top blocked clients\n *\n * @param t The translation function\n * @returns Rows of top blocked clients\n */\nexport const generateRows = (t: TFunction) => (\n  data: TopBlockedClientsData\n): ReactNode => {\n  return data.topClients.map(item => {\n    const percentage = (item.count / data.blockedQueries) * 100;\n\n    return (\n      <tr key={item.name + \"|\" + item.ip}>\n        <td>{item.name !== \"\" ? item.name : item.ip}</td>\n        <td>{item.count.toLocaleString()}</td>\n        <td className=\"align-middle\">\n          <div\n            className=\"progress\"\n            title={t(\"{{percent}}% of {{total}}\", {\n              percent: percentage.toFixed(1),\n              total: data.blockedQueries.toLocaleString()\n            })}\n          >\n            <div\n              className=\"progress-bar bg-danger\"\n              style={{ width: percentage + \"%\" }}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst TopBlockedClients = ({\n  apiCall,\n  t,\n  ...props\n}: WithTranslation & { apiCall: () => Promise<ApiTopBlockedClients> }) => (\n  <TopTable\n    {...props}\n    title={t(\"Top Blocked Clients\")}\n    initialData={{\n      blockedQueries: 0,\n      topClients: []\n    }}\n    headers={[t(\"Client\"), t(\"Requests\"), t(\"Frequency\")]}\n    emptyMessage={t(\"No Clients Found\")}\n    isEmpty={data => data.topClients.length === 0}\n    apiCall={apiCall}\n    apiHandler={transformData}\n    generateRows={generateRows(t)}\n  />\n);\n\nconst TopBlockedClientsContainer = (props: WithTranslation) => (\n  <TimeRangeContext.Consumer>\n    {context => (\n      <TopBlockedClients\n        {...props}\n        apiCall={() =>\n          context.range\n            ? api.getTopBlockedClientsDb(context.range)\n            : api.getTopBlockedClients()\n        }\n      />\n    )}\n  </TimeRangeContext.Consumer>\n);\n\nexport default withTranslation([\"common\", \"dashboard\"])(\n  TopBlockedClientsContainer\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Query Log component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, Fragment } from \"react\";\nimport ReactTable, {\n  Filter,\n  ReactTableFunction,\n  RowInfo,\n  RowRenderProps\n} from \"react-table\";\nimport i18n, { TFunction } from \"i18next\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport debounce from \"lodash.debounce\";\nimport isEqual from \"lodash.isequal\";\nimport moment from \"moment\";\nimport { padNumber } from \"../../util/graphUtils\";\nimport api from \"../../util/api\";\nimport { dateRanges } from \"../../util/dateRanges\";\nimport { TranslatedTimeRangeSelector } from \"../dashboard/TimeRangeSelector\";\nimport { TimeRange } from \"../common/context/TimeRangeContext\";\nimport \"react-table/react-table.css\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface QueryLogState {\n  history: ApiQuery[];\n  cursor: null | string;\n  loading: boolean;\n  atEnd: boolean;\n  filtersChanged: boolean;\n  filters: Filter[];\n}\n\n/**\n * Get the default time range for the query log\n *\n * @param t The translation function\n */\nconst getDefaultRange = (t: TFunction): TimeRange => {\n  const translatedDateRanges = dateRanges(t);\n  const last24Hours = t(\"Last 24 Hours\");\n\n  return {\n    from: translatedDateRanges[last24Hours][0],\n    until: translatedDateRanges[last24Hours][1],\n    name: last24Hours\n  };\n};\n\nclass QueryLog extends Component<WithTranslation, QueryLogState> {\n  private updateHandler: null | CancelablePromise<ApiHistoryResponse> = null;\n\n  state: QueryLogState = {\n    history: [],\n    cursor: null,\n    loading: false,\n    atEnd: false,\n    filtersChanged: false,\n    filters: []\n  };\n\n  constructor(props: WithTranslation) {\n    super(props);\n\n    const { t } = this.props;\n\n    // This happens in the constructor to more easily use the translated date\n    // ranges\n    this.state.filters = [\n      {\n        id: \"time\",\n        value: getDefaultRange(t)\n      }\n    ];\n  }\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Get the props for a given row\n   *\n   * @param state the state of the ReactTable\n   * @param rowInfo the row information\n   * @returns {*} props for the row\n   */\n  getRowProps = (state: any, rowInfo: RowInfo | undefined) => {\n    // Check if the row is known to be blocked or allowed (not unknown)\n    if (rowInfo && rowInfo.row.status !== 0) {\n      // Blocked queries are red, allowed queries are green\n      return {\n        style: {\n          color: [1, 4, 5, 6].includes(rowInfo.row.status) ? \"red\" : \"green\"\n        }\n      };\n    }\n\n    // Unknown queries do not get colored\n    return {};\n  };\n\n  /**\n   * Convert the table filters into API history filters\n   *\n   * @param tableFilters the filters requested by the table\n   * @return the filters converted for use by the API\n   */\n  parseFilters = (tableFilters: Filter[]) => {\n    const filters: any = {};\n\n    for (const filter of tableFilters) {\n      switch (filter.id) {\n        case \"time\":\n          filters.from = moment(filter.value.from).unix();\n          filters.until = moment(filter.value.until).unix();\n          break;\n        case \"queryType\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.query_type = parseInt(filter.value);\n          break;\n        case \"domain\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.domain = filter.value;\n          break;\n        case \"client\":\n          if (filter.value.length === 0) {\n            // Filter is not applied\n            break;\n          }\n\n          filters.client = filter.value;\n          break;\n        case \"status\":\n          switch (filter.value) {\n            case \"all\":\n              // Filter is not applied\n              break;\n            case \"allowed\":\n              filters.blocked = false;\n              break;\n            case \"blocked\":\n              filters.blocked = true;\n              break;\n            default:\n              filters.status = filter.value;\n              break;\n          }\n          break;\n        case \"dnssec\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.dnssec = filter.value;\n          break;\n        case \"reply\":\n          if (filter.value === \"all\") {\n            // Filter is not applied\n            break;\n          }\n\n          filters.reply = filter.value;\n          break;\n        default:\n          break;\n      }\n    }\n\n    return filters;\n  };\n\n  /**\n   * Fetch queries from the API, if necessary. This is called from the\n   * ReactTable component, which dictates its parameters.\n   *\n   * @param page The page of the query log\n   * @param pageSize The number of queries in the page\n   */\n  fetchQueries = ({ page, pageSize }: { page: number; pageSize: number }) => {\n    // Don't fetch the queries if:\n    // - We've reached the end of the queries\n    // - We are still waiting for the last fetch to finish\n    // - Filters are the same and we already have this page and the next\n    if (\n      this.state.atEnd ||\n      this.state.loading ||\n      (!this.state.filtersChanged &&\n        this.state.history.length >= (page + 2) * pageSize)\n    ) {\n      return;\n    }\n\n    // We have to ask the API for more queries\n    this.setState({ loading: true });\n\n    // Send a request for more queries\n    this.updateHandler = makeCancelable(\n      api.getHistory({\n        cursor: this.state.cursor,\n        ...this.parseFilters(this.state.filters)\n      })\n    );\n\n    this.updateHandler.promise\n      .then(data => {\n        // Update the log with the new queries\n        this.setState(prevState => ({\n          loading: false,\n          atEnd: data.cursor === null,\n          cursor: data.cursor,\n          history: prevState.history.concat(data.history),\n          filtersChanged: false\n        }));\n      })\n      .catch(ignoreCancel);\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <ReactTable\n        className=\"-striped bg-white mb-4\"\n        style={{ lineHeight: 1 }}\n        columns={columns(t)}\n        showPaginationTop\n        sortable={false}\n        filterable={false}\n        data={this.state.history}\n        loading={this.state.loading}\n        onFetchData={state => {\n          if (isEqual(state.filtered, this.state.filters)) {\n            // If the filters have not changed, do not debounce the fetch.\n            // This allows fetching the next page to happen without waiting for\n            // the debounce.\n            this.fetchQueries(state);\n          } else {\n            // The filters have changed, so debounce until they have stabilized\n            // (wait for the user to stop typing)\n            return debounce(this.fetchQueries, 350)(state);\n          }\n        }}\n        onFilteredChange={debounce(filters => {\n          if (isEqual(filters, this.state.filters)) {\n            return;\n          }\n\n          this.setState({\n            filters,\n            filtersChanged: true,\n            cursor: null,\n            atEnd: false,\n            loading: false,\n            history: []\n          });\n        }, 300)}\n        defaultFiltered={[\n          {\n            id: \"time\",\n            value: getDefaultRange(t)\n          }\n        ]}\n        getTrProps={this.getRowProps}\n        ofText={this.state.atEnd ? \"of\" : \"of at least\"}\n        // Pad empty rows to have the same height as filled rows\n        PadRowComponent={() => (\n          <span>\n            &nbsp;\n            <br />\n            &nbsp;\n          </span>\n        )}\n      />\n    );\n  }\n}\n\n/**\n * Convert a status code to a status message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst status = (t: TFunction) => [\n  t(\"Unknown\"),\n  t(\"Blocked (gravity)\"),\n  t(\"Allowed (forwarded)\"),\n  t(\"Allowed (cached)\"),\n  t(\"Blocked (regex/wildcard)\"),\n  t(\"Blocked (blacklist)\"),\n  t(\"Blocked (external)\")\n];\n\n/**\n * Convert a DNSSEC code to a DNSSEC message. The messages are translated, so\n * you must pass in the translation function before using the message array.\n */\nconst dnssec = (t: TFunction) => [\n  \"N/A\", // Unspecified, which means DNSSEC is off, so nothing should be shown\n  t(\"Secure\"),\n  t(\"Insecure\"),\n  t(\"Bogus\"),\n  t(\"Abandoned\"),\n  t(\"Unknown\")\n];\n\nconst dnssecColor = [\n  \"\", // Unspecified, which means DNSSEC is off, so the initial color should be shown\n  \"green\", // Secure\n  \"orange\", // Insecure\n  \"red\", // Bogus\n  \"red\", // Abandoned\n  \"orange\" // Unknown\n];\n\n/**\n * Convert a reply type code to a reply type. The unknown type is translated, so\n * you must pass in the translation function before using the message array.\n */\nconst replyTypes = (t: TFunction) => [\n  t(\"Unknown\"),\n  \"NODATA\",\n  \"NXDOMAIN\",\n  \"CNAME\",\n  \"IP\",\n  \"DOMAIN\",\n  \"RRNAME\"\n];\n\n/**\n * Convert a query type code to a query type.\n */\nconst queryTypes = [\"A\", \"AAAA\", \"ANY\", \"SRV\", \"SOA\", \"PTR\", \"TXT\"];\n\n/**\n * Create a method which returns a select component for the filter, using the\n * supplied items as the selectable filters.\n *\n * @param items The options to show in the filter\n * @param t The translation function\n * @param extras Extra custom options which should show up in the filter list\n * @returns {function({filter: *, onChange: *}): *} A select component with the\n * filter data\n */\nconst selectionFilter = (\n  items: string[],\n  t: TFunction,\n  extras: { name: string; value: any }[] = []\n) => {\n  return ({\n    filter,\n    onChange\n  }: {\n    filter: Filter;\n    onChange: ReactTableFunction;\n  }) => (\n    <select\n      onChange={event => onChange(event.target.value)}\n      style={{ width: \"100%\" }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"all\">{t(\"All\")}</option>\n      {extras.map((extra, i) => (\n        <option key={i} value={extra.value}>\n          {extra.name}\n        </option>\n      ))}\n      {items.map((item, i) => (\n        <option key={i + extras.length} value={i}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\n/**\n * The columns of the Query Log. Some pieces are translated, so you must pass in\n * the translation function before using the columns.\n */\nconst columns = (t: TFunction) => [\n  {\n    Header: t(\"Time\"),\n    id: \"time\",\n    accessor: (r: ApiQuery) => r.timestamp,\n    width: 70,\n    Cell: (row: RowRenderProps) => {\n      const date = new Date(row.value * 1000);\n      const month = date.toLocaleDateString(i18n.language, {\n        month: \"short\"\n      });\n      const dayOfMonth = padNumber(date.getDate());\n      const hour = padNumber(date.getHours());\n      const minute = padNumber(date.getMinutes());\n      const second = padNumber(date.getSeconds());\n\n      return (\n        <Fragment>\n          {month + \", \" + dayOfMonth}\n          <br />\n          {hour + \":\" + minute + \":\" + second}\n        </Fragment>\n      );\n    },\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: ({\n      filter,\n      onChange\n    }: {\n      filter: Filter;\n      onChange: ReactTableFunction;\n    }) => (\n      <TranslatedTimeRangeSelector\n        range={filter ? filter.value : null}\n        onSelect={range => {\n          if (range) {\n            onChange(range);\n          } else {\n            onChange(getDefaultRange(t));\n          }\n        }}\n        showLabel={false}\n      />\n    )\n  },\n  {\n    Header: t(\"Type\"),\n    id: \"queryType\",\n    accessor: (r: ApiQuery) => queryTypes[r.type],\n    width: 50,\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(queryTypes, t)\n  },\n  {\n    Header: t(\"Domain\"),\n    id: \"domain\",\n    accessor: (r: ApiQuery) => r.domain,\n    minWidth: 150,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Client\"),\n    id: \"client\",\n    accessor: (r: ApiQuery) => r.client,\n    minWidth: 120,\n    className: \"horizontal-scroll\",\n    filterable: true,\n    filterMethod: () => true // Don't filter client side\n  },\n  {\n    Header: t(\"Status\"),\n    id: \"status\",\n    accessor: (r: ApiQuery) => r.status,\n    width: 140,\n    Cell: (row: RowRenderProps) => status(t)[row.value],\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(status(t), t, [\n      { name: t(\"Allowed\"), value: \"allowed\" },\n      { name: t(\"Blocked\"), value: \"blocked\" }\n    ])\n  },\n  {\n    Header: \"DNSSEC\",\n    id: \"dnssec\",\n    accessor: (r: ApiQuery) => r.dnssec,\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: dnssecColor[row.value] }}>\n        {dnssec(t)[row.value]}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(dnssec(t), t)\n  },\n  {\n    Header: t(\"Reply\"),\n    id: \"reply\",\n    accessor: (r: ApiQuery) => ({ type: r.reply, time: r.response_time }),\n    width: 90,\n    Cell: (row: RowRenderProps) => (\n      <div style={{ color: \"black\" }}>\n        {replyTypes(t)[row.value.type]}\n        <br />\n        {\"(\" + (row.value.time / 10).toLocaleString() + \"ms)\"}\n      </div>\n    ),\n    filterable: true,\n    filterMethod: () => true, // Don't filter client side\n    Filter: selectionFilter(replyTypes(t), t)\n  },\n  {\n    Header: t(\"Action\"),\n    width: 100,\n    filterable: false,\n    Cell: (data: { row: any }) => {\n      // Blocked, but can whitelist\n      if ([1, 4, 5].includes(data.row.status)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-success btn-block\"\n            onClick={() => api.addExactWhitelist(data.row.domain)}\n          >\n            {t(\"Whitelist\")}\n          </button>\n        );\n      }\n\n      // Not explicitly blocked (or is whitelisted), but could be blocked.\n      // This includes externally blocked.\n      if ([2, 3, 6].includes(data.row.status)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger btn-block\"\n            onClick={() => api.addExactBlacklist(data.row.domain)}\n          >\n            {t(\"Blacklist\")}\n          </button>\n        );\n      }\n\n      return null;\n    }\n  }\n];\n\nexport default withTranslation([\"common\", \"query-log\", \"time-ranges\"])(\n  QueryLog\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain Input component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\n\nexport interface DomainInputProps {\n  placeholder?: string;\n  onEnter: (domain: string) => void;\n  onRefresh: () => void;\n  isValid: (domain: string) => boolean;\n  onValidationError: () => void;\n}\n\nexport interface DomainInputState {\n  domain: string;\n  isValid: boolean;\n}\n\nexport class DomainInput extends Component<\n  DomainInputProps & WithTranslation,\n  DomainInputState\n> {\n  static defaultProps = {\n    placeholder: \"\"\n  };\n\n  state: DomainInputState = {\n    domain: \"\",\n    isValid: true\n  };\n\n  handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ domain: e.target.value });\n  };\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const domain = this.state.domain;\n\n    // Don't do anything for empty inputs\n    if (domain.length === 0) {\n      return;\n    }\n\n    const isValid = this.props.isValid(domain);\n    this.setState({ isValid });\n    if (isValid) {\n      this.props.onEnter(domain);\n      // Clear the input on successful submit\n      this.setState({ domain: \"\" });\n    } else {\n      this.props.onValidationError();\n    }\n  };\n\n  render() {\n    const { t, placeholder, onRefresh } = this.props;\n\n    return (\n      <form className=\"form-group input-group\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className={`form-control ${this.state.isValid ? \"\" : \"is-invalid\"}`}\n          placeholder={placeholder}\n          value={this.state.domain}\n          onChange={this.handleChange}\n          disabled={!api.loggedIn}\n        />\n        <span className=\"btn-group input-group-append\">\n          {api.loggedIn ? (\n            <button className=\"btn border-secondary\" type=\"submit\">\n              {t(\"Add\")}\n            </button>\n          ) : null}\n          <button\n            onClick={onRefresh}\n            className=\"btn border-secondary\"\n            type=\"button\"\n          >\n            <i className=\"fa fa-sync\" />\n          </button>\n        </span>\n      </form>\n    );\n  }\n}\n\nexport const DomainInputContainer = withTranslation([\"common\", \"lists\"])(\n  DomainInput\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Alert component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\n\nexport type AlertType = \"info\" | \"success\" | \"danger\";\n\nexport interface AlertProps {\n  type: AlertType;\n  onClick: () => void;\n  message: string;\n  dismissible: boolean;\n}\n\nconst Alert = (props: AlertProps) => {\n  const dismissClass = props.dismissible ? \"alert-dismissible\" : \"\";\n\n  return (\n    <div className={`alert alert-${props.type} ${dismissClass} fade show`}>\n      {props.dismissible ? (\n        <button type=\"button\" className=\"close\" onClick={props.onClick}>\n          &times;\n        </button>\n      ) : null}\n      {props.message}\n    </div>\n  );\n};\n\nAlert.defaultProps = {\n  onClick: () => {},\n  dismissible: true\n};\n\nexport default Alert;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Domain List component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport { Button } from \"reactstrap\";\nimport Alert from \"../common/Alert\";\n\nexport interface DomainListProps extends WithTranslation {\n  domains: string[];\n  onRemove: (domain: string) => void;\n}\n\nconst DomainList = ({ domains, onRemove, t }: DomainListProps) => {\n  // Create a button to remove the domain\n  const removeButton = (item: string) => (\n    <Button\n      color=\"danger\"\n      size=\"sm\"\n      className=\"float-right\"\n      style={{ marginTop: \"2px\" }}\n      onClick={() => onRemove(item)}\n    >\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  );\n\n  // Map a domain string to a list item\n  const mapDomainsToListItems = (domain: string) => (\n    <li key={domain} className=\"list-group-item\">\n      {api.loggedIn ? removeButton(domain) : null}\n      <span className=\"d-table-cell align-middle\" style={{ height: \"32px\" }}>\n        {domain}\n      </span>\n    </li>\n  );\n\n  let body;\n\n  if (domains.length > 0) {\n    body = domains.map(mapDomainsToListItems);\n  } else {\n    body = (\n      <Alert\n        type=\"info\"\n        message={t(\"There are no domains in this list\")}\n        dismissible={false}\n      />\n    );\n  }\n\n  return <ul className=\"list-group\">{body}</ul>;\n};\n\nexport default withTranslation([\"common\", \"lists\"])(DomainList);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * List Page component (abstracted whitelist, blacklist, etc)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { DomainInputContainer } from \"./DomainInput\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport DomainList from \"./DomainList\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface ListPageProps {\n  title: string;\n  note?: {} | string;\n  placeholder: string;\n  onAdd: (domain: string) => Promise<any | never>;\n  onRefresh: () => Promise<any | never>;\n  onRemove: (domain: string) => Promise<any | never>;\n  isValid: (domain: string) => boolean;\n  validationErrorMsg: string;\n}\n\nexport interface ListPageState {\n  domains: string[];\n  message: string;\n  messageType: AlertType;\n}\n\nexport class ListPage extends Component<\n  ListPageProps & WithTranslation,\n  ListPageState\n> {\n  static defaultProps = {\n    note: \"\"\n  };\n\n  state: ListPageState = {\n    domains: [],\n    message: \"\",\n    messageType: \"info\"\n  };\n\n  private addHandler: undefined | CancelablePromise<any | never>;\n  private removeHandler: undefined | CancelablePromise<any | never>;\n  private refreshHandler: undefined | CancelablePromise<any | never>;\n\n  onEnter = (domain: string) => {\n    // Check if the domain was already added\n    if (this.state.domains.includes(domain)) {\n      this.onAlreadyAdded(domain);\n    } else {\n      // Store the domains before adding the new domain, for a possible rollback\n      const prevDomains = this.state.domains.slice();\n\n      // Try to add the domain\n      this.addHandler = makeCancelable(this.props.onAdd(domain));\n      this.addHandler.promise\n        .then(() => {\n          this.onAdded(domain);\n        })\n        .catch(ignoreCancel)\n        .catch(() => {\n          this.onAddFailed(domain, prevDomains);\n        });\n\n      // Show an in-progress message\n      this.onAdding(domain);\n    }\n  };\n\n  onAdding = (domain: string) =>\n    this.setState((prevState, prevProps) => ({\n      message: prevProps.t(\"Adding {{domain}}...\", { domain }),\n      messageType: \"info\"\n    }));\n\n  onAlreadyAdded = (domain: string) =>\n    this.setState((prevState, prevProps) => ({\n      message: prevProps.t(\"{{domain}} is already added\", { domain }),\n      messageType: \"danger\"\n    }));\n\n  onAdded = (domain: string) =>\n    this.setState(prevState => ({\n      domains: [...prevState.domains, domain],\n      message: this.props.t(\"Successfully added {{domain}}\", { domain }),\n      messageType: \"success\"\n    }));\n\n  onAddFailed = (domain: string, prevDomains: string[]) =>\n    this.setState((prevState, prevProps) => ({\n      domains: prevDomains,\n      message: prevProps.t(\"Failed to add {{domain}}\", { domain }),\n      messageType: \"danger\"\n    }));\n\n  onRemoved = (domain: string) =>\n    this.setState(prevState => ({\n      domains: prevState.domains.filter(item => item !== domain)\n    }));\n\n  onRemoveFailed = (domain: string, prevDomains: string[]) =>\n    this.setState((prevState, prevProps) => ({\n      domains: prevDomains,\n      message: prevProps.t(\"Failed to remove {{domain}}\", { domain }),\n      messageType: \"danger\"\n    }));\n\n  onRemove = (domain: string) => {\n    if (this.state.domains.includes(domain)) {\n      const prevDomains = this.state.domains.slice();\n\n      this.removeHandler = makeCancelable(this.props.onRemove(domain));\n      this.removeHandler.promise.catch(ignoreCancel).catch(() => {\n        this.onRemoveFailed(domain, prevDomains);\n      });\n\n      this.onRemoved(domain);\n    }\n  };\n\n  onRefresh = () => {\n    this.refreshHandler = makeCancelable(this.props.onRefresh());\n    this.refreshHandler.promise\n      .then(data => {\n        this.setState({ domains: data });\n      })\n      .catch(ignoreCancel);\n  };\n\n  handleValidationError = () => {\n    this.setState((prevState, prevProps) => ({\n      message: prevProps.validationErrorMsg,\n      messageType: \"danger\"\n    }));\n  };\n\n  componentDidMount() {\n    this.onRefresh();\n  }\n\n  componentWillUnmount() {\n    if (this.addHandler) this.addHandler.cancel();\n    if (this.removeHandler) this.removeHandler.cancel();\n    if (this.refreshHandler) this.refreshHandler.cancel();\n  }\n\n  render() {\n    return (\n      <div className=\"mb-4\">\n        <h2 className=\"text-center\">{this.props.title}</h2>\n        <br />\n        <DomainInputContainer\n          placeholder={this.props.placeholder}\n          onEnter={this.onEnter}\n          onRefresh={this.onRefresh}\n          isValid={this.props.isValid}\n          onValidationError={this.handleValidationError}\n        />\n        {this.props.note}\n        {this.state.message ? (\n          <Alert\n            message={this.state.message}\n            type={this.state.messageType}\n            onClick={() => this.setState({ message: \"\" })}\n          />\n        ) : null}\n        <DomainList domains={this.state.domains} onRemove={this.onRemove} />\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"lists\"])(ListPage);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Utility functions for validating domains, hostnames etc.\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport function isValidHostname(hostname: string): boolean {\n  // Must not exceed 253 characters total\n  if (hostname.length > 253) return false;\n  // Each segment must not exceed 63 characters\n  const segments = hostname.split(\".\");\n  // If at least one segment is empty or longer than 63 chars - sets to true, if none - false\n  const hasLongOrEmptySegments = segments.some(\n    segment => segment.length < 1 || segment.length > 63\n  );\n  if (hasLongOrEmptySegments) return false;\n  // Must not be all numbers and periods\n  const joined = segments.join(\"\");\n  // If the hostname without periods make a number, deny\n  if (isPositiveNumber(joined)) return false;\n\n  return /^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)+(\\.([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*))*$/.test(\n    hostname\n  );\n}\n\nexport function isValidDomain(domain: string): boolean {\n  // Make sure it's a fully qualified domain\n  const split = domain.split(\".\");\n  // Has to have at least 2 segments, of at least 1 character each\n  if (split.length < 2) return false;\n  return isValidHostname(domain);\n}\n\nexport function isPositiveNumber(input: string): boolean {\n  // Because parseInt has limitations, e.g. parseInt(\"15ex\") is parsed to 15\n  // Caution, does not work with negative numbers, replace with /^(\\-|\\+)?([0-9])$/ if needed\n  return /^[0-9]+$/.test(input);\n}\n\nexport function isValidRegex(regex: string): boolean {\n  try {\n    new RegExp(regex);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the string is a valid IPv4 address\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address\n */\nexport function isValidIpv4(address: string): boolean {\n  const segments = address.split(\".\");\n\n  // Must have 4 segments\n  if (segments.length !== 4) {\n    return false;\n  }\n\n  // All segments must be numbers (positive)\n  return segments.every(\n    segment => isPositiveNumber(segment) && parseInt(segment) < 256\n  );\n}\n\n/**\n * Check if the string is a valid IPv4 address, and it can contain an optional\n * port after the address, separated with a :.\n * Example: 127.0.0.1:5353\n *\n * @param address {string} the address to check\n * @returns {boolean} if the address is a valid IPv4 address and the port\n * (if it exists) is valid.\n */\nexport function isValidIpv4OptionalPort(address: string): boolean {\n  const split = address.split(\":\");\n  const ipv4 = split[0];\n\n  // Check the IPv4 address\n  if (!isValidIpv4(ipv4)) {\n    return false;\n  }\n\n  // If no port is given or if the port is valid, return true\n  return (\n    split.length === 1 || (split.length === 2 && isPositiveNumber(split[1]))\n  );\n}\n\n/**\n * Check if the string is a valid IPv4 CIDR number which dnsmasq accepts\n *\n * @param cidr The string to check\n */\nexport function isValidIpv4Cidr(cidr: string): boolean {\n  return [\"8\", \"16\", \"24\", \"32\"].includes(cidr);\n}\n\n/**\n * Check if the string is a valid IPv6 address. This function does not do a\n * thorough check of the IPv6 address; the backend will check it in detail.\n *\n * @param address\n */\nexport function isValidIpv6(address: string): boolean {\n  return /^[a-fA-F0-9:]+$/.test(address);\n}\n\n/**\n * Check if the string is a valid IPv6 address, and it can contain an optional\n * port. This function does not do a thorough check of the IPv6 address; the\n * backend will check it in detail.\n * Examples:\n * 1fff:0:a88:85a3::ac1f\n * [1fff:0:a88:85a3::ac1f]:8001\n *\n * @param address The IPv6 address\n */\nexport function isValidIpv6OptionalPort(address: string): boolean {\n  return /^(\\[[a-fA-F0-9:]+]:\\d+|[a-fA-F0-9:]+)$/.test(address);\n}\n\n/**\n * Check if the string is a valid IPv6 CIDR number which dnsmasq accepts\n *\n * @param cidr The string to check\n */\nexport function isValidIpv6Cidr(cidr: string): boolean {\n  const cidrNum = parseInt(cidr);\n\n  return !isNaN(cidrNum) && cidrNum > 0 && cidrNum <= 128 && cidrNum % 4 === 0;\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Whitelist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidHostname } from \"../util/validate\";\n\nconst Whitelist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Whitelist\")} (${t(\"Exact\")})`}\n      placeholder={t(\"Add a domain or hostname (example.com or example)\")}\n      onAdd={api.addExactWhitelist}\n      onRemove={api.removeExactWhitelist}\n      onRefresh={api.getExactWhitelist}\n      isValid={isValidHostname}\n      validationErrorMsg={t(\"Not a valid hostname\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(Whitelist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Blacklist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../util/api\";\nimport ListPage from \"../components/list/ListPage\";\nimport { isValidHostname } from \"../util/validate\";\n\nconst Blacklist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Exact\")})`}\n      placeholder={t(\"Add a domain or hostname (example.com or example)\")}\n      onAdd={api.addExactBlacklist}\n      onRemove={api.removeExactBlacklist}\n      onRefresh={api.getExactBlacklist}\n      isValid={isValidHostname}\n      validationErrorMsg={t(\"Not a valid hostname\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(Blacklist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * RegexWhitelist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidRegex } from \"../util/validate\";\n\nconst RegexWhitelist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Whitelist\")} (${t(\"Regex\")})`}\n      placeholder={t(\"Input a regular expression\")}\n      onAdd={api.addRegexWhitelist}\n      onRemove={api.removeRegexWhitelist}\n      onRefresh={api.getRegexWhitelist}\n      isValid={isValidRegex}\n      validationErrorMsg={t(\"Not a valid regular expression\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(RegexWhitelist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * RegexBlacklist page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { FunctionComponent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport ListPage from \"../components/list/ListPage\";\nimport api from \"../util/api\";\nimport { isValidRegex } from \"../util/validate\";\n\nconst RegexBlacklist: FunctionComponent<WithTranslation> = props => {\n  const { t } = props;\n\n  return (\n    <ListPage\n      title={`${t(\"Blacklist\")} (${t(\"Regex\")})`}\n      placeholder={t(\"Input a regular expression\")}\n      onAdd={api.addRegexBlacklist}\n      onRemove={api.removeRegexBlacklist}\n      onRefresh={api.getRegexBlacklist}\n      isValid={isValidRegex}\n      validationErrorMsg={t(\"Not a valid regular expression\")}\n      {...props}\n    />\n  );\n};\n\nexport default withTranslation([\"location\", \"lists\"])(RegexBlacklist);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version - Card component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Collapse } from \"reactstrap\";\n\nexport interface VersionCardProps extends WithTranslation {\n  branch: string;\n  hash: string;\n  name: string;\n  tag: string;\n  icon: string;\n}\n\nexport interface VersionCardState {\n  collapsed: boolean;\n}\n\nclass VersionCard extends Component<VersionCardProps, VersionCardState> {\n  state: VersionCardState = {\n    collapsed: true\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"card border-0 bg-primary\">\n        <div className=\"card-block\">\n          <div className=\"card-icon\">\n            <i className={this.props.icon} />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <h3>{this.props.name}</h3>\n          <p>\n            {t(\"Version\")}:{\" \"}\n            {this.props.branch === \"master\" ? this.props.tag : \"vDev\"}\n          </p>\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            onClick={() =>\n              this.setState(prevState => ({ collapsed: !prevState.collapsed }))\n            }\n          >\n            {t(\"Details\")}\n          </button>\n          <Collapse isOpen={!this.state.collapsed}>\n            <table className=\"table table-borderless table-sm table-condensed mt-3 mb-0\">\n              <tbody>\n                <tr>\n                  <td>{t(\"Branch\")}</td>\n                  <td>{this.props.branch}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Tag\")}</td>\n                  <td>{this.props.tag}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"Hash\")}</td>\n                  <td>{this.props.hash}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(VersionCard);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Version Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport VersionCard from \"./VersionCard\";\nimport { WithAPIData } from \"../common/WithAPIData\";\n\nclass VersionInfo extends Component<ApiVersions & WithTranslation, {}> {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xl-4 col-md-4 col-xs-12\">\n          <VersionCard\n            name={t(\"Core\")}\n            icon=\"far fa-dot-circle fa-2x\"\n            branch={this.props.core.branch}\n            hash={this.props.core.hash}\n            tag={this.props.core.tag}\n          />\n        </div>\n        <div className=\"col-xl-4 col-md-4 col-xs-12\">\n          <VersionCard\n            name={t(\"FTL\")}\n            icon=\"fa fa-industry fa-2x\"\n            branch={this.props.ftl.branch}\n            hash={this.props.ftl.hash}\n            tag={this.props.ftl.tag}\n          />\n        </div>\n        <div className=\"col-xl-4 col-md-4 col-xs-12\">\n          <VersionCard\n            name={t(\"Web\")}\n            icon=\"far fa-list-alt fa-2x\"\n            branch={this.props.web.branch}\n            hash={this.props.web.hash}\n            tag={this.props.web.tag}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const initialData: ApiVersions = {\n  core: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  ftl: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  },\n  web: {\n    branch: \"unknown\",\n    hash: \"unknown\",\n    tag: \"unknown\"\n  }\n};\n\nexport const TranslatedVersionInfo = withTranslation([\"common\"])(VersionInfo);\n\nexport default (props: any) => (\n  <WithAPIData\n    apiCall={api.getVersion}\n    repeatOptions={{ interval: 600000, ignoreCancel: true }}\n    renderInitial={() => <TranslatedVersionInfo {...initialData} {...props} />}\n    renderOk={data => <TranslatedVersionInfo {...data} {...props} />}\n    renderErr={() => <TranslatedVersionInfo {...initialData} {...props} />}\n  />\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Label\n} from \"reactstrap\";\nimport { isValidHostname, isValidIpv4 } from \"../../util/validate\";\nimport Alert, { AlertType } from \"../common/Alert\";\n\nexport interface DHCPInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  settings: ApiDhcpSettings;\n}\n\nclass DHCPInfo extends Component<WithTranslation, DHCPInfoState> {\n  state: DHCPInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    settings: {\n      active: false,\n      ip_start: \"\",\n      ip_end: \"\",\n      router_ip: \"\",\n      lease_time: 0,\n      domain: \"\",\n      ipv6_support: false,\n      rapid_commit: true\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDhcpSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  loadDHCPInfo = () => {\n    this.loadHandler = makeCancelable(api.getDHCPInfo());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({ settings: res });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDHCPInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to DHCP settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDHCPInfo(this.state.settings)\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  /**\n   * Settings are valid if the value is valid or if DHCP is disabled and the value is empty.\n   *\n   * @param value the value to check\n   * @param validator the validation function\n   */\n  isSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.settings.active && value.length === 0) || validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isIpStartValid = this.isSettingValid(\n      this.state.settings.ip_start,\n      isValidIpv4\n    );\n    const isIpEndValid = this.isSettingValid(\n      this.state.settings.ip_end,\n      isValidIpv4\n    );\n    const isRouterIpValid = this.isSettingValid(\n      this.state.settings.router_ip,\n      isValidIpv4\n    );\n    const isLeaseTimeValid = this.state.settings.lease_time >= 0;\n    const isDomainValid = this.isSettingValid(\n      this.state.settings.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.settings.active}\n              onChange={this.onChange(\"active\", \"checked\")}\n            />\n            {t(\"Enabled\")}\n          </Label>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"startIP\" sm={2}>\n            {t(\"Start IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"startIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_start}\n              onChange={this.onChange(\"ip_start\", \"value\")}\n              invalid={!isIpStartValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"endIP\" sm={2}>\n            {t(\"End IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"endIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.ip_end}\n              onChange={this.onChange(\"ip_end\", \"value\")}\n              invalid={!isIpEndValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"routerIP\" sm={2}>\n            {t(\"Router IP\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"routerIP\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.router_ip}\n              onChange={this.onChange(\"router_ip\", \"value\")}\n              invalid={!isRouterIpValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"leaseTime\" sm={2}>\n            {t(\"Lease Time\")}\n          </Label>\n          <Col sm={10}>\n            <InputGroup>\n              <Input\n                id=\"leaseTime\"\n                disabled={!this.state.settings.active}\n                value={this.state.settings.lease_time}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  this.setState(oldState => ({\n                    settings: {\n                      ...oldState.settings,\n                      lease_time: parseInt(e.target.value)\n                    }\n                  }))\n                }\n                invalid={!isLeaseTimeValid}\n              />\n              <InputGroupAddon addonType=\"append\">Hours</InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"domain\" sm={2}>\n            {t(\"Domain\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"domain\"\n              disabled={!this.state.settings.active}\n              value={this.state.settings.domain}\n              onChange={this.onChange(\"domain\", \"value\")}\n              invalid={!isDomainValid}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={!this.state.settings.active}\n              checked={this.state.settings.ipv6_support}\n              onChange={this.onChange(\"ipv6_support\", \"checked\")}\n            />\n            {t(\"IPv6 Support\")}\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={!this.state.settings.active}\n              checked={this.state.settings.rapid_commit}\n              onChange={this.onChange(\"rapid_commit\", \"checked\")}\n            />\n            {t(\"Rapid Commit\")}\n          </Label>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={\n            this.state.processing ||\n            !isIpStartValid ||\n            !isIpEndValid ||\n            !isRouterIpValid ||\n            !isLeaseTimeValid ||\n            !isDomainValid\n          }\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\", \"api-errors\"])(DHCPInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A Upstream DNS List Item\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { Button, ListGroupItem } from \"reactstrap\";\n\nexport interface DnsListItemProps {\n  address: string;\n  onRemove: () => void;\n}\n\nconst DnsListItem = ({ address, onRemove }: DnsListItemProps) => (\n  <ListGroupItem>\n    {address}\n    <Button color=\"danger\" size=\"sm\" className=\"float-right\" onClick={onRemove}>\n      <span className=\"far fa-trash-alt\" />\n    </Button>\n  </ListGroupItem>\n);\n\nexport default DnsListItem;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preconfigured Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nexport interface PreconfiguredUpstream {\n  name: string;\n  primaryIpv4: string;\n  secondaryIpv4: string;\n  primaryIpv6: string;\n  secondaryIpv6: string;\n}\n\n/**\n * A list of preconfigured upstream DNS servers. Each item has primary and\n * secondary IPv4 and IPv6 server entries. Some addresses may be empty.\n */\nexport const preconfiguredUpstreams: PreconfiguredUpstream[] = [\n  {\n    name: \"OpenDNS (ECS)\",\n    primaryIpv4: \"208.67.222.222\",\n    secondaryIpv4: \"208.67.220.220\",\n    primaryIpv6: \"2620:119:35::35\",\n    secondaryIpv6: \"2620:119:53::53\"\n  },\n  {\n    name: \"Google (ECS)\",\n    primaryIpv4: \"8.8.8.8\",\n    secondaryIpv4: \"8.8.4.4\",\n    primaryIpv6: \"2001:4860:4860:0:0:0:0:8888\",\n    secondaryIpv6: \"2001:4860:4860:0:0:0:0:8844\"\n  },\n  {\n    name: \"Quad9 (filtered, DNSSEC)\",\n    primaryIpv4: \"9.9.9.9\",\n    secondaryIpv4: \"149.112.112.112\",\n    primaryIpv6: \"2620:fe::fe\",\n    secondaryIpv6: \"2620:fe::9\"\n  },\n  {\n    name: \"Quad9 (unfiltered, no DNSSEC)\",\n    primaryIpv4: \"9.9.9.10\",\n    secondaryIpv4: \"149.112.112.10\",\n    primaryIpv6: \"2620:fe::10\",\n    secondaryIpv6: \"2620:fe::fe:10\"\n  },\n  {\n    name: \"Quad9 (filtered + ECS)\",\n    primaryIpv4: \"9.9.9.11\",\n    secondaryIpv4: \"149.112.112.11\",\n    primaryIpv6: \"2620:fe::11\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Cloudflare\",\n    primaryIpv4: \"1.1.1.1\",\n    secondaryIpv4: \"1.0.0.1\",\n    primaryIpv6: \"2606:4700:4700::1111\",\n    secondaryIpv6: \"2606:4700:4700::1001\"\n  },\n  {\n    name: \"Level3\",\n    primaryIpv4: \"4.2.2.1\",\n    secondaryIpv4: \"4.2.2.2\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"Comodo\",\n    primaryIpv4: \"8.26.56.26\",\n    secondaryIpv4: \"8.20.247.20\",\n    primaryIpv6: \"\",\n    secondaryIpv6: \"\"\n  },\n  {\n    name: \"DNS.WATCH\",\n    primaryIpv4: \"84.200.69.80\",\n    secondaryIpv4: \"84.200.70.40\",\n    primaryIpv6: \"2001:1608:10:25:0:0:1c04:b12f\",\n    secondaryIpv6: \"2001:1608:10:25:0:0:9249:d69b\"\n  }\n];\n\nexport interface PreconfiguredUpstreamOption {\n  label: string;\n  address: string;\n}\n\n/**\n * The preconfigured servers, but with an entry for each address. This is used\n * when displaying the servers in a list.\n */\nexport const preconfiguredUpstreamOptions = preconfiguredUpstreams.flatMap(\n  upstream => {\n    // Parse the upstream address information into the new format\n    const parseUpstream = (address: string, order: string, type: string) => ({\n      label: upstream.name + \" \" + order + \" \" + type + \" (\" + address + \")\",\n      address\n    });\n\n    const parsedUpstreams: PreconfiguredUpstreamOption[] = [];\n\n    if (upstream.primaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv4, \"Primary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.secondaryIpv4.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv4, \"Secondary\", \"IPv4\")\n      );\n    }\n\n    if (upstream.primaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.primaryIpv6, \"Primary\", \"IPv6\")\n      );\n    }\n\n    if (upstream.secondaryIpv6.length > 0) {\n      parsedUpstreams.push(\n        parseUpstream(upstream.secondaryIpv6, \"Secondary\", \"IPv6\")\n      );\n    }\n\n    return parsedUpstreams;\n  }\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Input For New DNS List Items\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, RefObject } from \"react\";\nimport { Button, InputGroup, InputGroupAddon, ListGroupItem } from \"reactstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  PreconfiguredUpstreamOption,\n  preconfiguredUpstreamOptions\n} from \"./preconfiguredUpstreams\";\n\nexport interface DnsListNewItemProps {\n  onAdd: (address: string) => void;\n  isValid: (address: string) => boolean;\n  upstreams: string[];\n}\n\nexport interface DnsListNewItemState {\n  address: string;\n  selected: PreconfiguredUpstreamOption[];\n}\n\n/**\n * A component to add upstream DNS servers. The servers are either selected from\n * a list of preconfigured upstreams, or custom servers can be input.\n */\nclass DnsListNewItem extends Component<\n  DnsListNewItemProps & WithTranslation,\n  DnsListNewItemState\n> {\n  state: DnsListNewItemState = {\n    address: \"\",\n    selected: []\n  };\n\n  private readonly typeahead: RefObject<any>;\n\n  constructor(props: DnsListNewItemProps & WithTranslation) {\n    super(props);\n    this.typeahead = React.createRef();\n  }\n\n  /**\n   * Get the currently selected upstream address (either custom or preconfigured)\n   *\n   * @returns {string} the selected upstream address\n   */\n  getAddress = () => {\n    if (this.state.selected.length === 0) {\n      return this.state.address;\n    }\n\n    return this.state.selected[0].address;\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isAddressValid = this.props.isValid(this.getAddress());\n\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Typeahead\n            id=\"dns-list-typeahead\"\n            onInputChange={address => this.setState({ address })}\n            onChange={selected => this.setState({ selected })}\n            options={preconfiguredUpstreamOptions.filter(\n              upstream => !this.props.upstreams.includes(upstream.address)\n            )}\n            selected={this.state.selected}\n            emptyLabel={t(\"Detected custom upstream server\")}\n            positionFixed\n            ref={this.typeahead}\n          />\n\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                // Add the server to the list\n                this.props.onAdd(this.getAddress());\n\n                // Reset the input\n                this.setState({ address: \"\", selected: [] });\n                this.typeahead.current.getInstance().clear();\n              }}\n              disabled={!isAddressValid}\n            >\n              <span className=\"fa fa-plus\" />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n}\n\nexport default withTranslation(\"settings\")(DnsListNewItem);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * An Editable List of Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport { ListGroup } from \"reactstrap\";\nimport DnsListItem from \"./DnsListItem\";\nimport DnsListNewItem from \"./DnsListNewItem\";\nimport {\n  isValidIpv4OptionalPort,\n  isValidIpv6OptionalPort\n} from \"../../util/validate\";\n\nexport interface DnsListProps {\n  upstreams: string[];\n  onAdd: (upstream: string) => void;\n  onRemove: (upstream: string) => void;\n}\n\n/**\n * Check if an upstream address is unique and valid\n *\n * @param address the address to check\n * @param upstreams the list of current upstreams\n * @returns {boolean} if the upstream address is unique and valid\n */\nexport const isAddressValid = (\n  address: string,\n  upstreams: string[]\n): boolean => {\n  return (\n    !upstreams.includes(address) &&\n    (isValidIpv4OptionalPort(address) || isValidIpv6OptionalPort(address))\n  );\n};\n\nconst DnsList = ({ upstreams, onAdd, onRemove }: DnsListProps) => (\n  <ListGroup style={{ overflowY: \"scroll\", maxHeight: \"350px\" }}>\n    {upstreams.map(upstream => (\n      <DnsListItem\n        key={upstream}\n        onRemove={() => onRemove(upstream)}\n        address={upstream}\n      />\n    ))}\n    <DnsListNewItem\n      onAdd={onAdd}\n      isValid={(address: string) => isAddressValid(address, upstreams)}\n      upstreams={upstreams}\n    />\n  </ListGroup>\n);\n\nexport default DnsList;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: Upstream DNS Servers\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport { TFunction } from \"i18next\";\n\nexport interface ConditionalForwardingObject {\n  enabled: boolean;\n  ip: string;\n  domain: string;\n  cidr: number;\n}\n\nexport interface ConditionalForwardingSettingsProps {\n  settings: ConditionalForwardingObject;\n  onUpdate: (settings: ConditionalForwardingObject) => void;\n  isRouterIpValid: boolean;\n  isCidrValid: boolean;\n  isDomainValid: boolean;\n  t: TFunction;\n}\n\nconst ConditionalForwardingSettings = ({\n  settings,\n  onUpdate,\n  isRouterIpValid,\n  isCidrValid,\n  isDomainValid,\n  t\n}: ConditionalForwardingSettingsProps) => (\n  <Fragment>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.enabled}\n          onChange={e => onUpdate({ ...settings, enabled: e.target.checked })}\n        />\n        {t(\"Enabled\")}\n      </Label>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"routerIP\" sm={5}>\n        {t(\"Router IP\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"routerIP\"\n          disabled={!settings.enabled}\n          value={settings.ip}\n          onChange={e => onUpdate({ ...settings, ip: e.target.value })}\n          invalid={!isRouterIpValid}\n        />\n      </Col>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"cidr\" sm={5}>\n        {t(\"Prefix length (CIDR)\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"cidr\"\n          disabled={!settings.enabled}\n          value={settings.cidr === -1 ? \"\" : settings.cidr}\n          invalid={!isCidrValid}\n          onChange={e => {\n            let cidr = parseInt(e.target.value);\n\n            if (e.target.value.length === 0) {\n              // Use -1 as an internal representation of the empty string.\n              // It will show the form as invalid and make the text field\n              // function as the user expects it to.\n              cidr = -1;\n            } else if (isNaN(cidr)) {\n              return;\n            }\n\n            onUpdate({ ...settings, cidr });\n          }}\n        />\n      </Col>\n    </FormGroup>\n    <FormGroup row>\n      <Label for=\"localDomain\" sm={5}>\n        {t(\"Local Domain Name\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"localDomain\"\n          disabled={!settings.enabled}\n          value={settings.domain}\n          onChange={e => onUpdate({ ...settings, domain: e.target.value })}\n          invalid={!isDomainValid}\n        />\n      </Col>\n    </FormGroup>\n  </Fragment>\n);\n\nexport default ConditionalForwardingSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS :: DNS Options\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport { TFunction } from \"i18next\";\n\nexport interface DnsOptionsObject {\n  fqdnRequired: boolean;\n  bogusPriv: boolean;\n  dnssec: boolean;\n  listeningType: string;\n}\n\nexport interface DnsOptionSettingsProps {\n  settings: DnsOptionsObject;\n  onUpdate: (settings: DnsOptionsObject) => void;\n  t: TFunction;\n}\n\nconst DnsOptionSettings = ({\n  settings,\n  onUpdate,\n  t\n}: DnsOptionSettingsProps) => (\n  <Fragment>\n    <FormGroup row>\n      <Label for=\"listeningBehavior\" sm={5}>\n        {t(\"Interface listening behavior\")}\n      </Label>\n      <Col sm={7}>\n        <Input\n          id=\"listeningBehavior\"\n          type=\"select\"\n          value={settings.listeningType}\n          onChange={e =>\n            onUpdate({ ...settings, listeningType: e.target.value })\n          }\n        >\n          <option>all</option>\n          <option>local</option>\n          <option>single</option>\n        </Input>\n      </Col>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.fqdnRequired}\n          onChange={e =>\n            onUpdate({ ...settings, fqdnRequired: e.target.checked })\n          }\n        />\n        {t(\"Forward FQDNs only\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.bogusPriv}\n          onChange={e => onUpdate({ ...settings, bogusPriv: e.target.checked })}\n        />\n        {t(\"Only forward public reverse lookups\")}\n      </Label>\n    </FormGroup>\n    <FormGroup check>\n      <Label check>\n        <Input\n          type=\"checkbox\"\n          checked={settings.dnssec}\n          onChange={e => onUpdate({ ...settings, dnssec: e.target.checked })}\n        />\n        {t(\"Use DNSSEC\")}\n      </Label>\n    </FormGroup>\n  </Fragment>\n);\n\nexport default DnsOptionSettings;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport DnsList from \"./DnsList\";\nimport { Button, Col, Form, FormGroup } from \"reactstrap\";\nimport ConditionalForwardingSettings, {\n  ConditionalForwardingObject\n} from \"./ConditionalForwardingSettings\";\nimport DnsOptionSettings, { DnsOptionsObject } from \"./DnsOptionSettings\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport {\n  isValidHostname,\n  isValidIpv4,\n  isValidIpv4Cidr,\n  isValidIpv6,\n  isValidIpv6Cidr\n} from \"../../util/validate\";\n\nexport interface DNSInfoState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  upstreamDns: string[];\n  conditionalForwarding: ConditionalForwardingObject;\n  options: DnsOptionsObject;\n}\n\nclass DNSInfo extends Component<WithTranslation, DNSInfoState> {\n  state: DNSInfoState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    upstreamDns: [],\n    conditionalForwarding: {\n      enabled: false,\n      ip: \"\",\n      domain: \"\",\n      cidr: 24\n    },\n    options: {\n      fqdnRequired: false,\n      bogusPriv: false,\n      dnssec: false,\n      listeningType: \"single\"\n    }\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiDnsSettings>;\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  loadDNSInfo = () => {\n    this.loadHandler = makeCancelable(api.getDNSInfo());\n    this.loadHandler.promise\n      .then(res => {\n        // If the domain is empty, fill it in with a default.\n        const savedDomain = res.conditional_forwarding.domain;\n        const domain = savedDomain.length === 0 ? \"lan\" : savedDomain;\n\n        this.setState({\n          upstreamDns: res.upstream_dns,\n          conditionalForwarding: {\n            ...res.conditional_forwarding,\n            domain\n          },\n          options: {\n            fqdnRequired: res.options.fqdn_required,\n            bogusPriv: res.options.bogus_priv,\n            dnssec: res.options.dnssec,\n            listeningType: res.options.listening_type\n          }\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadDNSInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  handleUpstreamAdd = (upstream: string) => {\n    this.setState(prevState => ({\n      upstreamDns: prevState.upstreamDns.concat(upstream)\n    }));\n  };\n\n  handleUpstreamRemove = (upstream: string) => {\n    this.setState(prevState => ({\n      upstreamDns: prevState.upstreamDns.filter(item => item !== upstream)\n    }));\n  };\n\n  handleConditionalForwardingUpdate = (\n    conditionalForwarding: ConditionalForwardingObject\n  ) => {\n    this.setState({ conditionalForwarding });\n  };\n\n  handleDnsOptionsUpdate = (options: DnsOptionsObject) => {\n    this.setState({ options });\n  };\n\n  /**\n   * Save changes to DNS settings\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    const { t } = this.props;\n\n    this.setState({\n      alertMessage: t(\"Processing...\"),\n      alertType: \"info\",\n      showAlert: true,\n      processing: true\n    });\n\n    this.updateHandler = makeCancelable(\n      api.updateDNSInfo({\n        upstream_dns: this.state.upstreamDns,\n        conditional_forwarding: this.state.conditionalForwarding,\n        options: {\n          fqdn_required: this.state.options.fqdnRequired,\n          bogus_priv: this.state.options.bogusPriv,\n          dnssec: this.state.options.dnssec,\n          listening_type: this.state.options.listeningType\n        }\n      })\n    );\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: t(\"Successfully saved settings\"),\n          alertType: \"success\",\n          showAlert: true,\n          processing: false\n        });\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n\n        if (error instanceof Error) {\n          message = error.message;\n        } else {\n          // Translate the API's error message\n          message = t(\"API Error: {{error}}\", {\n            error: t(error.key, error.data)\n          });\n        }\n\n        this.setState({\n          alertMessage: message,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false\n        });\n      });\n  };\n\n  isCFSettingValid = (value: string, validator: (value: string) => boolean) => {\n    return (\n      (!this.state.conditionalForwarding.enabled && value.length === 0) ||\n      validator(value)\n    );\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const isRouterIpValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.ip,\n      address => isValidIpv4(address) || isValidIpv6(address)\n    );\n\n    const isCidrValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.cidr.toString(),\n      cidr => isValidIpv4Cidr(cidr) || isValidIpv6Cidr(cidr)\n    );\n\n    const isDomainValid = this.isCFSettingValid(\n      this.state.conditionalForwarding.domain,\n      isValidHostname\n    );\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.state.alertMessage}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Col sm={6}>\n            <h3>{t(\"Upstream DNS Servers\")}</h3>\n            <DnsList\n              onAdd={this.handleUpstreamAdd}\n              onRemove={this.handleUpstreamRemove}\n              upstreams={this.state.upstreamDns}\n            />\n          </Col>\n          <Col sm={6}>\n            <h3>{t(\"Conditional Forwarding\")}</h3>\n            <ConditionalForwardingSettings\n              settings={this.state.conditionalForwarding}\n              onUpdate={this.handleConditionalForwardingUpdate}\n              isRouterIpValid={isRouterIpValid}\n              isCidrValid={isCidrValid}\n              isDomainValid={isDomainValid}\n              t={t}\n            />\n            <h3>{t(\"DNS Options\")}</h3>\n            <DnsOptionSettings\n              settings={this.state.options}\n              onUpdate={this.handleDnsOptionsUpdate}\n              t={t}\n            />\n          </Col>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          disabled={\n            this.state.processing ||\n            !isRouterIpValid ||\n            !isCidrValid ||\n            !isDomainValid\n          }\n        >\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(DNSInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: DNS Cache Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Form, Col, Input, FormGroup, Label } from \"reactstrap\";\nimport api from \"../../util/api\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface CacheInfoState {\n  cache_size: number;\n  cache_evicted: number;\n  cache_inserted: number;\n}\n\nclass CacheInfo extends Component<WithTranslation, CacheInfoState> {\n  state: CacheInfoState = {\n    cache_size: 0,\n    cache_evicted: 0,\n    cache_inserted: 0\n  };\n\n  componentDidMount() {\n    this.loadCacheInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  private loadHandler: undefined | CancelablePromise<ApiCacheResponse>;\n\n  loadCacheInfo = () => {\n    this.loadHandler = makeCancelable(api.getCacheInfo());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({\n          cache_size: res.cache_size,\n          cache_evicted: res.cache_evicted,\n          cache_inserted: res.cache_inserted\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"cache_size\" sm={4}>\n            {t(\"DNS cache size\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"cache_size\"\n              value={this.state.cache_size.toLocaleString()}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"cache_evicted\" sm={4}>\n            {t(\"DNS cache evictions\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"cache_evicted\"\n              value={this.state.cache_evicted.toLocaleString()}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"cache_inserted\" sm={4}>\n            {t(\"DNS cache insertions\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"cache_inserted\"\n              value={this.state.cache_inserted.toLocaleString()}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"settings\"])(CacheInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Network component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport api from \"../../util/api\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport { Col, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nexport interface NetworkInfoState {\n  interface: string;\n  ipv4Address: string;\n  ipv6Address: string;\n  hostname: string;\n}\n\nclass NetworkInfo extends Component<WithTranslation, NetworkInfoState> {\n  state: NetworkInfoState = {\n    interface: \"\",\n    ipv4Address: \"\",\n    ipv6Address: \"\",\n    hostname: \"\"\n  };\n\n  private loadHandler: undefined | CancelablePromise<ApiNetworkSettings>;\n\n  loadNetworkInfo = () => {\n    this.loadHandler = makeCancelable(api.getNetworkInfo());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({\n          interface: res.interface,\n          ipv4Address: res.ipv4_address,\n          ipv6Address: res.ipv6_address,\n          hostname: res.hostname\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  componentDidMount() {\n    this.loadNetworkInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"interface\" sm={4}>\n            {t(\"Interface\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"interface\"\n              value={this.state.interface}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"ipv4_address\" sm={4}>\n            {t(\"IPv4 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv4_address\"\n              value={this.state.ipv4Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"ipv6_address\" sm={4}>\n            {t(\"IPv6 address\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"ipv6_address\"\n              value={this.state.ipv6Address}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"hostname\" sm={4}>\n            {t(\"Hostname\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"hostname\"\n              value={this.state.hostname}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(NetworkInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: FTL Information component\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Form, Col, Input, FormGroup, Label } from \"reactstrap\";\nimport api from \"../../util/api\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\n\nexport interface FTLInfoState {\n  fileSize: number;\n  queries: number;\n  sqliteVersion: string;\n}\n\nclass FTLInfo extends Component<WithTranslation, FTLInfoState> {\n  state: FTLInfoState = {\n    fileSize: 0,\n    queries: 0,\n    sqliteVersion: \"\"\n  };\n\n  componentDidMount() {\n    this.loadFTLInfo();\n  }\n\n  componentWillUnmount() {\n    if (this.loadHandler) {\n      this.loadHandler.cancel();\n    }\n  }\n\n  private loadHandler: undefined | CancelablePromise<ApiFtlDbResponse>;\n\n  loadFTLInfo = () => {\n    this.loadHandler = makeCancelable(api.getFTLdb());\n    this.loadHandler.promise\n      .then(res => {\n        this.setState({\n          fileSize: res.filesize,\n          queries: res.queries,\n          sqliteVersion: res.sqlite_version\n        });\n      })\n      .catch(ignoreCancel);\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"queries\" sm={4}>\n            {t(\"Queries\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"queries\"\n              value={this.state.queries.toLocaleString()}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"filesize\" sm={4}>\n            {t(\"Filesize\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"filesize\"\n              value={`${this.state.fileSize.toLocaleString()} B`}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"font-weight-bold\" for=\"sqliteversion\" sm={4}>\n            {t(\"SQLite version\")}\n          </Label>\n          <Col sm={8}>\n            <Input\n              plaintext\n              readOnly\n              id=\"sqliteversion\"\n              value={this.state.sqliteVersion}\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default withTranslation([\"settings\"])(FTLInfo);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Networking DNS & DHCP\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, ReactNode } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport DHCPInfo from \"../components/settings/DHCPInfo\";\nimport DNSInfo from \"../components/settings/DNSInfo\";\nimport CacheInfo from \"../components/settings/CacheInfo\";\nimport NetworkInfo from \"../components/settings/NetworkInfo\";\nimport FTLInfo from \"../components/settings/FTLInfo\";\n\nexport interface NetworkingState {\n  activeTab: string;\n}\n\nclass Networking extends Component<WithTranslation, NetworkingState> {\n  state = {\n    activeTab: \"network\"\n  };\n\n  /**\n   * Set the active tab to the input\n   *\n   * @param tab the tab ID to switch to\n   */\n  setTab = (tab: string) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  };\n\n  /**\n   * Create a navigation tab\n   *\n   * @param id the tab's ID\n   * @param name the tab's display name\n   * @returns {NavItem} the tab component\n   */\n  tab = (id: string, name: string): ReactNode => (\n    <NavItem>\n      <NavLink\n        active={this.state.activeTab === id}\n        onClick={() => this.setTab(id)}\n      >\n        {name}\n      </NavLink>\n    </NavItem>\n  );\n\n  /**\n   * Create tab content\n   *\n   * @param id the tab's ID\n   * @param component the component to render in the tab\n   * @returns {ReactNode} the tab content component\n   */\n  tabContent = (id: string, component: ReactNode): ReactNode => (\n    <TabPane tabId={id}>{component}</TabPane>\n  );\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Nav tabs>\n          {this.tab(\"network\", t(\"Network\"))}\n          {this.tab(\"dhcp\", t(\"DHCP\"))}\n          {this.tab(\"dns\", t(\"DNS\"))}\n          {this.tab(\"ftl\", t(\"FTL\"))}\n          {this.tab(\"cache\", t(\"Cache\"))}\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          {this.tabContent(\"network\", <NetworkInfo />)}\n          {this.tabContent(\"dhcp\", <DHCPInfo />)}\n          {this.tabContent(\"dns\", <DNSInfo />)}\n          {this.tabContent(\"ftl\", <FTLInfo />)}\n          {this.tabContent(\"cache\", <CacheInfo />)}\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"common\", \"settings\"])(Networking);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Forgot Password Reminder\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\n\nexport interface ForgotPasswordProps extends WithTranslation {\n  error: boolean;\n}\n\nexport interface ForgotPasswordState {\n  collapsed: boolean;\n}\n\nclass ForgotPassword extends Component<\n  ForgotPasswordProps,\n  ForgotPasswordState\n> {\n  state: ForgotPasswordState = {\n    collapsed: true\n  };\n\n  /**\n   * Handle collapsing the body when clicked\n   */\n  onClick = () => {\n    this.setState(prevState => ({ collapsed: !prevState.collapsed }));\n  };\n\n  /**\n   * @returns {Boolean|boolean} If the body should be expanded\n   */\n  isExpanded = () => this.props.error || !this.state.collapsed;\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div className=\"w-100\">\n        <div\n          className={\n            \"card mb-0 \" + (this.props.error ? \"border-danger\" : \"border-white\")\n          }\n        >\n          <div className={this.props.error ? \"bg-danger\" : \"bg-white pr-0\"}>\n            <span className={this.props.error ? \"float-left\" : \"float-right\"}>\n              <button\n                type=\"button\"\n                className={\n                  \"pr-0 \" + (this.props.error ? \"btn disabled\" : \"btn btn-link\")\n                }\n                onClick={this.onClick}\n              >\n                {t(\"Forgot Password\")}\n              </button>\n            </span>\n          </div>\n          <div\n            className={\n              \"card-body bg-white \" +\n              (this.isExpanded() ? \"\" : \" collapse \") +\n              (this.props.error ? \"p12\" : \"p-0\")\n            }\n          >\n            {t(\"forgot_password_description\")}\n            <pre>\n              <code>sudo pihole -a -p</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation(\"login\")(ForgotPassword);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Login page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport sha from \"sha.js\";\nimport api from \"../util/api\";\nimport logo from \"../img/logo.svg\";\nimport { routes } from \"../routes\";\nimport ForgotPassword from \"../components/login/ForgotPassword\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport config from \"../config\";\nimport { History, LocationDescriptorObject } from \"history\";\n\nexport interface LoginProps extends WithTranslation {\n  location: LocationDescriptorObject<{ from: Location }>;\n  history: History;\n}\n\nexport interface LoginState {\n  password: string;\n  error: boolean;\n  cookiesEnabled: boolean;\n}\n\nclass Login extends Component<LoginProps, LoginState> {\n  state = {\n    password: \"\",\n    error: false,\n    cookiesEnabled: false\n  };\n\n  componentDidMount() {\n    // Check if cookies are enabled\n    if (navigator.cookieEnabled) this.setState({ cookiesEnabled: true });\n  }\n\n  /**\n   * Update the password in the state.\n   *\n   * @param e the event\n   */\n  handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: e.target.value });\n  };\n\n  /**\n   * Try to authenticate the user\n   */\n  authenticate = (e?: FormEvent) => {\n    // Prevent the page from reloading when the user gets redirected\n    e && e.preventDefault();\n\n    // Hash the password twice before sending to the API\n    let hashedPassword = sha(\"sha256\")\n      .update(this.state.password)\n      .digest(\"hex\");\n    hashedPassword = sha(\"sha256\").update(hashedPassword).digest(\"hex\");\n\n    // Clear the state\n    this.setState({ password: \"\", error: false });\n\n    // Send the password to the API to authenticate the user\n    api\n      .authenticate(hashedPassword)\n      .then(() => {\n        api.loggedIn = true;\n\n        if (config.fakeAPI) {\n          // When using the fake API, set the cookie ourselves\n          document.cookie = \"user_id=;\";\n        }\n\n        // Redirect to the page the user was originally going to, or if that doesn't exist, go to home\n        const locationState = this.props.location.state || {\n          from: { pathname: \"/\" }\n        };\n        this.props.history.push(locationState.from.pathname);\n      })\n      // If there was an error, tell the user they used the wrong password\n      .catch(() => this.setState({ error: true }));\n  };\n\n  render() {\n    // If the user is already logged in, then go to the home page\n    if (api.loggedIn) return <Redirect to=\"/\" />;\n\n    const { t } = this.props;\n\n    return (\n      <div className=\"mainbox col-md-8 offset-md-2 col-lg-6 offset-lg-3 float-none\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <div className=\"text-center\">\n              <img src={logo} alt=\"Logo\" width=\"30%\" />\n            </div>\n            <br />\n\n            <div className=\"card-title text-center mb-0\">\n              <span className=\"logo-lg\" style={{ fontSize: \"25px\" }}>\n                Pi-\n                <b>hole</b>\n              </span>\n            </div>\n            <div className=\"m-0 text-center pt-0 pr-3 pb-3 pl-3\">\n              {t(\"Sign in to start your session\")}\n              {\n                // If the user tried to go to a protected page and is not logged in,\n                // tell them they will be redirected once login is successful\n                this.props.location.state &&\n                this.props.location.state.from.pathname in routes(t) ? (\n                  <Fragment>\n                    <br />\n                    {t('You will be transferred to the \"{{page}}\" page', {\n                      page: routes(t)[this.props.location.state.from.pathname]\n                    })}\n                  </Fragment>\n                ) : null\n              }\n              {\n                // If cookies are not enabled (or detected), show a warning\n                !this.state.cookiesEnabled ? (\n                  <div className=\"text-center text-danger\">\n                    {t(\"Verify that cookies are allowed for {{host}}\", {\n                      host: window.location.host\n                    })}\n                  </div>\n                ) : null\n              }\n            </div>\n            {this.state.error ? (\n              <div className=\"form-group has-error m-0 text-center pt-0 pr-3 pb-3 pl-3\">\n                <label className=\"control-label\">\n                  <i className=\"fa fa-times-circle-o\" /> {t(\"Wrong Password!\")}\n                </label>\n              </div>\n            ) : null}\n          </div>\n\n          <div className=\"card-body\">\n            <form id=\"loginform\" onSubmit={this.authenticate}>\n              <div\n                className={\n                  \"input-group\" + (this.state.error ? \" has-error\" : \"\")\n                }\n              >\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={this.state.password}\n                  onChange={this.handlePasswordChange}\n                  placeholder={t(\"Password\")}\n                  autoFocus\n                />\n              </div>\n              <br />\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg btn-block\"\n              >\n                {t(\"Log in\")}\n              </button>\n              <br />\n              <ForgotPassword error={this.state.error} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"login\", \"location\"])(Login);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Logout the user\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport api from \"../util/api\";\nimport config from \"../config\";\n\nexport default class Logout extends Component {\n  componentDidMount() {\n    api.loggedIn = false;\n\n    if (config.fakeAPI) {\n      // When using the fake API, don't try deleting the resource\n      // (it results in an error). Instead, delete the cookie.\n      document.cookie =\n        \"user_id=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    } else {\n      api.logout();\n    }\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * A button in the sidebar\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { MouseEventHandler } from \"react\";\n\nexport interface NavButtonProps {\n  name: string;\n  icon: string;\n  onClick: MouseEventHandler;\n}\n\nconst NavButton = ({ name, icon, onClick }: NavButtonProps) => (\n  <li className=\"nav-item\">\n    <a\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        onClick(e);\n      }}\n      className=\"nav-link\"\n    >\n      <i className={\"nav-icon \" + icon} />\n      {name}\n    </a>\n  </li>\n);\n\nNavButton.defaultProps = {\n  onClick: () => {}\n};\n\nexport default NavButton;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * The enable/disable sidebar button\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport NavButton from \"./NavButton\";\nimport NavDropdown from \"./NavDropdown\";\nimport { StatusContext } from \"./context/StatusContext\";\nimport {\n  CancelablePromise,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport {\n  Button,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader\n} from \"reactstrap\";\n\nexport interface EnableDisableProps {\n  status: Status;\n  refresh: (data?: ApiStatus) => void;\n  onSetStatus: (\n    action: StatusAction,\n    time?: number\n  ) => Promise<ApiSuccessResponse>;\n}\n\nexport interface EnableDisableState {\n  processing: boolean;\n  customModalShown: boolean;\n  customTime: number;\n  customMultiplier: number;\n}\n\nexport class EnableDisable extends Component<\n  EnableDisableProps & WithTranslation,\n  EnableDisableState\n> {\n  state: EnableDisableState = {\n    processing: false,\n    customModalShown: false,\n    customTime: 60,\n    customMultiplier: 60\n  };\n\n  private updateHandler: CancelablePromise<ApiSuccessResponse> | undefined;\n\n  /**\n   * Convert a status action into a status. ex. \"enable\" -> \"enabled\"\n   *\n   * @param action The action\n   * @returns {string} The associated status\n   */\n  getStatusFromAction = (action: StatusAction): Status => {\n    switch (action) {\n      case \"enable\":\n        return \"enabled\";\n      case \"disable\":\n        return \"disabled\";\n    }\n  };\n\n  /**\n   * Send a request to the API to update the status\n   *\n   * @param action The action to perform (\"enable\" or \"disable\")\n   * @param time The amount of time to disable for. This setting is optional.\n   */\n  setStatus = (action: StatusAction, time?: number) => {\n    if (this.state.processing) {\n      // Wait for the first status change to go through\n      return;\n    }\n\n    // Only allow one status update at a time\n    this.toggleProcessing();\n\n    // Send the status change request\n    this.updateHandler = makeCancelable(this.props.onSetStatus(action, time));\n    this.updateHandler.promise\n      // Refresh once we get a good response\n      .then(() =>\n        this.props.refresh({ status: this.getStatusFromAction(action) })\n      )\n      // Allow new status changes when finished\n      .then(this.toggleProcessing)\n      .catch(e => {\n        // Ignore canceled requests\n        if (e.isCanceled) {\n          return;\n        }\n\n        // Even if it failed, allow new status changes\n        this.toggleProcessing();\n      });\n  };\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Toggle the custom time modal\n   */\n  toggleModal = () => {\n    this.setState(prevState => ({\n      customModalShown: !prevState.customModalShown\n    }));\n  };\n\n  /**\n   * Toggle the processing flag\n   */\n  toggleProcessing = () => {\n    this.setState(prevState => ({ processing: !prevState.processing }));\n  };\n\n  /**\n   * Submit the request to disable blocking for the custom time that the user\n   * input.\n   *\n   * @param e the submit event\n   */\n  submitCustom = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({ customModalShown: false });\n    this.setStatus(\n      \"disable\",\n      this.state.customTime * this.state.customMultiplier\n    );\n  };\n\n  /**\n   * Render the custom time modal\n   *\n   * @returns {*} the modal component tree\n   */\n  renderModal = () => {\n    const { t } = this.props;\n\n    return (\n      <Modal\n        isOpen={this.state.customModalShown}\n        toggle={this.toggleModal}\n        style={{ maxWidth: \"300px\" }}\n      >\n        <Form onSubmit={this.submitCustom}>\n          <ModalHeader toggle={this.toggleModal}>\n            {t(\"Custom time\")}\n          </ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input\n                type=\"number\"\n                value={this.state.customTime}\n                onChange={e =>\n                  this.setState({ customTime: parseInt(e.target.value) })\n                }\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Input\n                  type=\"select\"\n                  value={this.state.customMultiplier}\n                  onChange={e =>\n                    this.setState({\n                      customMultiplier: parseInt(e.target.value)\n                    })\n                  }\n                >\n                  <option value={1}>{t(\"Seconds\")}</option>\n                  <option value={60}>{t(\"Minutes\")}</option>\n                </Input>\n              </InputGroupAddon>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\">{t(\"Apply\")}</Button>\n            <Button onClick={this.toggleModal}>{t(\"Cancel\")}</Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  };\n\n  render() {\n    const { t, status } = this.props;\n\n    switch (status) {\n      case \"enabled\":\n        return (\n          <NavDropdown name={t(\"Disable\")} icon=\"fa fa-stop\" isOpen={false}>\n            <NavButton\n              name={t(\"Permanently\")}\n              icon=\"fa fa-stop\"\n              onClick={() => this.setStatus(\"disable\")}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 10 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 10)}\n            />\n            <NavButton\n              name={t(\"For {{time}} seconds\", { time: 30 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 30)}\n            />\n            <NavButton\n              name={t(\"For {{time}} minutes\", { time: 5 })}\n              icon=\"fa fa-clock\"\n              onClick={() => this.setStatus(\"disable\", 5 * 60)}\n            />\n            <NavButton\n              name={t(\"Custom time\")}\n              icon=\"fa fa-clock\"\n              onClick={this.toggleModal}\n            />\n            {this.renderModal()}\n          </NavDropdown>\n        );\n      case \"disabled\":\n        return (\n          <NavButton\n            name={t(\"Enable\")}\n            icon=\"fa fa-play\"\n            onClick={() => this.setStatus(\"enable\")}\n          />\n        );\n      case \"unknown\":\n      default:\n        return null;\n    }\n  }\n}\n\nexport const TranslatedEnableDisable = withTranslation(\"common\")(EnableDisable);\n\nexport const EnableDisableContainer = () => (\n  <StatusContext.Consumer>\n    {({ status, refresh }) => (\n      <TranslatedEnableDisable\n        status={status}\n        refresh={refresh}\n        onSetStatus={api.setStatus}\n      />\n    )}\n  </StatusContext.Consumer>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Redux actions, which trigger state updates\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const preferencesRequest = createAction<void>(\"PREFERENCES_REQUEST\");\nexport const preferencesSuccess = createAction<ApiPreferences>(\n  \"PREFERENCES_SUCCESS\"\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings :: Web Interface preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ChangeEvent, Component, FormEvent } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  CancelablePromise,\n  ignoreCancel,\n  makeCancelable\n} from \"../../util/CancelablePromise\";\nimport api from \"../../util/api\";\nimport Alert, { AlertType } from \"../common/Alert\";\nimport { Button, Col, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport languages from \"../../languages.json\";\nimport config from \"../../config\";\nimport { ReduxState } from \"../../redux/state\";\nimport { preferencesSuccess } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nexport interface PreferenceSettingsProps {\n  settings: ApiPreferences;\n  onUpdate: (preferences: ApiPreferences) => void;\n}\n\nexport interface PreferenceSettingsState {\n  alertMessage: string;\n  alertType: AlertType;\n  showAlert: boolean;\n  processing: boolean;\n  translateMessage: boolean;\n  error: { key: string; data: any } | null;\n  settings: ApiPreferences;\n}\n\nclass PreferenceSettings extends Component<\n  PreferenceSettingsProps & WithTranslation,\n  PreferenceSettingsState\n> {\n  state: PreferenceSettingsState = {\n    alertMessage: \"\",\n    alertType: \"info\",\n    showAlert: false,\n    processing: false,\n    translateMessage: true,\n    error: null,\n    // Initial value is the current settings\n    settings: this.props.settings\n  };\n\n  private updateHandler: undefined | CancelablePromise<ApiSuccessResponse>;\n\n  componentWillUnmount() {\n    if (this.updateHandler) {\n      this.updateHandler.cancel();\n    }\n  }\n\n  /**\n   * Create a function which will update the key in the state with the value\n   * of the event attribute.\n   *\n   * @param key {string} the state to update\n   * @param attr {string} the event target attribute to use\n   * @returns {function(Event)}\n   */\n  onChange = (key: string, attr: string) => {\n    return (e: ChangeEvent) => {\n      // @ts-ignore\n      const value: string = e.target[attr];\n\n      this.setState(oldState => ({\n        settings: {\n          ...oldState.settings,\n          [key]: value\n        }\n      }));\n    };\n  };\n\n  /**\n   * Save changes to preferences\n   *\n   * @param e the submit event\n   */\n  saveSettings = (e: FormEvent) => {\n    e.preventDefault();\n\n    this.setState({\n      alertMessage: \"Processing...\",\n      error: null,\n      alertType: \"info\",\n      showAlert: true,\n      processing: true,\n      translateMessage: true\n    });\n\n    // Allow preference changes when using the fake API\n    const apiPromise = config.fakeAPI\n      ? Promise.resolve({ status: \"success\" } as ApiSuccessResponse)\n      : api.updatePreferences(this.state.settings);\n\n    this.updateHandler = makeCancelable(apiPromise);\n    this.updateHandler.promise\n      .then(() => {\n        this.setState({\n          alertMessage: \"Successfully saved preferences\",\n          alertType: \"success\",\n          showAlert: true,\n          processing: false,\n          translateMessage: true\n        });\n\n        // Update anyone using the preferences\n        this.props.onUpdate(this.state.settings);\n      })\n      .catch(ignoreCancel)\n      .catch(error => {\n        let message = \"\";\n        let apiError = null;\n        let translateMessage = true;\n\n        if (error instanceof Error) {\n          message = error.message;\n          translateMessage = false;\n        } else {\n          message = \"API Error: {{error}}\";\n          apiError = error;\n        }\n\n        this.setState({\n          alertMessage: message,\n          error: apiError,\n          alertType: \"danger\",\n          showAlert: true,\n          processing: false,\n          translateMessage\n        });\n      });\n  };\n\n  hideAlert = () => {\n    this.setState({ showAlert: false });\n  };\n\n  getAlertMessage = () => {\n    const { t } = this.props;\n\n    if (this.state.error) {\n      // Translate the API error\n      return t(this.state.alertMessage, {\n        error: t(this.state.error.key, this.state.error.data)\n      });\n    }\n\n    // Check if the message should be translated\n    if (this.state.translateMessage) {\n      return t(this.state.alertMessage);\n    }\n    return this.state.alertMessage;\n  };\n\n  render() {\n    const { t } = this.props;\n\n    const alert = this.state.showAlert ? (\n      <Alert\n        message={this.getAlertMessage()}\n        type={this.state.alertType}\n        onClick={this.hideAlert}\n      />\n    ) : null;\n\n    return (\n      <Form onSubmit={this.saveSettings}>\n        {alert}\n        <FormGroup row>\n          <Label for=\"layout\" sm={2}>\n            {t(\"Layout\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"layout\"\n              type=\"select\"\n              value={this.state.settings.layout}\n              onChange={this.onChange(\"layout\", \"value\")}\n            >\n              <option value=\"boxed\">{t(\"Boxed\")}</option>\n              <option value=\"traditional\">{t(\"Full\")}</option>\n            </Input>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"language\" sm={2}>\n            {t(\"Language\")}\n          </Label>\n          <Col sm={10}>\n            <Input\n              id=\"language\"\n              type=\"select\"\n              value={this.state.settings.language}\n              onChange={this.onChange(\"language\", \"value\")}\n            >\n              {languages.map(language => (\n                <option key={language.code} value={language.code}>\n                  {language.name}\n                </option>\n              ))}\n            </Input>\n          </Col>\n        </FormGroup>\n        <Button type=\"submit\" disabled={this.state.processing}>\n          {t(\"Apply\")}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst TranslatedPreferenceSettings = withTranslation([\n  \"common\",\n  \"settings\",\n  \"api-errors\",\n  \"preferences\"\n])(PreferenceSettings);\n\nconst mapStateToProps = (state: ReduxState) => ({\n  settings: state.preferences\n});\n\nconst mapActionsToProps = {\n  onUpdate: preferencesSuccess\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(TranslatedPreferenceSettings);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Navigation information\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport Dashboard from \"./views/Dashboard\";\nimport QueryLog from \"./components/log/QueryLog\";\nimport ExactWhitelist from \"./views/ExactWhitelist\";\nimport ExactBlacklist from \"./views/ExactBlacklist\";\nimport RegexWhitelist from \"./views/RegexWhitelist\";\nimport RegexBlacklist from \"./views/RegexBlacklist\";\nimport Versions from \"./views/Versions\";\nimport Networking from \"./views/Networking\";\nimport Login from \"./views/Login\";\nimport Logout from \"./views/Logout\";\nimport { EnableDisableContainer } from \"./components/common/EnableDisable\";\nimport Preferences from \"./views/Preferences\";\nimport { TFunction } from \"i18next\";\nimport { ComponentType } from \"react\";\n\nexport const routes = (t: TFunction): { [key: string]: string } => ({\n  \"/dashboard\": t(\"Dashboard\"),\n  \"/query-log\": t(\"Query Log\"),\n  \"/whitelist/exact\": `${t(\"Whitelist\")} (${t(\"Exact\")})`,\n  \"/whitelist/regex\": `${t(\"Whitelist\")} (${t(\"Regex\")})`,\n  \"/blacklist/exact\": `${t(\"Blacklist\")} (${t(\"Exact\")})`,\n  \"/blacklist/regex\": `${t(\"Blacklist\")} (${t(\"Regex\")})`,\n  \"/settings/versions\": t(\"Versions\"),\n  \"/settings/networking\": t(\"Networking\"),\n  \"/settings/preferences\": t(\"Preferences\"),\n  \"/login\": t(\"Login\"),\n  \"/logout\": t(\"Logout\")\n});\n\nexport interface RouteItem {\n  name: string;\n  url: string;\n  component: ComponentType<any>;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n}\n\nexport interface RouteCustomItem {\n  customComponent: ComponentType<any>;\n  auth: boolean;\n  authStrict?: boolean;\n  fakeRoute: boolean;\n}\n\nexport interface RouteGroup {\n  name: string;\n  url: string;\n  icon: string;\n  auth: boolean;\n  authStrict?: boolean;\n  children: RouteData[];\n}\n\nexport type RouteData = RouteItem | RouteGroup | RouteCustomItem;\n\nexport const nav: RouteData[] = [\n  {\n    name: \"Dashboard\",\n    url: \"/dashboard\",\n    component: Dashboard,\n    icon: \"fa fa-tachometer-alt\",\n    auth: false\n  },\n  {\n    name: \"Query Log\",\n    url: \"/query-log\",\n    component: QueryLog,\n    icon: \"fa fa-database\",\n    auth: true\n  },\n  {\n    name: \"Whitelist\",\n    url: \"/whitelist\",\n    icon: \"far fa-check-circle\",\n    auth: true,\n    children: [\n      {\n        name: \"Exact whitelist\",\n        url: \"/whitelist/exact\",\n        component: ExactWhitelist,\n        icon: \"fa fa-check-circle\",\n        auth: true\n      },\n      {\n        name: \"Regex whitelist\",\n        url: \"/whitelist/regex\",\n        component: RegexWhitelist,\n        icon: \"fa fa-check-circle\",\n        auth: true\n      }\n    ]\n  },\n  {\n    name: \"Blacklist\",\n    url: \"/blacklist\",\n    icon: \"fa fa-ban\",\n    auth: true,\n    children: [\n      {\n        name: \"Exact blacklist\",\n        url: \"/blacklist/exact\",\n        component: ExactBlacklist,\n        icon: \"fa fa-ban\",\n        auth: true\n      },\n      {\n        name: \"Regex blacklist\",\n        url: \"/blacklist/regex\",\n        component: RegexBlacklist,\n        icon: \"fa fa-ban\",\n        auth: true\n      }\n    ]\n  },\n  {\n    customComponent: EnableDisableContainer,\n    fakeRoute: true,\n    auth: true\n  },\n  {\n    name: \"Settings\",\n    url: \"/settings\",\n    icon: \"fa fa-wrench\",\n    auth: true,\n    children: [\n      {\n        name: \"Versions\",\n        url: \"/settings/versions\",\n        component: Versions,\n        icon: \"fa fa-download\",\n        auth: true\n      },\n      {\n        name: \"Networking\",\n        url: \"/settings/networking\",\n        component: Networking,\n        icon: \"fa fa-sitemap\",\n        auth: true\n      },\n      {\n        name: \"Preferences\",\n        url: \"/settings/preferences\",\n        component: Preferences,\n        icon: \"fa fa-sliders-h\",\n        auth: true\n      }\n    ]\n  },\n  {\n    name: \"Login\",\n    url: \"/login\",\n    component: Login,\n    icon: \"fa fa-user\",\n    auth: false,\n    authStrict: true\n  },\n  {\n    name: \"Logout\",\n    url: \"/logout\",\n    component: Logout,\n    icon: \"fa fa-user-times\",\n    auth: true,\n    authStrict: true\n  }\n];\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Dashboard page\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { Fragment } from \"react\";\nimport SummaryStats from \"../components/dashboard/SummaryStats\";\nimport QueriesGraph from \"../components/dashboard/QueriesGraph\";\nimport { ClientsGraphContainer } from \"../components/dashboard/ClientsGraph\";\nimport QueryTypesChart from \"../components/dashboard/QueryTypesChart\";\nimport UpstreamsChart from \"../components/dashboard/UpstreamsChart\";\nimport TopDomains from \"../components/dashboard/TopDomains\";\nimport TopBlockedDomains from \"../components/dashboard/TopBlockedDomains\";\nimport TopClients from \"../components/dashboard/TopClients\";\nimport api from \"../util/api\";\nimport { TimeRangeSelectorContainer } from \"../components/dashboard/TimeRangeSelector\";\nimport TopBlockedClients from \"../components/dashboard/TopBlockedClients\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    {api.loggedIn ? (\n      <div className=\"dashboard-time-selector\">\n        <TimeRangeSelectorContainer size=\"md\" />\n      </div>\n    ) : null}\n    <div className=\"row\">\n      <SummaryStats />\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <QueriesGraph />\n      </div>\n    </div>\n    {api.loggedIn ? (\n      <Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ClientsGraphContainer />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <QueryTypesChart />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <UpstreamsChart />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <TopDomains />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <TopBlockedDomains />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <TopClients />\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <TopBlockedClients />\n          </div>\n        </div>\n      </Fragment>\n    ) : null}\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings - Software versions\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport VersionInfo from \"../components/settings/VersionInfo\";\n\nexport default () => (\n  <div className=\"animated fadeIn\">\n    <div className=\"container-flex\">\n      <VersionInfo />\n    </div>\n  </div>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Settings Page - Web Interface Preferences\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React from \"react\";\nimport PreferenceSettings from \"../components/settings/PreferenceSettings\";\n\nexport default () => <PreferenceSettings />;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * React context objects\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ReactNode } from \"react\";\nimport { StatusProvider } from \"./StatusContext\";\nimport { TimeRangeProvider } from \"./TimeRangeContext\";\n\n/**\n * Provide all of the necessary context needed at the root level to the\n * children. Currently, this includes status and time range (for the dashboard).\n */\nexport const GlobalContextProvider = ({\n  children\n}: {\n  children: ReactNode;\n}) => (\n  <StatusProvider>\n    <TimeRangeProvider>{children}</TimeRangeProvider>\n  </StatusProvider>\n);\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Main container of the web interface (performs main routing)\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport React, { ComponentType, ReactNode, Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Header, { mobileSidebarHide } from \"../components/common/Header\";\nimport Sidebar from \"../components/common/Sidebar\";\nimport Footer from \"../components/common/Footer\";\nimport api from \"../util/api\";\nimport {\n  nav,\n  RouteCustomItem,\n  RouteData,\n  RouteGroup,\n  RouteItem\n} from \"../routes\";\nimport { GlobalContextProvider } from \"../components/common/context\";\n\nexport default (props: any) => (\n  <div className=\"app\">\n    <GlobalContextProvider>\n      <Header />\n      <div className=\"app-body\">\n        <Sidebar items={nav} {...props} />\n        <main className=\"main\" onClick={mobileSidebarHide}>\n          <div className=\"container-fluid mt-4\">\n            <Suspense fallback={null}>\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/dashboard\" />\n                {nav.map(createRoute)}\n              </Switch>\n            </Suspense>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </GlobalContextProvider>\n  </div>\n);\n\n/**\n * Create a route from the route data.\n * If the route has children, an array of routes will be returned.\n *\n * @param routeData the route data (see routes.tsx)\n */\nconst createRoute = (routeData: RouteData): ReactNode => {\n  if ((routeData as RouteCustomItem).fakeRoute) {\n    return;\n  }\n\n  if ((routeData as RouteGroup).children) {\n    return (routeData as RouteGroup).children.map(createRoute);\n  }\n\n  const navItem: RouteItem = routeData as RouteItem;\n\n  return navItem.auth ? (\n    <AuthRoute\n      key={navItem.url}\n      path={navItem.url}\n      component={navItem.component}\n    />\n  ) : (\n    <Route key={navItem.url} path={navItem.url} component={navItem.component} />\n  );\n};\n\ninterface AuthRouteProps {\n  /**\n   * The component that the authenticated user will see\n   */\n  component: ComponentType<any>;\n\n  /**\n   * The route path\n   */\n  path: string;\n}\n\n/**\n * Create a route which requires authentication.\n * If the user is unauthenticated, they will be redirected to the login page.\n * If the user logs in at the redirected login page, they will go to their original destination.\n *\n * @param authProps The component and path to use for the route\n * @returns Route\n */\nconst AuthRoute = (authProps: AuthRouteProps) => {\n  // Typescript only likes capitalized components in its TSX\n  const Component = authProps.component;\n\n  return (\n    <Route\n      path={authProps.path}\n      render={props =>\n        api.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Provide the base path for relative paths\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * Get the base path of the web interface. The API will inject a base element\n * for this purpose, but if the web interface is not hosted by the API, it will\n * fall back to the public URL set by Create React App.\n *\n * @returns The base path to use\n */\nexport const getBasePath = (): string => {\n  const baseElement = document.getElementsByTagName(\"base\")[0];\n\n  if (baseElement) {\n    return new URL(baseElement.href).pathname;\n  }\n\n  return process.env.PUBLIC_URL;\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preferences State Functionality\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\n/**\n * The key used to store preferences in local storage\n */\nexport const WEB_PREFERENCES_STORAGE_KEY = \"webPreferences\";\n\n/**\n * The default preferences. These preferences are used until the API responds\n * with the real preferences, unless there are cached preferences available.\n */\nexport const defaultPreferences: ApiPreferences = {\n  layout: \"boxed\",\n  language: \"en\"\n};\n\n/**\n * Load the initial web interface preferences. Cached preferences from local\n * storage will be used if available, otherwise default preferences will be\n * used.\n */\nexport const loadInitialPreferences = (): ApiPreferences => {\n  const cachedPreferencesString = localStorage.getItem(\n    WEB_PREFERENCES_STORAGE_KEY\n  );\n\n  if (cachedPreferencesString === null) {\n    return defaultPreferences;\n  }\n\n  try {\n    return JSON.parse(cachedPreferencesString);\n  } catch (e) {\n    return defaultPreferences;\n  }\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Configuration of the Redux state\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { loadInitialPreferences } from \"./preferences\";\n\nexport interface ReduxState {\n  preferences: ApiPreferences;\n}\n\nexport const initialState: ReduxState = {\n  preferences: loadInitialPreferences()\n};\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Redux reducers, which modify the state\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\nimport { initialState } from \"../state\";\nimport { preferencesSuccess } from \"../actions\";\n\nexport default createReducer(initialState, {\n  [preferencesSuccess.type]: (state, action: PayloadAction<ApiPreferences>) => {\n    state.preferences = action.payload;\n    return state;\n  }\n});\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Saga for updating language in i18next\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { call } from \"redux-saga/effects\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\nimport i18n from \"i18next\";\n\n/**\n * Update the language in i18next when it changes\n *\n * @param action The action with the language to apply\n */\nexport function* applyLanguage(action: PayloadAction<ApiPreferences>) {\n  const language = action.payload.language;\n\n  // Only change the language if it's different\n  if (i18n.language !== language) {\n    yield call([i18n, \"changeLanguage\"], language);\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Saga for updating layout on change\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call } from \"redux-saga/effects\";\n\n/**\n * Apply the web interface layout by changing the classes on document.body\n *\n * @param action The action with the layout to apply\n */\nexport function* applyLayout(action: PayloadAction<ApiPreferences>) {\n  switch (action.payload.layout) {\n    case \"boxed\":\n      yield call([document.body.classList, \"add\"], \"boxcontainer\");\n      yield call([document.body.classList, \"add\"], \"background-image\");\n      break;\n    case \"traditional\":\n      yield call([document.body.classList, \"remove\"], \"boxcontainer\");\n      yield call([document.body.classList, \"remove\"], \"background-image\");\n      break;\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Preferences Saga\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { call, put, takeEvery, select } from \"redux-saga/effects\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\nimport api from \"../../util/api\";\nimport { preferencesRequest, preferencesSuccess } from \"../actions\";\nimport config from \"../../config\";\nimport { WEB_PREFERENCES_STORAGE_KEY } from \"../state/preferences\";\nimport { applyLanguage } from \"./applyLanguage\";\nimport { applyLayout } from \"./applyLayout\";\n\n/**\n * Sets up action listeners and triggers the initial preferences fetch\n */\nexport function* watchPreferences() {\n  yield takeEvery(preferencesRequest.type, fetchPreferences);\n  yield takeEvery(preferencesSuccess.type, cachePreferences);\n  yield takeEvery(preferencesSuccess.type, applyLanguage);\n  yield takeEvery(preferencesSuccess.type, applyLayout);\n\n  // Perform initial request\n  yield put(preferencesRequest());\n}\n\n/**\n * A saga to fetch web interface preferences from the API\n */\nexport function* fetchPreferences() {\n  let preferences: ApiPreferences;\n\n  if (config.fakeAPI) {\n    // Use the existing preferences\n    preferences = yield select(state => state.preferences);\n  } else {\n    // Get the preferences from the API\n    preferences = yield call(api.getPreferences);\n  }\n\n  // Update the store\n  yield put(preferencesSuccess(preferences));\n}\n\n/**\n * Cache the preferences in local storage\n *\n * @param action The action with the preferences to cache\n */\nexport function* cachePreferences(action: PayloadAction<ApiPreferences>) {\n  // Cache the preferences in local storage\n  yield call(\n    [localStorage, \"setItem\"],\n    WEB_PREFERENCES_STORAGE_KEY,\n    JSON.stringify(action.payload)\n  );\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Auto-login Saga\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { call } from \"redux-saga/effects\";\nimport api from \"../../util/api\";\nimport config from \"../../config\";\n\n/**\n * A saga to automatically log in.\n *\n * Steps:\n * 1. Verify the logged in status with the server.\n * 2. If we thought we were logged out but the API does not require\n *    authentication, refresh the page so we start in logged-in mode.\n *\n * An alternative to refreshing the page is to provide the logged in state via\n * Redux. Until then, we have to refresh the page to update everything that uses\n * it.\n */\nexport function* autoLogin() {\n  try {\n    // Check if we are logged in\n    yield call(api.checkAuthStatus);\n  } catch (e) {\n    if (e.key === \"unauthorized\") {\n      // The API requires authentication and we are not already logged in\n      return;\n    }\n\n    // An unexpected error occurred while checking our logged in state\n    throw e;\n  }\n\n  if (!api.loggedIn) {\n    if (config.fakeAPI) {\n      // When using the fake API, set the cookie ourselves\n      document.cookie = \"user_id=;\";\n    }\n\n    // No authentication is required for this API (we got a successful response\n    // and have a valid cookie), but we initialized assuming we are not logged\n    // in. Refresh the page so we start in logged-in mode.\n\n    // @ts-ignore\n    // It tries to use the deprecated reload which takes a boolean argument\n    yield call([window.location, \"reload\"]);\n  }\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Redux sagas, which control side effects\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport { spawn } from \"redux-saga/effects\";\nimport { watchPreferences } from \"./preferences\";\nimport { autoLogin } from \"./autoLogin\";\n\n/**\n * The root saga which sets up all other sagas\n */\nexport function* rootSaga() {\n  yield spawn(watchPreferences);\n  yield spawn(autoLogin);\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Configuration of the Redux store\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport {\n  configureStore,\n  EnhancedStore,\n  getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./reducers\";\nimport { ReduxState } from \"./state\";\nimport { rootSaga } from \"./sagas\";\n\n/**\n * A Redux store with a function to start the Saga\n */\nexport interface SagaStore extends EnhancedStore<ReduxState> {\n  /**\n   * Call this to start running the Sagas\n   */\n  runSaga: () => void;\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n  sagaMiddleware,\n  // In development, this will include middleware for verifying immutable and\n  // serializable state. The thunk middleware is excluded because we are using\n  // sagas instead.\n  ...getDefaultMiddleware({ thunk: false })\n];\n\nconst store = configureStore({\n  reducer,\n  middleware\n}) as SagaStore;\n\nstore.runSaga = () => {\n  sagaMiddleware.run(rootSaga);\n};\n\nexport default store;\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Internationalization setup\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\n\nimport i18n from \"i18next\";\nimport XHR from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport config from \"../config\";\nimport languages from \"../languages.json\";\n\n/**\n * Set up the internationalization service\n *\n * @param ajax An optional ajax function to use when fetching translations\n */\nexport function setupI18n(ajax?: any) {\n  return i18n\n    .use(XHR)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      fallbackLng: \"en\",\n      whitelist: languages.map(lang => lang.code),\n      ns: [\"common\"],\n      defaultNS: \"common\",\n      fallbackNS: [\n        \"dashboard\",\n        \"footer\",\n        \"lists\",\n        \"location\",\n        \"login\",\n        \"query-log\",\n        \"settings\",\n        \"api-errors\",\n        \"preferences\",\n        \"time-ranges\"\n      ],\n      nsSeparator: false,\n      keySeparator: false,\n      returnEmptyString: false,\n      debug: config.developmentMode,\n      interpolation: {\n        // Handled by React\n        escapeValue: false\n      },\n      backend: {\n        loadPath: process.env.PUBLIC_URL + \"/i18n/{{lng}}/{{ns}}.json\",\n        ajax\n      }\n    });\n}\n","/* Pi-hole: A black hole for Internet advertisements\n * (c) 2019 Pi-hole, LLC (https://pi-hole.net)\n * Network-wide ad blocking via your own hardware.\n *\n * Web Interface\n * Starting point for React\n *\n * This file is copyright under the latest version of the EUPL.\n * Please see LICENSE file for your rights under this license. */\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./scss/style.scss\";\nimport Full from \"./containers/Full\";\nimport api from \"./util/api\";\nimport { setupI18n } from \"./util/i18n\";\nimport { getBasePath } from \"./util/basePath\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n// Before rendering anything, check if there is a session cookie.\n// Note: the user could have an old session, so the first API call\n// will set loggedIn to false if necessary\napi.loggedIn = document.cookie.includes(\"user_id=\");\n\nsetupI18n();\nstore.runSaga();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={getBasePath()}>\n      <Switch>\n        <Route path=\"/\" name=\"Home\" component={Full} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}