version: 2

.install_packages: &install_packages
  run:
    name: "Install Packages"
    command: npm ci

.test: &test
  run:
    name: "Test"
    command: npm run coverage -- --maxWorkers=4

.store_version: &store_version
  run:
    name: "Store Version"
    command: |
      BRANCH=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "master")
      echo "$CIRCLE_TAG $BRANCH ${CIRCLE_SHA1::7}" > build/VERSION
      cat build/VERSION

jobs:
  build:
    docker:
    - image: pihole/web-build:12
    steps:
    - checkout
    - restore_cache:
        keys:
          - npm-deps-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
          - npm-deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
    - *install_packages
    - run:
        name: "Check Formatting"
        command: |
          npm run check-format
    - *test
    - run:
        name: "Build"
        command: |
          rm -r public/fakeAPI
          npm run build
    - *store_version
    - run:
        name: "Upload"
        command: |
          [[ -z "$FTL_SECRET" || "$CIRCLE_PR_NUMBER" != "" ]] && exit 0
          DIR="${CIRCLE_TAG:-${CIRCLE_BRANCH}}"
          tar -czvf pihole-web.tar.gz -C build .
          mkdir -p ~/.ssh
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          sftp -b - $SSH_USER@$SSH_HOST <<< "-mkdir ${DIR}
          put pihole-web.tar.gz ${DIR}"
    - run:
        name: "Upload Code Coverage"
        command: |
          npm install codecov -g
          codecov
    - save_cache:
        key: npm-deps-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
        paths:
          - ~/.npm/

  deploy:
    environment:
      PUBLIC_URL: /
    docker:
    - image: node:12
    steps:
    - checkout
    - *install_packages
    - *test
    - run:
        name: "Build"
        command: |
          rm public/fakeAPI/.gitignore # Make sure that the fakeAPI data is deployed
          npm run build-fake
          echo "web.pi-hole.net" > build/CNAME
    - *store_version
    - run:
        name: "Deploy"
        command: |
          git clone --quiet --depth 1 -b gh-pages https://pralor:$GITHUB_TOKEN@github.com/pi-hole/web.git deploy
          shopt -s extglob # Enable extra globs, like !()
          rm -rf deploy/!(.|..|.git)
          cp -r build/* deploy/
          cd deploy
          git config user.email "36384445+pralor@users.noreply.github.com"
          git config user.name "pralor"
          git add -A
          git commit -m "Deploy pi-hole/web to web.pi-hole.net"
          git push --quiet

workflows:
  version: 2
  build:
    jobs:
    - build
    - deploy:
        filters:
          branches:
            only: master
